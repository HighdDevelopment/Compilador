Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> ROBOT_R var_def PROCS
Rule 2     prog -> ROBOT_R var_def PROCS bloque_def
Rule 3     var_def -> VARS ID_list SEMICOLON
Rule 4     ID_list -> ID
Rule 5     ID_list -> ID_list COMMA ID
Rule 6     bloque_def -> id_def
Rule 7     bloque_def -> bloque_def id_def
Rule 8     id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET
Rule 9     id_def -> ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET
Rule 10    id_func -> ID
Rule 11    id_func -> ID COMMA id_func
Rule 12    id_func -> <empty>
Rule 13    func_def -> function_def
Rule 14    func_def -> func_def SEMICOLON function_def
Rule 15    then_block -> LBRACKET func_def RBRACKET
Rule 16    then_block -> LBRACKET if_else_def RBRACKET
Rule 17    if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block
Rule 18    if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block
Rule 19    function_def -> assignTo_def
Rule 20    function_def -> put_def
Rule 21    function_def -> moveandjumptothe_def
Rule 22    function_def -> moveandjumpindir_def
Rule 23    function_def -> move_def
Rule 24    function_def -> goto_def
Rule 25    function_def -> turn_def
Rule 26    function_def -> face_def
Rule 27    function_def -> nop_def
Rule 28    assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID
Rule 29    put_def -> put DOSPUNTOS ID COMMA ITEMS
Rule 30    put_def -> put DOSPUNTOS INTEGER COMMA ITEMS
Rule 31    put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS
Rule 32    put_def -> pick DOSPUNTOS ID COMMA ITEMS
Rule 33    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION
Rule 34    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 35    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 36    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 37    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 38    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 39    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 40    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 41    moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL
Rule 42    moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 43    moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 44    moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 45    move_def -> move DOSPUNTOS ID
Rule 46    move_def -> move DOSPUNTOS INTEGER
Rule 47    goto_def -> goto DOSPUNTOS ID COMMA ID
Rule 48    goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER
Rule 49    goto_def -> goto DOSPUNTOS ID COMMA INTEGER
Rule 50    goto_def -> goto DOSPUNTOS INTEGER COMMA ID
Rule 51    turn_def -> turn DOSPUNTOS DIRECTION_TURN
Rule 52    turn_def -> turn DOSPUNTOS LEFTANDRIGHT
Rule 53    face_def -> face DOSPUNTOS CARDINAL
Rule 54    nop_def -> nop DOSPUNTOS

Terminals, with rules where they appear

CARDINAL             : 41 42 43 44 53
COMMA                : 5 11 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 47 48 49 50
DIRECTION            : 33 34 35 36
DIRECTION_TURN       : 51
DOSPUNTOS            : 17 17 18 18 18 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
ID                   : 4 5 8 9 10 11 28 29 32 33 36 37 40 41 44 45 47 47 49 50
INTEGER              : 28 30 31 34 35 38 39 42 43 46 48 48 49 50
ITEMS                : 29 30 31 32
LBRACKET             : 8 9 15 16
LEFTANDRIGHT         : 37 38 39 40 52
PLECA                : 8 8 9 9
PROCS                : 1 2
RBRACKET             : 8 9 15 16
ROBOT_R              : 1 2
SEMICOLON            : 3 14
VARS                 : 3
assignTo             : 28
else                 : 18
error                : 
face                 : 53
goto                 : 47 48 49 50
if                   : 17 18
jumpindir            : 43 44
jumptothe            : 35 36 39 40
move                 : 45 46
moveindir            : 41 42
movetothe            : 33 34 37 38
nop                  : 54
pick                 : 31 32
put                  : 29 30
then                 : 17 18
turn                 : 51 52

Nonterminals, with rules where they appear

ID_list              : 3 5
assignTo_def         : 19
bloque_def           : 2 7
face_def             : 26
func_def             : 8 14 15
function_def         : 13 14 17 18
goto_def             : 24
id_def               : 6 7
id_func              : 8 9 11
if_else_def          : 9 16
move_def             : 23
moveandjumpindir_def : 22
moveandjumptothe_def : 21
nop_def              : 27
prog                 : 0
put_def              : 20
then_block           : 17 18 18
turn_def             : 25
var_def              : 1 2

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . ROBOT_R var_def PROCS
    (2) prog -> . ROBOT_R var_def PROCS bloque_def

    ROBOT_R         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> ROBOT_R . var_def PROCS
    (2) prog -> ROBOT_R . var_def PROCS bloque_def
    (3) var_def -> . VARS ID_list SEMICOLON

    VARS            shift and go to state 4

    var_def                        shift and go to state 3

state 3

    (1) prog -> ROBOT_R var_def . PROCS
    (2) prog -> ROBOT_R var_def . PROCS bloque_def

    PROCS           shift and go to state 5


state 4

    (3) var_def -> VARS . ID_list SEMICOLON
    (4) ID_list -> . ID
    (5) ID_list -> . ID_list COMMA ID

    ID              shift and go to state 7

    ID_list                        shift and go to state 6

state 5

    (1) prog -> ROBOT_R var_def PROCS .
    (2) prog -> ROBOT_R var_def PROCS . bloque_def
    (6) bloque_def -> . id_def
    (7) bloque_def -> . bloque_def id_def
    (8) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET

    $end            reduce using rule 1 (prog -> ROBOT_R var_def PROCS .)
    ID              shift and go to state 10

    bloque_def                     shift and go to state 8
    id_def                         shift and go to state 9

state 6

    (3) var_def -> VARS ID_list . SEMICOLON
    (5) ID_list -> ID_list . COMMA ID

    SEMICOLON       shift and go to state 11
    COMMA           shift and go to state 12


state 7

    (4) ID_list -> ID .

    SEMICOLON       reduce using rule 4 (ID_list -> ID .)
    COMMA           reduce using rule 4 (ID_list -> ID .)


state 8

    (2) prog -> ROBOT_R var_def PROCS bloque_def .
    (7) bloque_def -> bloque_def . id_def
    (8) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET

    $end            reduce using rule 2 (prog -> ROBOT_R var_def PROCS bloque_def .)
    ID              shift and go to state 10

    id_def                         shift and go to state 13

state 9

    (6) bloque_def -> id_def .

    ID              reduce using rule 6 (bloque_def -> id_def .)
    $end            reduce using rule 6 (bloque_def -> id_def .)


state 10

    (8) id_def -> ID . LBRACKET PLECA id_func PLECA func_def RBRACKET
    (9) id_def -> ID . LBRACKET PLECA id_func PLECA if_else_def RBRACKET

    LBRACKET        shift and go to state 14


state 11

    (3) var_def -> VARS ID_list SEMICOLON .

    PROCS           reduce using rule 3 (var_def -> VARS ID_list SEMICOLON .)


state 12

    (5) ID_list -> ID_list COMMA . ID

    ID              shift and go to state 15


state 13

    (7) bloque_def -> bloque_def id_def .

    ID              reduce using rule 7 (bloque_def -> bloque_def id_def .)
    $end            reduce using rule 7 (bloque_def -> bloque_def id_def .)


state 14

    (8) id_def -> ID LBRACKET . PLECA id_func PLECA func_def RBRACKET
    (9) id_def -> ID LBRACKET . PLECA id_func PLECA if_else_def RBRACKET

    PLECA           shift and go to state 16


state 15

    (5) ID_list -> ID_list COMMA ID .

    SEMICOLON       reduce using rule 5 (ID_list -> ID_list COMMA ID .)
    COMMA           reduce using rule 5 (ID_list -> ID_list COMMA ID .)


state 16

    (8) id_def -> ID LBRACKET PLECA . id_func PLECA func_def RBRACKET
    (9) id_def -> ID LBRACKET PLECA . id_func PLECA if_else_def RBRACKET
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 17
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 18

state 17

    (10) id_func -> ID .
    (11) id_func -> ID . COMMA id_func

    PLECA           reduce using rule 10 (id_func -> ID .)
    COMMA           shift and go to state 19


state 18

    (8) id_def -> ID LBRACKET PLECA id_func . PLECA func_def RBRACKET
    (9) id_def -> ID LBRACKET PLECA id_func . PLECA if_else_def RBRACKET

    PLECA           shift and go to state 20


state 19

    (11) id_func -> ID COMMA . id_func
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 17
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 21

state 20

    (8) id_def -> ID LBRACKET PLECA id_func PLECA . func_def RBRACKET
    (9) id_def -> ID LBRACKET PLECA id_func PLECA . if_else_def RBRACKET
    (13) func_def -> . function_def
    (14) func_def -> . func_def SEMICOLON function_def
    (17) if_else_def -> . if DOSPUNTOS function_def then DOSPUNTOS then_block
    (18) if_else_def -> . if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block
    (19) function_def -> . assignTo_def
    (20) function_def -> . put_def
    (21) function_def -> . moveandjumptothe_def
    (22) function_def -> . moveandjumpindir_def
    (23) function_def -> . move_def
    (24) function_def -> . goto_def
    (25) function_def -> . turn_def
    (26) function_def -> . face_def
    (27) function_def -> . nop_def
    (28) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (29) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (30) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (31) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (32) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (33) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (34) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (35) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (37) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (39) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (41) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (42) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (43) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (45) move_def -> . move DOSPUNTOS ID
    (46) move_def -> . move DOSPUNTOS INTEGER
    (47) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (48) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (49) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (50) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (51) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (52) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (53) face_def -> . face DOSPUNTOS CARDINAL
    (54) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 25
    assignTo        shift and go to state 35
    put             shift and go to state 36
    pick            shift and go to state 37
    movetothe       shift and go to state 38
    jumptothe       shift and go to state 39
    moveindir       shift and go to state 40
    jumpindir       shift and go to state 41
    move            shift and go to state 42
    goto            shift and go to state 43
    turn            shift and go to state 44
    face            shift and go to state 45
    nop             shift and go to state 46

    func_def                       shift and go to state 22
    if_else_def                    shift and go to state 23
    function_def                   shift and go to state 24
    assignTo_def                   shift and go to state 26
    put_def                        shift and go to state 27
    moveandjumptothe_def           shift and go to state 28
    moveandjumpindir_def           shift and go to state 29
    move_def                       shift and go to state 30
    goto_def                       shift and go to state 31
    turn_def                       shift and go to state 32
    face_def                       shift and go to state 33
    nop_def                        shift and go to state 34

state 21

    (11) id_func -> ID COMMA id_func .

    PLECA           reduce using rule 11 (id_func -> ID COMMA id_func .)


state 22

    (8) id_def -> ID LBRACKET PLECA id_func PLECA func_def . RBRACKET
    (14) func_def -> func_def . SEMICOLON function_def

    RBRACKET        shift and go to state 47
    SEMICOLON       shift and go to state 48


state 23

    (9) id_def -> ID LBRACKET PLECA id_func PLECA if_else_def . RBRACKET

    RBRACKET        shift and go to state 49


state 24

    (13) func_def -> function_def .

    RBRACKET        reduce using rule 13 (func_def -> function_def .)
    SEMICOLON       reduce using rule 13 (func_def -> function_def .)


state 25

    (17) if_else_def -> if . DOSPUNTOS function_def then DOSPUNTOS then_block
    (18) if_else_def -> if . DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block

    DOSPUNTOS       shift and go to state 50


state 26

    (19) function_def -> assignTo_def .

    RBRACKET        reduce using rule 19 (function_def -> assignTo_def .)
    SEMICOLON       reduce using rule 19 (function_def -> assignTo_def .)
    then            reduce using rule 19 (function_def -> assignTo_def .)


state 27

    (20) function_def -> put_def .

    RBRACKET        reduce using rule 20 (function_def -> put_def .)
    SEMICOLON       reduce using rule 20 (function_def -> put_def .)
    then            reduce using rule 20 (function_def -> put_def .)


state 28

    (21) function_def -> moveandjumptothe_def .

    RBRACKET        reduce using rule 21 (function_def -> moveandjumptothe_def .)
    SEMICOLON       reduce using rule 21 (function_def -> moveandjumptothe_def .)
    then            reduce using rule 21 (function_def -> moveandjumptothe_def .)


state 29

    (22) function_def -> moveandjumpindir_def .

    RBRACKET        reduce using rule 22 (function_def -> moveandjumpindir_def .)
    SEMICOLON       reduce using rule 22 (function_def -> moveandjumpindir_def .)
    then            reduce using rule 22 (function_def -> moveandjumpindir_def .)


state 30

    (23) function_def -> move_def .

    RBRACKET        reduce using rule 23 (function_def -> move_def .)
    SEMICOLON       reduce using rule 23 (function_def -> move_def .)
    then            reduce using rule 23 (function_def -> move_def .)


state 31

    (24) function_def -> goto_def .

    RBRACKET        reduce using rule 24 (function_def -> goto_def .)
    SEMICOLON       reduce using rule 24 (function_def -> goto_def .)
    then            reduce using rule 24 (function_def -> goto_def .)


state 32

    (25) function_def -> turn_def .

    RBRACKET        reduce using rule 25 (function_def -> turn_def .)
    SEMICOLON       reduce using rule 25 (function_def -> turn_def .)
    then            reduce using rule 25 (function_def -> turn_def .)


state 33

    (26) function_def -> face_def .

    RBRACKET        reduce using rule 26 (function_def -> face_def .)
    SEMICOLON       reduce using rule 26 (function_def -> face_def .)
    then            reduce using rule 26 (function_def -> face_def .)


state 34

    (27) function_def -> nop_def .

    RBRACKET        reduce using rule 27 (function_def -> nop_def .)
    SEMICOLON       reduce using rule 27 (function_def -> nop_def .)
    then            reduce using rule 27 (function_def -> nop_def .)


state 35

    (28) assignTo_def -> assignTo . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 51


state 36

    (29) put_def -> put . DOSPUNTOS ID COMMA ITEMS
    (30) put_def -> put . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 52


state 37

    (31) put_def -> pick . DOSPUNTOS INTEGER COMMA ITEMS
    (32) put_def -> pick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 53


state 38

    (33) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA DIRECTION
    (34) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (37) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 54


state 39

    (35) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA DIRECTION
    (39) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 55


state 40

    (41) moveandjumpindir_def -> moveindir . DOSPUNTOS ID COMMA CARDINAL
    (42) moveandjumpindir_def -> moveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 56


state 41

    (43) moveandjumpindir_def -> jumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> jumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 57


state 42

    (45) move_def -> move . DOSPUNTOS ID
    (46) move_def -> move . DOSPUNTOS INTEGER

    DOSPUNTOS       shift and go to state 58


state 43

    (47) goto_def -> goto . DOSPUNTOS ID COMMA ID
    (48) goto_def -> goto . DOSPUNTOS INTEGER COMMA INTEGER
    (49) goto_def -> goto . DOSPUNTOS ID COMMA INTEGER
    (50) goto_def -> goto . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 59


state 44

    (51) turn_def -> turn . DOSPUNTOS DIRECTION_TURN
    (52) turn_def -> turn . DOSPUNTOS LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 60


state 45

    (53) face_def -> face . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 61


state 46

    (54) nop_def -> nop . DOSPUNTOS

    DOSPUNTOS       shift and go to state 62


state 47

    (8) id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .

    ID              reduce using rule 8 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    $end            reduce using rule 8 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)


state 48

    (14) func_def -> func_def SEMICOLON . function_def
    (19) function_def -> . assignTo_def
    (20) function_def -> . put_def
    (21) function_def -> . moveandjumptothe_def
    (22) function_def -> . moveandjumpindir_def
    (23) function_def -> . move_def
    (24) function_def -> . goto_def
    (25) function_def -> . turn_def
    (26) function_def -> . face_def
    (27) function_def -> . nop_def
    (28) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (29) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (30) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (31) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (32) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (33) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (34) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (35) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (37) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (39) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (41) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (42) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (43) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (45) move_def -> . move DOSPUNTOS ID
    (46) move_def -> . move DOSPUNTOS INTEGER
    (47) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (48) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (49) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (50) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (51) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (52) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (53) face_def -> . face DOSPUNTOS CARDINAL
    (54) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 35
    put             shift and go to state 36
    pick            shift and go to state 37
    movetothe       shift and go to state 38
    jumptothe       shift and go to state 39
    moveindir       shift and go to state 40
    jumpindir       shift and go to state 41
    move            shift and go to state 42
    goto            shift and go to state 43
    turn            shift and go to state 44
    face            shift and go to state 45
    nop             shift and go to state 46

    function_def                   shift and go to state 63
    assignTo_def                   shift and go to state 26
    put_def                        shift and go to state 27
    moveandjumptothe_def           shift and go to state 28
    moveandjumpindir_def           shift and go to state 29
    move_def                       shift and go to state 30
    goto_def                       shift and go to state 31
    turn_def                       shift and go to state 32
    face_def                       shift and go to state 33
    nop_def                        shift and go to state 34

state 49

    (9) id_def -> ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET .

    ID              reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET .)
    $end            reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA if_else_def RBRACKET .)


state 50

    (17) if_else_def -> if DOSPUNTOS . function_def then DOSPUNTOS then_block
    (18) if_else_def -> if DOSPUNTOS . function_def then DOSPUNTOS then_block else DOSPUNTOS then_block
    (19) function_def -> . assignTo_def
    (20) function_def -> . put_def
    (21) function_def -> . moveandjumptothe_def
    (22) function_def -> . moveandjumpindir_def
    (23) function_def -> . move_def
    (24) function_def -> . goto_def
    (25) function_def -> . turn_def
    (26) function_def -> . face_def
    (27) function_def -> . nop_def
    (28) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (29) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (30) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (31) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (32) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (33) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (34) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (35) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (37) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (39) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (41) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (42) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (43) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (45) move_def -> . move DOSPUNTOS ID
    (46) move_def -> . move DOSPUNTOS INTEGER
    (47) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (48) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (49) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (50) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (51) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (52) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (53) face_def -> . face DOSPUNTOS CARDINAL
    (54) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 35
    put             shift and go to state 36
    pick            shift and go to state 37
    movetothe       shift and go to state 38
    jumptothe       shift and go to state 39
    moveindir       shift and go to state 40
    jumpindir       shift and go to state 41
    move            shift and go to state 42
    goto            shift and go to state 43
    turn            shift and go to state 44
    face            shift and go to state 45
    nop             shift and go to state 46

    function_def                   shift and go to state 64
    assignTo_def                   shift and go to state 26
    put_def                        shift and go to state 27
    moveandjumptothe_def           shift and go to state 28
    moveandjumpindir_def           shift and go to state 29
    move_def                       shift and go to state 30
    goto_def                       shift and go to state 31
    turn_def                       shift and go to state 32
    face_def                       shift and go to state 33
    nop_def                        shift and go to state 34

state 51

    (28) assignTo_def -> assignTo DOSPUNTOS . INTEGER COMMA ID

    INTEGER         shift and go to state 65


state 52

    (29) put_def -> put DOSPUNTOS . ID COMMA ITEMS
    (30) put_def -> put DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 66
    INTEGER         shift and go to state 67


state 53

    (31) put_def -> pick DOSPUNTOS . INTEGER COMMA ITEMS
    (32) put_def -> pick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 68
    ID              shift and go to state 69


state 54

    (33) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA DIRECTION
    (34) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (37) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 70
    INTEGER         shift and go to state 71


state 55

    (35) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA DIRECTION
    (39) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 72
    ID              shift and go to state 73


state 56

    (41) moveandjumpindir_def -> moveindir DOSPUNTOS . ID COMMA CARDINAL
    (42) moveandjumpindir_def -> moveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 74
    INTEGER         shift and go to state 75


state 57

    (43) moveandjumpindir_def -> jumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> jumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 76
    ID              shift and go to state 77


state 58

    (45) move_def -> move DOSPUNTOS . ID
    (46) move_def -> move DOSPUNTOS . INTEGER

    ID              shift and go to state 78
    INTEGER         shift and go to state 79


state 59

    (47) goto_def -> goto DOSPUNTOS . ID COMMA ID
    (48) goto_def -> goto DOSPUNTOS . INTEGER COMMA INTEGER
    (49) goto_def -> goto DOSPUNTOS . ID COMMA INTEGER
    (50) goto_def -> goto DOSPUNTOS . INTEGER COMMA ID

    ID              shift and go to state 80
    INTEGER         shift and go to state 81


state 60

    (51) turn_def -> turn DOSPUNTOS . DIRECTION_TURN
    (52) turn_def -> turn DOSPUNTOS . LEFTANDRIGHT

    DIRECTION_TURN  shift and go to state 82
    LEFTANDRIGHT    shift and go to state 83


state 61

    (53) face_def -> face DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 84


state 62

    (54) nop_def -> nop DOSPUNTOS .

    RBRACKET        reduce using rule 54 (nop_def -> nop DOSPUNTOS .)
    SEMICOLON       reduce using rule 54 (nop_def -> nop DOSPUNTOS .)
    then            reduce using rule 54 (nop_def -> nop DOSPUNTOS .)


state 63

    (14) func_def -> func_def SEMICOLON function_def .

    RBRACKET        reduce using rule 14 (func_def -> func_def SEMICOLON function_def .)
    SEMICOLON       reduce using rule 14 (func_def -> func_def SEMICOLON function_def .)


state 64

    (17) if_else_def -> if DOSPUNTOS function_def . then DOSPUNTOS then_block
    (18) if_else_def -> if DOSPUNTOS function_def . then DOSPUNTOS then_block else DOSPUNTOS then_block

    then            shift and go to state 85


state 65

    (28) assignTo_def -> assignTo DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 86


state 66

    (29) put_def -> put DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 87


state 67

    (30) put_def -> put DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 88


state 68

    (31) put_def -> pick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 89


state 69

    (32) put_def -> pick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 90


state 70

    (33) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA DIRECTION
    (37) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 91


state 71

    (34) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (38) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 92


state 72

    (35) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (39) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 93


state 73

    (36) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA DIRECTION
    (40) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 94


state 74

    (41) moveandjumpindir_def -> moveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 95


state 75

    (42) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 96


state 76

    (43) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 97


state 77

    (44) moveandjumpindir_def -> jumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 98


state 78

    (45) move_def -> move DOSPUNTOS ID .

    RBRACKET        reduce using rule 45 (move_def -> move DOSPUNTOS ID .)
    SEMICOLON       reduce using rule 45 (move_def -> move DOSPUNTOS ID .)
    then            reduce using rule 45 (move_def -> move DOSPUNTOS ID .)


state 79

    (46) move_def -> move DOSPUNTOS INTEGER .

    RBRACKET        reduce using rule 46 (move_def -> move DOSPUNTOS INTEGER .)
    SEMICOLON       reduce using rule 46 (move_def -> move DOSPUNTOS INTEGER .)
    then            reduce using rule 46 (move_def -> move DOSPUNTOS INTEGER .)


state 80

    (47) goto_def -> goto DOSPUNTOS ID . COMMA ID
    (49) goto_def -> goto DOSPUNTOS ID . COMMA INTEGER

    COMMA           shift and go to state 99


state 81

    (48) goto_def -> goto DOSPUNTOS INTEGER . COMMA INTEGER
    (50) goto_def -> goto DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 100


state 82

    (51) turn_def -> turn DOSPUNTOS DIRECTION_TURN .

    RBRACKET        reduce using rule 51 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    SEMICOLON       reduce using rule 51 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    then            reduce using rule 51 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)


state 83

    (52) turn_def -> turn DOSPUNTOS LEFTANDRIGHT .

    RBRACKET        reduce using rule 52 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 52 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    then            reduce using rule 52 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)


state 84

    (53) face_def -> face DOSPUNTOS CARDINAL .

    RBRACKET        reduce using rule 53 (face_def -> face DOSPUNTOS CARDINAL .)
    SEMICOLON       reduce using rule 53 (face_def -> face DOSPUNTOS CARDINAL .)
    then            reduce using rule 53 (face_def -> face DOSPUNTOS CARDINAL .)


state 85

    (17) if_else_def -> if DOSPUNTOS function_def then . DOSPUNTOS then_block
    (18) if_else_def -> if DOSPUNTOS function_def then . DOSPUNTOS then_block else DOSPUNTOS then_block

    DOSPUNTOS       shift and go to state 101


state 86

    (28) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA . ID

    ID              shift and go to state 102


state 87

    (29) put_def -> put DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 103


state 88

    (30) put_def -> put DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 104


state 89

    (31) put_def -> pick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 105


state 90

    (32) put_def -> pick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 106


state 91

    (33) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . DIRECTION
    (37) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 107
    LEFTANDRIGHT    shift and go to state 108


state 92

    (34) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (38) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 109
    LEFTANDRIGHT    shift and go to state 110


state 93

    (35) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (39) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 111
    LEFTANDRIGHT    shift and go to state 112


state 94

    (36) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . DIRECTION
    (40) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 113
    LEFTANDRIGHT    shift and go to state 114


state 95

    (41) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 115


state 96

    (42) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 116


state 97

    (43) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 117


state 98

    (44) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 118


state 99

    (47) goto_def -> goto DOSPUNTOS ID COMMA . ID
    (49) goto_def -> goto DOSPUNTOS ID COMMA . INTEGER

    ID              shift and go to state 119
    INTEGER         shift and go to state 120


state 100

    (48) goto_def -> goto DOSPUNTOS INTEGER COMMA . INTEGER
    (50) goto_def -> goto DOSPUNTOS INTEGER COMMA . ID

    INTEGER         shift and go to state 121
    ID              shift and go to state 122


state 101

    (17) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS . then_block
    (18) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS . then_block else DOSPUNTOS then_block
    (15) then_block -> . LBRACKET func_def RBRACKET
    (16) then_block -> . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 124

    then_block                     shift and go to state 123

state 102

    (28) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 28 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 28 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    then            reduce using rule 28 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)


state 103

    (29) put_def -> put DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 29 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 29 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    then            reduce using rule 29 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)


state 104

    (30) put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 30 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 30 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    then            reduce using rule 30 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)


state 105

    (31) put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 31 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 31 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    then            reduce using rule 31 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)


state 106

    (32) put_def -> pick DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 32 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 32 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    then            reduce using rule 32 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)


state 107

    (33) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 33 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 33 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    then            reduce using rule 33 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)


state 108

    (37) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 37 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 37 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    then            reduce using rule 37 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 109

    (34) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 34 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 34 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    then            reduce using rule 34 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 110

    (38) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 38 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 38 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    then            reduce using rule 38 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 111

    (35) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 35 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 35 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    then            reduce using rule 35 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 112

    (39) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 39 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 39 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    then            reduce using rule 39 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 113

    (36) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 36 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 36 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    then            reduce using rule 36 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 114

    (40) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 40 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 40 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    then            reduce using rule 40 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 115

    (41) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 41 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 41 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    then            reduce using rule 41 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)


state 116

    (42) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 42 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 42 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    then            reduce using rule 42 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 117

    (43) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 43 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 43 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    then            reduce using rule 43 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 118

    (44) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 44 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 44 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    then            reduce using rule 44 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 119

    (47) goto_def -> goto DOSPUNTOS ID COMMA ID .

    RBRACKET        reduce using rule 47 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    SEMICOLON       reduce using rule 47 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    then            reduce using rule 47 (goto_def -> goto DOSPUNTOS ID COMMA ID .)


state 120

    (49) goto_def -> goto DOSPUNTOS ID COMMA INTEGER .

    RBRACKET        reduce using rule 49 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    SEMICOLON       reduce using rule 49 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    then            reduce using rule 49 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)


state 121

    (48) goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 48 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    SEMICOLON       reduce using rule 48 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    then            reduce using rule 48 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)


state 122

    (50) goto_def -> goto DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 50 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 50 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    then            reduce using rule 50 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)


state 123

    (17) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block .
    (18) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block . else DOSPUNTOS then_block

    RBRACKET        reduce using rule 17 (if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block .)
    else            shift and go to state 125


state 124

    (15) then_block -> LBRACKET . func_def RBRACKET
    (16) then_block -> LBRACKET . if_else_def RBRACKET
    (13) func_def -> . function_def
    (14) func_def -> . func_def SEMICOLON function_def
    (17) if_else_def -> . if DOSPUNTOS function_def then DOSPUNTOS then_block
    (18) if_else_def -> . if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block
    (19) function_def -> . assignTo_def
    (20) function_def -> . put_def
    (21) function_def -> . moveandjumptothe_def
    (22) function_def -> . moveandjumpindir_def
    (23) function_def -> . move_def
    (24) function_def -> . goto_def
    (25) function_def -> . turn_def
    (26) function_def -> . face_def
    (27) function_def -> . nop_def
    (28) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (29) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (30) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (31) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (32) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (33) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (34) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (35) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (36) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (37) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (38) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (39) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (40) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (41) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (42) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (43) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (44) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (45) move_def -> . move DOSPUNTOS ID
    (46) move_def -> . move DOSPUNTOS INTEGER
    (47) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (48) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (49) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (50) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (51) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (52) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (53) face_def -> . face DOSPUNTOS CARDINAL
    (54) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 25
    assignTo        shift and go to state 35
    put             shift and go to state 36
    pick            shift and go to state 37
    movetothe       shift and go to state 38
    jumptothe       shift and go to state 39
    moveindir       shift and go to state 40
    jumpindir       shift and go to state 41
    move            shift and go to state 42
    goto            shift and go to state 43
    turn            shift and go to state 44
    face            shift and go to state 45
    nop             shift and go to state 46

    func_def                       shift and go to state 126
    if_else_def                    shift and go to state 127
    function_def                   shift and go to state 24
    assignTo_def                   shift and go to state 26
    put_def                        shift and go to state 27
    moveandjumptothe_def           shift and go to state 28
    moveandjumpindir_def           shift and go to state 29
    move_def                       shift and go to state 30
    goto_def                       shift and go to state 31
    turn_def                       shift and go to state 32
    face_def                       shift and go to state 33
    nop_def                        shift and go to state 34

state 125

    (18) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block else . DOSPUNTOS then_block

    DOSPUNTOS       shift and go to state 128


state 126

    (15) then_block -> LBRACKET func_def . RBRACKET
    (14) func_def -> func_def . SEMICOLON function_def

    RBRACKET        shift and go to state 129
    SEMICOLON       shift and go to state 48


state 127

    (16) then_block -> LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 130


state 128

    (18) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS . then_block
    (15) then_block -> . LBRACKET func_def RBRACKET
    (16) then_block -> . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 124

    then_block                     shift and go to state 131

state 129

    (15) then_block -> LBRACKET func_def RBRACKET .

    else            reduce using rule 15 (then_block -> LBRACKET func_def RBRACKET .)
    RBRACKET        reduce using rule 15 (then_block -> LBRACKET func_def RBRACKET .)


state 130

    (16) then_block -> LBRACKET if_else_def RBRACKET .

    else            reduce using rule 16 (then_block -> LBRACKET if_else_def RBRACKET .)
    RBRACKET        reduce using rule 16 (then_block -> LBRACKET if_else_def RBRACKET .)


state 131

    (18) if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block .

    RBRACKET        reduce using rule 18 (if_else_def -> if DOSPUNTOS function_def then DOSPUNTOS then_block else DOSPUNTOS then_block .)


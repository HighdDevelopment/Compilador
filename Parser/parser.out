Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> ROBOT_R var_def PROCS
Rule 2     prog -> ROBOT_R var_def PROCS bloque_def
Rule 3     prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET
Rule 4     var_def -> VARS ID_list SEMICOLON
Rule 5     ID_list -> ID
Rule 6     ID_list -> ID_list COMMA ID
Rule 7     bloque_def -> id_def
Rule 8     bloque_def -> bloque_def id_def
Rule 9     id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET
Rule 10    id_func -> ID
Rule 11    id_func -> ID COMMA id_func
Rule 12    final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 13    final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 14    func_def -> function_def
Rule 15    func_def -> func_def SEMICOLON function_def
Rule 16    func_def -> if_else_def
Rule 17    func_def -> while_def
Rule 18    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
Rule 19    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
Rule 20    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 21    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 22    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET
Rule 23    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 24    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
Rule 25    function_def -> assignTo_def
Rule 26    function_def -> put_def
Rule 27    function_def -> moveandjumptothe_def
Rule 28    function_def -> moveandjumpindir_def
Rule 29    function_def -> move_def
Rule 30    function_def -> goto_def
Rule 31    function_def -> turn_def
Rule 32    function_def -> face_def
Rule 33    function_def -> nop_def
Rule 34    assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID
Rule 35    put_def -> put DOSPUNTOS ID COMMA ITEMS
Rule 36    put_def -> put DOSPUNTOS INTEGER COMMA ITEMS
Rule 37    put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS
Rule 38    put_def -> pick DOSPUNTOS ID COMMA ITEMS
Rule 39    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION
Rule 40    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 41    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 42    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 43    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 44    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 45    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 46    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 47    moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL
Rule 48    moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 49    moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 50    moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 51    move_def -> move DOSPUNTOS ID
Rule 52    move_def -> move DOSPUNTOS INTEGER
Rule 53    goto_def -> goto DOSPUNTOS ID COMMA ID
Rule 54    goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER
Rule 55    goto_def -> goto DOSPUNTOS ID COMMA INTEGER
Rule 56    goto_def -> goto DOSPUNTOS INTEGER COMMA ID
Rule 57    turn_def -> turn DOSPUNTOS DIRECTION_TURN
Rule 58    turn_def -> turn DOSPUNTOS LEFTANDRIGHT
Rule 59    face_def -> face DOSPUNTOS CARDINAL
Rule 60    nop_def -> nop DOSPUNTOS
Rule 61    conditions_def -> facing_def
Rule 62    conditions_def -> canputpick_def
Rule 63    conditions_def -> canmoveandjumptothe_def
Rule 64    conditions_def -> canmoveandjumpindir_def
Rule 65    conditions_def -> not_def
Rule 66    facing_def -> facing DOSPUNTOS CARDINAL
Rule 67    canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS
Rule 68    canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS
Rule 69    canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS
Rule 70    canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS
Rule 71    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL
Rule 72    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 73    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 74    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 75    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION
Rule 76    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 77    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 78    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 79    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 80    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 81    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 82    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 83    not_def -> not DOSPUNTOS

Terminals, with rules where they appear

CARDINAL             : 47 48 49 50 59 66 71 72 73 74
COMMA                : 6 11 12 13 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 53 54 55 56 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
DIRECTION            : 39 40 41 42 75 76 77 78
DIRECTION_TURN       : 57
DOSPUNTOS            : 12 13 18 18 18 19 19 19 20 20 20 21 21 21 22 22 23 23 24 24 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
ID                   : 5 6 9 10 11 12 13 34 35 38 39 42 43 46 47 50 51 53 53 55 56 67 70 71 74 75 78 79 82
INTEGER              : 12 12 13 13 34 36 37 40 41 44 45 48 49 52 54 54 55 56 68 69 72 73 76 77 80 81
ITEMS                : 35 36 37 38 67 68 69 70
LBRACKET             : 3 9 18 18 19 19 20 20 21 21 22 23 24
LEFTANDRIGHT         : 43 44 45 46 58 79 80 81 82
PLECA                : 9 9
PROCS                : 1 2 3
RBRACKET             : 3 9 18 18 19 19 20 20 21 21 22 23 24
ROBOT_R              : 1 2 3
SEMICOLON            : 4 15
VARS                 : 4
assignTo             : 34
canjumpindir         : 73 74
canjumptothe         : 77 78 81 82
canmoveindir         : 71 72
canmovetothe         : 75 76 79 80
canpick              : 69 70
canput               : 67 68
do                   : 22 23 24
else                 : 18 19 20 21
error                : 
face                 : 59
facing               : 66
goto                 : 53 54 55 56
if                   : 18 19 20 21
jumpindir            : 49 50
jumptothe            : 41 42 45 46
move                 : 51 52
moveindir            : 47 48
movetothe            : 39 40 43 44
nop                  : 60
not                  : 83
pick                 : 37 38
put                  : 35 36
then                 : 18 19 20 21
turn                 : 57 58
while                : 22 23 24

Nonterminals, with rules where they appear

ID_list              : 4 6
assignTo_def         : 25
bloque_def           : 2 3 8
canmoveandjumpindir_def : 64
canmoveandjumptothe_def : 63
canputpick_def       : 62
conditions_def       : 18 19 20 21 22 23 24
face_def             : 32
facing_def           : 61
final_def            : 3 13
func_def             : 9 15
function_def         : 14 15 18 18 19 20 22
goto_def             : 30
id_def               : 7 8
id_func              : 9 11
if_else_def          : 16 19 20 21 21 23
move_def             : 29
moveandjumpindir_def : 28
moveandjumptothe_def : 27
nop_def              : 33
not_def              : 65
prog                 : 0
put_def              : 26
turn_def             : 31
var_def              : 1 2 3
while_def            : 17 24

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . ROBOT_R var_def PROCS
    (2) prog -> . ROBOT_R var_def PROCS bloque_def
    (3) prog -> . ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET

    ROBOT_R         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> ROBOT_R . var_def PROCS
    (2) prog -> ROBOT_R . var_def PROCS bloque_def
    (3) prog -> ROBOT_R . var_def PROCS bloque_def LBRACKET final_def RBRACKET
    (4) var_def -> . VARS ID_list SEMICOLON

    VARS            shift and go to state 4

    var_def                        shift and go to state 3

state 3

    (1) prog -> ROBOT_R var_def . PROCS
    (2) prog -> ROBOT_R var_def . PROCS bloque_def
    (3) prog -> ROBOT_R var_def . PROCS bloque_def LBRACKET final_def RBRACKET

    PROCS           shift and go to state 5


state 4

    (4) var_def -> VARS . ID_list SEMICOLON
    (5) ID_list -> . ID
    (6) ID_list -> . ID_list COMMA ID

    ID              shift and go to state 7

    ID_list                        shift and go to state 6

state 5

    (1) prog -> ROBOT_R var_def PROCS .
    (2) prog -> ROBOT_R var_def PROCS . bloque_def
    (3) prog -> ROBOT_R var_def PROCS . bloque_def LBRACKET final_def RBRACKET
    (7) bloque_def -> . id_def
    (8) bloque_def -> . bloque_def id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 1 (prog -> ROBOT_R var_def PROCS .)
    ID              shift and go to state 10

    bloque_def                     shift and go to state 8
    id_def                         shift and go to state 9

state 6

    (4) var_def -> VARS ID_list . SEMICOLON
    (6) ID_list -> ID_list . COMMA ID

    SEMICOLON       shift and go to state 11
    COMMA           shift and go to state 12


state 7

    (5) ID_list -> ID .

    SEMICOLON       reduce using rule 5 (ID_list -> ID .)
    COMMA           reduce using rule 5 (ID_list -> ID .)


state 8

    (2) prog -> ROBOT_R var_def PROCS bloque_def .
    (3) prog -> ROBOT_R var_def PROCS bloque_def . LBRACKET final_def RBRACKET
    (8) bloque_def -> bloque_def . id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 2 (prog -> ROBOT_R var_def PROCS bloque_def .)
    LBRACKET        shift and go to state 13
    ID              shift and go to state 10

    id_def                         shift and go to state 14

state 9

    (7) bloque_def -> id_def .

    LBRACKET        reduce using rule 7 (bloque_def -> id_def .)
    ID              reduce using rule 7 (bloque_def -> id_def .)
    $end            reduce using rule 7 (bloque_def -> id_def .)


state 10

    (9) id_def -> ID . LBRACKET PLECA id_func PLECA func_def RBRACKET

    LBRACKET        shift and go to state 15


state 11

    (4) var_def -> VARS ID_list SEMICOLON .

    PROCS           reduce using rule 4 (var_def -> VARS ID_list SEMICOLON .)


state 12

    (6) ID_list -> ID_list COMMA . ID

    ID              shift and go to state 16


state 13

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET . final_def RBRACKET
    (12) final_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER
    (13) final_def -> . final_def ID DOSPUNTOS INTEGER COMMA INTEGER

    ID              shift and go to state 18

    final_def                      shift and go to state 17

state 14

    (8) bloque_def -> bloque_def id_def .

    LBRACKET        reduce using rule 8 (bloque_def -> bloque_def id_def .)
    ID              reduce using rule 8 (bloque_def -> bloque_def id_def .)
    $end            reduce using rule 8 (bloque_def -> bloque_def id_def .)


state 15

    (9) id_def -> ID LBRACKET . PLECA id_func PLECA func_def RBRACKET

    PLECA           shift and go to state 19


state 16

    (6) ID_list -> ID_list COMMA ID .

    SEMICOLON       reduce using rule 6 (ID_list -> ID_list COMMA ID .)
    COMMA           reduce using rule 6 (ID_list -> ID_list COMMA ID .)


state 17

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def . RBRACKET
    (13) final_def -> final_def . ID DOSPUNTOS INTEGER COMMA INTEGER

    RBRACKET        shift and go to state 20
    ID              shift and go to state 21


state 18

    (12) final_def -> ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 22


state 19

    (9) id_def -> ID LBRACKET PLECA . id_func PLECA func_def RBRACKET
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func

    ID              shift and go to state 23

    id_func                        shift and go to state 24

state 20

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .

    $end            reduce using rule 3 (prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .)


state 21

    (13) final_def -> final_def ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 25


state 22

    (12) final_def -> ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 26


state 23

    (10) id_func -> ID .
    (11) id_func -> ID . COMMA id_func

    PLECA           reduce using rule 10 (id_func -> ID .)
    COMMA           shift and go to state 27


state 24

    (9) id_def -> ID LBRACKET PLECA id_func . PLECA func_def RBRACKET

    PLECA           shift and go to state 28


state 25

    (13) final_def -> final_def ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 29


state 26

    (12) final_def -> ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 30


state 27

    (11) id_func -> ID COMMA . id_func
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func

    ID              shift and go to state 23

    id_func                        shift and go to state 31

state 28

    (9) id_def -> ID LBRACKET PLECA id_func PLECA . func_def RBRACKET
    (14) func_def -> . function_def
    (15) func_def -> . func_def SEMICOLON function_def
    (16) func_def -> . if_else_def
    (17) func_def -> . while_def
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (18) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (22) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 45
    while           shift and go to state 46
    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    func_def                       shift and go to state 32
    function_def                   shift and go to state 33
    if_else_def                    shift and go to state 34
    while_def                      shift and go to state 35
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 29

    (13) final_def -> final_def ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 59


state 30

    (12) final_def -> ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 60


state 31

    (11) id_func -> ID COMMA id_func .

    PLECA           reduce using rule 11 (id_func -> ID COMMA id_func .)


state 32

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def . RBRACKET
    (15) func_def -> func_def . SEMICOLON function_def

    RBRACKET        shift and go to state 61
    SEMICOLON       shift and go to state 62


state 33

    (14) func_def -> function_def .

    RBRACKET        reduce using rule 14 (func_def -> function_def .)
    SEMICOLON       reduce using rule 14 (func_def -> function_def .)


state 34

    (16) func_def -> if_else_def .

    RBRACKET        reduce using rule 16 (func_def -> if_else_def .)
    SEMICOLON       reduce using rule 16 (func_def -> if_else_def .)


state 35

    (17) func_def -> while_def .

    RBRACKET        reduce using rule 17 (func_def -> while_def .)
    SEMICOLON       reduce using rule 17 (func_def -> while_def .)


state 36

    (25) function_def -> assignTo_def .

    RBRACKET        reduce using rule 25 (function_def -> assignTo_def .)
    SEMICOLON       reduce using rule 25 (function_def -> assignTo_def .)


state 37

    (26) function_def -> put_def .

    RBRACKET        reduce using rule 26 (function_def -> put_def .)
    SEMICOLON       reduce using rule 26 (function_def -> put_def .)


state 38

    (27) function_def -> moveandjumptothe_def .

    RBRACKET        reduce using rule 27 (function_def -> moveandjumptothe_def .)
    SEMICOLON       reduce using rule 27 (function_def -> moveandjumptothe_def .)


state 39

    (28) function_def -> moveandjumpindir_def .

    RBRACKET        reduce using rule 28 (function_def -> moveandjumpindir_def .)
    SEMICOLON       reduce using rule 28 (function_def -> moveandjumpindir_def .)


state 40

    (29) function_def -> move_def .

    RBRACKET        reduce using rule 29 (function_def -> move_def .)
    SEMICOLON       reduce using rule 29 (function_def -> move_def .)


state 41

    (30) function_def -> goto_def .

    RBRACKET        reduce using rule 30 (function_def -> goto_def .)
    SEMICOLON       reduce using rule 30 (function_def -> goto_def .)


state 42

    (31) function_def -> turn_def .

    RBRACKET        reduce using rule 31 (function_def -> turn_def .)
    SEMICOLON       reduce using rule 31 (function_def -> turn_def .)


state 43

    (32) function_def -> face_def .

    RBRACKET        reduce using rule 32 (function_def -> face_def .)
    SEMICOLON       reduce using rule 32 (function_def -> face_def .)


state 44

    (33) function_def -> nop_def .

    RBRACKET        reduce using rule 33 (function_def -> nop_def .)
    SEMICOLON       reduce using rule 33 (function_def -> nop_def .)


state 45

    (18) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 63


state 46

    (22) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 64


state 47

    (34) assignTo_def -> assignTo . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 65


state 48

    (35) put_def -> put . DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> put . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 66


state 49

    (37) put_def -> pick . DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> pick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 67


state 50

    (39) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (43) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 68


state 51

    (41) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA DIRECTION
    (45) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 69


state 52

    (47) moveandjumpindir_def -> moveindir . DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> moveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 70


state 53

    (49) moveandjumpindir_def -> jumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> jumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 71


state 54

    (51) move_def -> move . DOSPUNTOS ID
    (52) move_def -> move . DOSPUNTOS INTEGER

    DOSPUNTOS       shift and go to state 72


state 55

    (53) goto_def -> goto . DOSPUNTOS ID COMMA ID
    (54) goto_def -> goto . DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> goto . DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> goto . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 73


state 56

    (57) turn_def -> turn . DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> turn . DOSPUNTOS LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 74


state 57

    (59) face_def -> face . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 75


state 58

    (60) nop_def -> nop . DOSPUNTOS

    DOSPUNTOS       shift and go to state 76


state 59

    (13) final_def -> final_def ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 77


state 60

    (12) final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 12 (final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 12 (final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 61

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .

    LBRACKET        reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    ID              reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    $end            reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)


state 62

    (15) func_def -> func_def SEMICOLON . function_def
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    function_def                   shift and go to state 78
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 63

    (18) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (61) conditions_def -> . facing_def
    (62) conditions_def -> . canputpick_def
    (63) conditions_def -> . canmoveandjumptothe_def
    (64) conditions_def -> . canmoveandjumpindir_def
    (65) conditions_def -> . not_def
    (66) facing_def -> . facing DOSPUNTOS CARDINAL
    (67) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (68) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (69) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (70) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (75) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (76) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (77) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (78) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (79) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (80) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (81) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (82) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (71) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (72) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (73) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (74) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (83) not_def -> . not DOSPUNTOS

    facing          shift and go to state 85
    canput          shift and go to state 86
    canpick         shift and go to state 87
    canmovetothe    shift and go to state 88
    canjumptothe    shift and go to state 89
    canmoveindir    shift and go to state 90
    canjumpindir    shift and go to state 91
    not             shift and go to state 92

    conditions_def                 shift and go to state 79
    facing_def                     shift and go to state 80
    canputpick_def                 shift and go to state 81
    canmoveandjumptothe_def        shift and go to state 82
    canmoveandjumpindir_def        shift and go to state 83
    not_def                        shift and go to state 84

state 64

    (22) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (61) conditions_def -> . facing_def
    (62) conditions_def -> . canputpick_def
    (63) conditions_def -> . canmoveandjumptothe_def
    (64) conditions_def -> . canmoveandjumpindir_def
    (65) conditions_def -> . not_def
    (66) facing_def -> . facing DOSPUNTOS CARDINAL
    (67) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (68) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (69) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (70) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (75) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (76) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (77) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (78) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (79) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (80) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (81) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (82) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (71) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (72) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (73) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (74) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (83) not_def -> . not DOSPUNTOS

    facing          shift and go to state 85
    canput          shift and go to state 86
    canpick         shift and go to state 87
    canmovetothe    shift and go to state 88
    canjumptothe    shift and go to state 89
    canmoveindir    shift and go to state 90
    canjumpindir    shift and go to state 91
    not             shift and go to state 92

    conditions_def                 shift and go to state 93
    facing_def                     shift and go to state 80
    canputpick_def                 shift and go to state 81
    canmoveandjumptothe_def        shift and go to state 82
    canmoveandjumpindir_def        shift and go to state 83
    not_def                        shift and go to state 84

state 65

    (34) assignTo_def -> assignTo DOSPUNTOS . INTEGER COMMA ID

    INTEGER         shift and go to state 94


state 66

    (35) put_def -> put DOSPUNTOS . ID COMMA ITEMS
    (36) put_def -> put DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 95
    INTEGER         shift and go to state 96


state 67

    (37) put_def -> pick DOSPUNTOS . INTEGER COMMA ITEMS
    (38) put_def -> pick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 97
    ID              shift and go to state 98


state 68

    (39) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA DIRECTION
    (40) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (43) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 99
    INTEGER         shift and go to state 100


state 69

    (41) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA DIRECTION
    (45) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 101
    ID              shift and go to state 102


state 70

    (47) moveandjumpindir_def -> moveindir DOSPUNTOS . ID COMMA CARDINAL
    (48) moveandjumpindir_def -> moveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 103
    INTEGER         shift and go to state 104


state 71

    (49) moveandjumpindir_def -> jumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> jumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 105
    ID              shift and go to state 106


state 72

    (51) move_def -> move DOSPUNTOS . ID
    (52) move_def -> move DOSPUNTOS . INTEGER

    ID              shift and go to state 107
    INTEGER         shift and go to state 108


state 73

    (53) goto_def -> goto DOSPUNTOS . ID COMMA ID
    (54) goto_def -> goto DOSPUNTOS . INTEGER COMMA INTEGER
    (55) goto_def -> goto DOSPUNTOS . ID COMMA INTEGER
    (56) goto_def -> goto DOSPUNTOS . INTEGER COMMA ID

    ID              shift and go to state 109
    INTEGER         shift and go to state 110


state 74

    (57) turn_def -> turn DOSPUNTOS . DIRECTION_TURN
    (58) turn_def -> turn DOSPUNTOS . LEFTANDRIGHT

    DIRECTION_TURN  shift and go to state 111
    LEFTANDRIGHT    shift and go to state 112


state 75

    (59) face_def -> face DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 113


state 76

    (60) nop_def -> nop DOSPUNTOS .

    RBRACKET        reduce using rule 60 (nop_def -> nop DOSPUNTOS .)
    SEMICOLON       reduce using rule 60 (nop_def -> nop DOSPUNTOS .)


state 77

    (13) final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 13 (final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 13 (final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 78

    (15) func_def -> func_def SEMICOLON function_def .

    RBRACKET        reduce using rule 15 (func_def -> func_def SEMICOLON function_def .)
    SEMICOLON       reduce using rule 15 (func_def -> func_def SEMICOLON function_def .)


state 79

    (18) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    then            shift and go to state 114


state 80

    (61) conditions_def -> facing_def .

    then            reduce using rule 61 (conditions_def -> facing_def .)
    do              reduce using rule 61 (conditions_def -> facing_def .)


state 81

    (62) conditions_def -> canputpick_def .

    then            reduce using rule 62 (conditions_def -> canputpick_def .)
    do              reduce using rule 62 (conditions_def -> canputpick_def .)


state 82

    (63) conditions_def -> canmoveandjumptothe_def .

    then            reduce using rule 63 (conditions_def -> canmoveandjumptothe_def .)
    do              reduce using rule 63 (conditions_def -> canmoveandjumptothe_def .)


state 83

    (64) conditions_def -> canmoveandjumpindir_def .

    then            reduce using rule 64 (conditions_def -> canmoveandjumpindir_def .)
    do              reduce using rule 64 (conditions_def -> canmoveandjumpindir_def .)


state 84

    (65) conditions_def -> not_def .

    then            reduce using rule 65 (conditions_def -> not_def .)
    do              reduce using rule 65 (conditions_def -> not_def .)


state 85

    (66) facing_def -> facing . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 115


state 86

    (67) canputpick_def -> canput . DOSPUNTOS ID COMMA ITEMS
    (68) canputpick_def -> canput . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 116


state 87

    (69) canputpick_def -> canpick . DOSPUNTOS INTEGER COMMA ITEMS
    (70) canputpick_def -> canpick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 117


state 88

    (75) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA DIRECTION
    (76) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (79) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (80) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 118


state 89

    (77) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (78) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA DIRECTION
    (81) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (82) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 119


state 90

    (71) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS ID COMMA CARDINAL
    (72) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 120


state 91

    (73) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (74) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 121


state 92

    (83) not_def -> not . DOSPUNTOS

    DOSPUNTOS       shift and go to state 122


state 93

    (22) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET while_def RBRACKET

    do              shift and go to state 123


state 94

    (34) assignTo_def -> assignTo DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 124


state 95

    (35) put_def -> put DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 125


state 96

    (36) put_def -> put DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 126


state 97

    (37) put_def -> pick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 127


state 98

    (38) put_def -> pick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 128


state 99

    (39) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA DIRECTION
    (43) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 129


state 100

    (40) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (44) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 130


state 101

    (41) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (45) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 131


state 102

    (42) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA DIRECTION
    (46) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 132


state 103

    (47) moveandjumpindir_def -> moveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 133


state 104

    (48) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 134


state 105

    (49) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 135


state 106

    (50) moveandjumpindir_def -> jumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 136


state 107

    (51) move_def -> move DOSPUNTOS ID .

    RBRACKET        reduce using rule 51 (move_def -> move DOSPUNTOS ID .)
    SEMICOLON       reduce using rule 51 (move_def -> move DOSPUNTOS ID .)


state 108

    (52) move_def -> move DOSPUNTOS INTEGER .

    RBRACKET        reduce using rule 52 (move_def -> move DOSPUNTOS INTEGER .)
    SEMICOLON       reduce using rule 52 (move_def -> move DOSPUNTOS INTEGER .)


state 109

    (53) goto_def -> goto DOSPUNTOS ID . COMMA ID
    (55) goto_def -> goto DOSPUNTOS ID . COMMA INTEGER

    COMMA           shift and go to state 137


state 110

    (54) goto_def -> goto DOSPUNTOS INTEGER . COMMA INTEGER
    (56) goto_def -> goto DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 138


state 111

    (57) turn_def -> turn DOSPUNTOS DIRECTION_TURN .

    RBRACKET        reduce using rule 57 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    SEMICOLON       reduce using rule 57 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)


state 112

    (58) turn_def -> turn DOSPUNTOS LEFTANDRIGHT .

    RBRACKET        reduce using rule 58 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 58 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)


state 113

    (59) face_def -> face DOSPUNTOS CARDINAL .

    RBRACKET        reduce using rule 59 (face_def -> face DOSPUNTOS CARDINAL .)
    SEMICOLON       reduce using rule 59 (face_def -> face DOSPUNTOS CARDINAL .)


state 114

    (18) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 139


state 115

    (66) facing_def -> facing DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 140


state 116

    (67) canputpick_def -> canput DOSPUNTOS . ID COMMA ITEMS
    (68) canputpick_def -> canput DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 141
    INTEGER         shift and go to state 142


state 117

    (69) canputpick_def -> canpick DOSPUNTOS . INTEGER COMMA ITEMS
    (70) canputpick_def -> canpick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 143
    ID              shift and go to state 144


state 118

    (75) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA DIRECTION
    (76) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (79) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (80) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 145
    INTEGER         shift and go to state 146


state 119

    (77) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (78) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA DIRECTION
    (81) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (82) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 147
    ID              shift and go to state 148


state 120

    (71) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . ID COMMA CARDINAL
    (72) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 149
    INTEGER         shift and go to state 150


state 121

    (73) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (74) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 151
    ID              shift and go to state 152


state 122

    (83) not_def -> not DOSPUNTOS .

    then            reduce using rule 83 (not_def -> not DOSPUNTOS .)
    do              reduce using rule 83 (not_def -> not DOSPUNTOS .)


state 123

    (22) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 153


state 124

    (34) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA . ID

    ID              shift and go to state 154


state 125

    (35) put_def -> put DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 155


state 126

    (36) put_def -> put DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 156


state 127

    (37) put_def -> pick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 157


state 128

    (38) put_def -> pick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 158


state 129

    (39) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . DIRECTION
    (43) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 159
    LEFTANDRIGHT    shift and go to state 160


state 130

    (40) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (44) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 161
    LEFTANDRIGHT    shift and go to state 162


state 131

    (41) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (45) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 163
    LEFTANDRIGHT    shift and go to state 164


state 132

    (42) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . DIRECTION
    (46) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 165
    LEFTANDRIGHT    shift and go to state 166


state 133

    (47) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 167


state 134

    (48) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 168


state 135

    (49) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 169


state 136

    (50) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 170


state 137

    (53) goto_def -> goto DOSPUNTOS ID COMMA . ID
    (55) goto_def -> goto DOSPUNTOS ID COMMA . INTEGER

    ID              shift and go to state 171
    INTEGER         shift and go to state 172


state 138

    (54) goto_def -> goto DOSPUNTOS INTEGER COMMA . INTEGER
    (56) goto_def -> goto DOSPUNTOS INTEGER COMMA . ID

    INTEGER         shift and go to state 173
    ID              shift and go to state 174


state 139

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 175


state 140

    (66) facing_def -> facing DOSPUNTOS CARDINAL .

    then            reduce using rule 66 (facing_def -> facing DOSPUNTOS CARDINAL .)
    do              reduce using rule 66 (facing_def -> facing DOSPUNTOS CARDINAL .)


state 141

    (67) canputpick_def -> canput DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 176


state 142

    (68) canputpick_def -> canput DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 177


state 143

    (69) canputpick_def -> canpick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 178


state 144

    (70) canputpick_def -> canpick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 179


state 145

    (75) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA DIRECTION
    (79) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 180


state 146

    (76) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (80) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 181


state 147

    (77) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (81) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 182


state 148

    (78) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA DIRECTION
    (82) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 183


state 149

    (71) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 184


state 150

    (72) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 185


state 151

    (73) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 186


state 152

    (74) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 187


state 153

    (22) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET function_def RBRACKET
    (23) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET if_else_def RBRACKET
    (24) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET while_def RBRACKET

    LBRACKET        shift and go to state 188


state 154

    (34) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 34 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 34 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)


state 155

    (35) put_def -> put DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 35 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 35 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)


state 156

    (36) put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 36 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 36 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)


state 157

    (37) put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 37 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 37 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)


state 158

    (38) put_def -> pick DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 38 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 38 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)


state 159

    (39) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 39 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 39 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)


state 160

    (43) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 43 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 43 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 161

    (40) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 40 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 40 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 162

    (44) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 44 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 44 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 163

    (41) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 41 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 41 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 164

    (45) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 45 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 45 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 165

    (42) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 42 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 42 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 166

    (46) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 46 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 46 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 167

    (47) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 47 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 47 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)


state 168

    (48) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 48 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 48 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 169

    (49) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 49 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 49 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 170

    (50) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 50 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 50 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 171

    (53) goto_def -> goto DOSPUNTOS ID COMMA ID .

    RBRACKET        reduce using rule 53 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    SEMICOLON       reduce using rule 53 (goto_def -> goto DOSPUNTOS ID COMMA ID .)


state 172

    (55) goto_def -> goto DOSPUNTOS ID COMMA INTEGER .

    RBRACKET        reduce using rule 55 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    SEMICOLON       reduce using rule 55 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)


state 173

    (54) goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 54 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    SEMICOLON       reduce using rule 54 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)


state 174

    (56) goto_def -> goto DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 56 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 56 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)


state 175

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (18) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 45
    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    function_def                   shift and go to state 189
    if_else_def                    shift and go to state 190
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 176

    (67) canputpick_def -> canput DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 191


state 177

    (68) canputpick_def -> canput DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 192


state 178

    (69) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 193


state 179

    (70) canputpick_def -> canpick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 194


state 180

    (75) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . DIRECTION
    (79) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 195
    LEFTANDRIGHT    shift and go to state 196


state 181

    (76) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (80) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 197
    LEFTANDRIGHT    shift and go to state 198


state 182

    (77) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (81) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 199
    LEFTANDRIGHT    shift and go to state 200


state 183

    (78) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . DIRECTION
    (82) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 201
    LEFTANDRIGHT    shift and go to state 202


state 184

    (71) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 203


state 185

    (72) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 204


state 186

    (73) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 205


state 187

    (74) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 206


state 188

    (22) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . function_def RBRACKET
    (23) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (24) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . while_def RBRACKET
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (18) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (22) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET
    (23) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (24) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 45
    while           shift and go to state 46
    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    function_def                   shift and go to state 207
    if_else_def                    shift and go to state 208
    while_def                      shift and go to state 209
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 189

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def . RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    RBRACKET        shift and go to state 210


state 190

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    RBRACKET        shift and go to state 211


state 191

    (67) canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 67 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 67 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)


state 192

    (68) canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 68 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 68 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)


state 193

    (69) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 69 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 69 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)


state 194

    (70) canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 70 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 70 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)


state 195

    (75) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 75 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 75 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)


state 196

    (79) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 79 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 79 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 197

    (76) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 76 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 76 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 198

    (80) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 80 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 80 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 199

    (77) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 77 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 77 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 200

    (81) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 81 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 81 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 201

    (78) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 78 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 78 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 202

    (82) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 82 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 82 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 203

    (71) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 71 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 71 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)


state 204

    (72) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 72 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 72 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 205

    (73) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 73 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 73 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 206

    (74) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 74 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 74 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 207

    (22) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def . RBRACKET

    RBRACKET        shift and go to state 212


state 208

    (23) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 213


state 209

    (24) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 214


state 210

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET . else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 215


state 211

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET function_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 216


state 212

    (22) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET .

    RBRACKET        reduce using rule 22 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET .)
    SEMICOLON       reduce using rule 22 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET function_def RBRACKET .)


state 213

    (23) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 23 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .)
    SEMICOLON       reduce using rule 23 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 214

    (24) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 24 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .)
    SEMICOLON       reduce using rule 24 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .)


state 215

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else . DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 217


state 216

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET function_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 218


state 217

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS . LBRACKET function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 219


state 218

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET function_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 220


state 219

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET . function_def RBRACKET
    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (18) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 45
    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    function_def                   shift and go to state 221
    if_else_def                    shift and go to state 222
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 220

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . function_def RBRACKET
    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (25) function_def -> . assignTo_def
    (26) function_def -> . put_def
    (27) function_def -> . moveandjumptothe_def
    (28) function_def -> . moveandjumpindir_def
    (29) function_def -> . move_def
    (30) function_def -> . goto_def
    (31) function_def -> . turn_def
    (32) function_def -> . face_def
    (33) function_def -> . nop_def
    (18) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (19) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET
    (20) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (35) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (36) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (37) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (38) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (39) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (40) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (41) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (42) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (43) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (44) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (45) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (46) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (47) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (48) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (49) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (50) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (51) move_def -> . move DOSPUNTOS ID
    (52) move_def -> . move DOSPUNTOS INTEGER
    (53) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (54) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (55) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (56) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (57) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (58) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (59) face_def -> . face DOSPUNTOS CARDINAL
    (60) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 45
    assignTo        shift and go to state 47
    put             shift and go to state 48
    pick            shift and go to state 49
    movetothe       shift and go to state 50
    jumptothe       shift and go to state 51
    moveindir       shift and go to state 52
    jumpindir       shift and go to state 53
    move            shift and go to state 54
    goto            shift and go to state 55
    turn            shift and go to state 56
    face            shift and go to state 57
    nop             shift and go to state 58

    if_else_def                    shift and go to state 223
    function_def                   shift and go to state 224
    assignTo_def                   shift and go to state 36
    put_def                        shift and go to state 37
    moveandjumptothe_def           shift and go to state 38
    moveandjumpindir_def           shift and go to state 39
    move_def                       shift and go to state 40
    goto_def                       shift and go to state 41
    turn_def                       shift and go to state 42
    face_def                       shift and go to state 43
    nop_def                        shift and go to state 44

state 221

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def . RBRACKET

    RBRACKET        shift and go to state 225


state 222

    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 226


state 223

    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 227


state 224

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def . RBRACKET

    RBRACKET        shift and go to state 228


state 225

    (18) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .

    RBRACKET        reduce using rule 18 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .)
    SEMICOLON       reduce using rule 18 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .)


state 226

    (20) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 20 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)
    SEMICOLON       reduce using rule 20 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET function_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 227

    (21) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 21 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)
    SEMICOLON       reduce using rule 21 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 228

    (19) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .

    RBRACKET        reduce using rule 19 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .)
    SEMICOLON       reduce using rule 19 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET function_def RBRACKET .)


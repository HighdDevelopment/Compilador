Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> ROBOT_R var_def bloque_def
Rule 2     prog -> ROBOT_R var_def PROCS bloque_def
Rule 3     prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET
Rule 4     prog -> ROBOT_R PROCS bloque_def
Rule 5     prog -> ROBOT_R bloque_def
Rule 6     var_def -> VARS ID_list SEMICOLON
Rule 7     ID_list -> ID
Rule 8     ID_list -> ID_list COMMA ID
Rule 9     bloque_def -> id_def
Rule 10    bloque_def -> bloque_def id_def
Rule 11    id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET
Rule 12    id_func -> ID
Rule 13    id_func -> ID COMMA id_func
Rule 14    id_func -> <empty>
Rule 15    estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 16    estruc_otra_def -> cuerpo_def
Rule 17    estruc_otra_def -> estructura_def
Rule 18    cuerpo_def -> function_def
Rule 19    final_def -> estruc_otra_def
Rule 20    final_def -> final_def estruc_otra_def
Rule 21    func_def -> bloques_def
Rule 22    func_def -> if_else_def
Rule 23    func_def -> while_def
Rule 24    func_def -> repeat_def
Rule 25    bloques_def -> function_def
Rule 26    bloques_def -> bloques_def SEMICOLON function_def
Rule 27    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
Rule 28    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
Rule 29    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
Rule 30    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
Rule 31    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 32    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 33    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 34    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 35    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 36    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 37    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
Rule 38    function_def -> assignTo_def
Rule 39    function_def -> put_def
Rule 40    function_def -> moveandjumptothe_def
Rule 41    function_def -> moveandjumpindir_def
Rule 42    function_def -> move_def
Rule 43    function_def -> goto_def
Rule 44    function_def -> turn_def
Rule 45    function_def -> face_def
Rule 46    function_def -> nop_def
Rule 47    assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID
Rule 48    put_def -> put DOSPUNTOS ID COMMA ITEMS
Rule 49    put_def -> put DOSPUNTOS INTEGER COMMA ITEMS
Rule 50    put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS
Rule 51    put_def -> pick DOSPUNTOS ID COMMA ITEMS
Rule 52    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION
Rule 53    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 54    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 55    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 56    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 57    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 58    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 59    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 60    moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL
Rule 61    moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 62    moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 63    moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 64    move_def -> move DOSPUNTOS ID
Rule 65    move_def -> move DOSPUNTOS INTEGER
Rule 66    goto_def -> goto DOSPUNTOS ID COMMA ID
Rule 67    goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER
Rule 68    goto_def -> goto DOSPUNTOS ID COMMA INTEGER
Rule 69    goto_def -> goto DOSPUNTOS INTEGER COMMA ID
Rule 70    turn_def -> turn DOSPUNTOS DIRECTION_TURN
Rule 71    turn_def -> turn DOSPUNTOS LEFTANDRIGHT
Rule 72    face_def -> face DOSPUNTOS CARDINAL
Rule 73    nop_def -> nop DOSPUNTOS
Rule 74    conditions_def -> facing_def
Rule 75    conditions_def -> canputpick_def
Rule 76    conditions_def -> canmoveandjumptothe_def
Rule 77    conditions_def -> canmoveandjumpindir_def
Rule 78    conditions_def -> not_def
Rule 79    facing_def -> facing DOSPUNTOS CARDINAL
Rule 80    canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS
Rule 81    canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS
Rule 82    canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS
Rule 83    canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS
Rule 84    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL
Rule 85    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 86    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 87    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 88    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION
Rule 89    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 90    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 91    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 92    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 93    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 94    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 95    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 96    not_def -> not DOSPUNTOS conditions_def

Terminals, with rules where they appear

CARDINAL             : 60 61 62 63 72 79 84 85 86 87
COMMA                : 8 13 15 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 66 67 68 69 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
DIRECTION            : 52 53 54 55 88 89 90 91
DIRECTION_TURN       : 70
DOSPUNTOS            : 15 27 28 29 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 36 36 37 37 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
ID                   : 7 8 11 12 13 15 47 48 51 52 55 56 59 60 63 64 66 66 68 69 80 83 84 87 88 91 92 95
INTEGER              : 15 15 47 49 50 53 54 57 58 61 62 65 67 67 68 69 81 82 85 86 89 90 93 94
ITEMS                : 48 49 50 51 80 81 82 83
LBRACKET             : 3 11 27 28 29 30 31 31 32 32 33 33 34 34 35 36 37
LEFTANDRIGHT         : 56 57 58 59 71 92 93 94 95
PLECA                : 11 11
PROCS                : 2 3 4
RBRACKET             : 3 11 27 28 29 30 31 31 32 32 33 33 34 34 35 36 37
ROBOT_R              : 1 2 3 4 5
SEMICOLON            : 6 26
VARS                 : 6
assignTo             : 47
canjumpindir         : 86 87
canjumptothe         : 90 91 94 95
canmoveindir         : 84 85
canmovetothe         : 88 89 92 93
canpick              : 82 83
canput               : 80 81
do                   : 35 36 37
else                 : 31 32 33 34
error                : 
face                 : 72
facing               : 79
goto                 : 66 67 68 69
if                   : 31 32 33 34
jumpindir            : 62 63
jumptothe            : 54 55 58 59
move                 : 64 65
moveindir            : 60 61
movetothe            : 52 53 56 57
nop                  : 73
not                  : 96
pick                 : 50 51
put                  : 48 49
repeat               : 27 28 29 30
then                 : 31 32 33 34
turn                 : 70 71
while                : 35 36 37

Nonterminals, with rules where they appear

ID_list              : 6 8
assignTo_def         : 38
bloque_def           : 1 2 3 4 5 10
bloques_def          : 21 26 27 31 31 32 33 35
canmoveandjumpindir_def : 77
canmoveandjumptothe_def : 76
canputpick_def       : 75
conditions_def       : 27 28 29 30 31 32 33 34 35 36 37 96
cuerpo_def           : 16
estruc_otra_def      : 19 20
estructura_def       : 17
face_def             : 45
facing_def           : 74
final_def            : 3 20
func_def             : 11
function_def         : 18 25 26
goto_def             : 43
id_def               : 9 10
id_func              : 11 13
if_else_def          : 22 28 32 33 34 34 36
move_def             : 42
moveandjumpindir_def : 41
moveandjumptothe_def : 40
nop_def              : 46
not_def              : 78
prog                 : 0
put_def              : 39
repeat_def           : 24 30
turn_def             : 44
var_def              : 1 2 3
while_def            : 23 29 37

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . ROBOT_R var_def bloque_def
    (2) prog -> . ROBOT_R var_def PROCS bloque_def
    (3) prog -> . ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET
    (4) prog -> . ROBOT_R PROCS bloque_def
    (5) prog -> . ROBOT_R bloque_def

    ROBOT_R         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> ROBOT_R . var_def bloque_def
    (2) prog -> ROBOT_R . var_def PROCS bloque_def
    (3) prog -> ROBOT_R . var_def PROCS bloque_def LBRACKET final_def RBRACKET
    (4) prog -> ROBOT_R . PROCS bloque_def
    (5) prog -> ROBOT_R . bloque_def
    (6) var_def -> . VARS ID_list SEMICOLON
    (9) bloque_def -> . id_def
    (10) bloque_def -> . bloque_def id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    PROCS           shift and go to state 5
    VARS            shift and go to state 6
    ID              shift and go to state 8

    var_def                        shift and go to state 3
    bloque_def                     shift and go to state 4
    id_def                         shift and go to state 7

state 3

    (1) prog -> ROBOT_R var_def . bloque_def
    (2) prog -> ROBOT_R var_def . PROCS bloque_def
    (3) prog -> ROBOT_R var_def . PROCS bloque_def LBRACKET final_def RBRACKET
    (9) bloque_def -> . id_def
    (10) bloque_def -> . bloque_def id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    PROCS           shift and go to state 10
    ID              shift and go to state 8

    bloque_def                     shift and go to state 9
    id_def                         shift and go to state 7

state 4

    (5) prog -> ROBOT_R bloque_def .
    (10) bloque_def -> bloque_def . id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 5 (prog -> ROBOT_R bloque_def .)
    ID              shift and go to state 8

    id_def                         shift and go to state 11

state 5

    (4) prog -> ROBOT_R PROCS . bloque_def
    (9) bloque_def -> . id_def
    (10) bloque_def -> . bloque_def id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    ID              shift and go to state 8

    bloque_def                     shift and go to state 12
    id_def                         shift and go to state 7

state 6

    (6) var_def -> VARS . ID_list SEMICOLON
    (7) ID_list -> . ID
    (8) ID_list -> . ID_list COMMA ID

    ID              shift and go to state 14

    ID_list                        shift and go to state 13

state 7

    (9) bloque_def -> id_def .

    ID              reduce using rule 9 (bloque_def -> id_def .)
    $end            reduce using rule 9 (bloque_def -> id_def .)
    LBRACKET        reduce using rule 9 (bloque_def -> id_def .)


state 8

    (11) id_def -> ID . LBRACKET PLECA id_func PLECA func_def RBRACKET

    LBRACKET        shift and go to state 15


state 9

    (1) prog -> ROBOT_R var_def bloque_def .
    (10) bloque_def -> bloque_def . id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 1 (prog -> ROBOT_R var_def bloque_def .)
    ID              shift and go to state 8

    id_def                         shift and go to state 11

state 10

    (2) prog -> ROBOT_R var_def PROCS . bloque_def
    (3) prog -> ROBOT_R var_def PROCS . bloque_def LBRACKET final_def RBRACKET
    (9) bloque_def -> . id_def
    (10) bloque_def -> . bloque_def id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    ID              shift and go to state 8

    bloque_def                     shift and go to state 16
    id_def                         shift and go to state 7

state 11

    (10) bloque_def -> bloque_def id_def .

    ID              reduce using rule 10 (bloque_def -> bloque_def id_def .)
    $end            reduce using rule 10 (bloque_def -> bloque_def id_def .)
    LBRACKET        reduce using rule 10 (bloque_def -> bloque_def id_def .)


state 12

    (4) prog -> ROBOT_R PROCS bloque_def .
    (10) bloque_def -> bloque_def . id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 4 (prog -> ROBOT_R PROCS bloque_def .)
    ID              shift and go to state 8

    id_def                         shift and go to state 11

state 13

    (6) var_def -> VARS ID_list . SEMICOLON
    (8) ID_list -> ID_list . COMMA ID

    SEMICOLON       shift and go to state 17
    COMMA           shift and go to state 18


state 14

    (7) ID_list -> ID .

    SEMICOLON       reduce using rule 7 (ID_list -> ID .)
    COMMA           reduce using rule 7 (ID_list -> ID .)


state 15

    (11) id_def -> ID LBRACKET . PLECA id_func PLECA func_def RBRACKET

    PLECA           shift and go to state 19


state 16

    (2) prog -> ROBOT_R var_def PROCS bloque_def .
    (3) prog -> ROBOT_R var_def PROCS bloque_def . LBRACKET final_def RBRACKET
    (10) bloque_def -> bloque_def . id_def
    (11) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 2 (prog -> ROBOT_R var_def PROCS bloque_def .)
    LBRACKET        shift and go to state 20
    ID              shift and go to state 8

    id_def                         shift and go to state 11

state 17

    (6) var_def -> VARS ID_list SEMICOLON .

    PROCS           reduce using rule 6 (var_def -> VARS ID_list SEMICOLON .)
    ID              reduce using rule 6 (var_def -> VARS ID_list SEMICOLON .)


state 18

    (8) ID_list -> ID_list COMMA . ID

    ID              shift and go to state 21


state 19

    (11) id_def -> ID LBRACKET PLECA . id_func PLECA func_def RBRACKET
    (12) id_func -> . ID
    (13) id_func -> . ID COMMA id_func
    (14) id_func -> .

    ID              shift and go to state 22
    PLECA           reduce using rule 14 (id_func -> .)

    id_func                        shift and go to state 23

state 20

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET . final_def RBRACKET
    (19) final_def -> . estruc_otra_def
    (20) final_def -> . final_def estruc_otra_def
    (16) estruc_otra_def -> . cuerpo_def
    (17) estruc_otra_def -> . estructura_def
    (18) cuerpo_def -> . function_def
    (15) estructura_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    ID              shift and go to state 29
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    final_def                      shift and go to state 24
    estruc_otra_def                shift and go to state 25
    cuerpo_def                     shift and go to state 26
    estructura_def                 shift and go to state 27
    function_def                   shift and go to state 28
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 21

    (8) ID_list -> ID_list COMMA ID .

    SEMICOLON       reduce using rule 8 (ID_list -> ID_list COMMA ID .)
    COMMA           reduce using rule 8 (ID_list -> ID_list COMMA ID .)


state 22

    (12) id_func -> ID .
    (13) id_func -> ID . COMMA id_func

    PLECA           reduce using rule 12 (id_func -> ID .)
    COMMA           shift and go to state 51


state 23

    (11) id_def -> ID LBRACKET PLECA id_func . PLECA func_def RBRACKET

    PLECA           shift and go to state 52


state 24

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def . RBRACKET
    (20) final_def -> final_def . estruc_otra_def
    (16) estruc_otra_def -> . cuerpo_def
    (17) estruc_otra_def -> . estructura_def
    (18) cuerpo_def -> . function_def
    (15) estructura_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    RBRACKET        shift and go to state 53
    ID              shift and go to state 29
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    estruc_otra_def                shift and go to state 54
    cuerpo_def                     shift and go to state 26
    estructura_def                 shift and go to state 27
    function_def                   shift and go to state 28
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 25

    (19) final_def -> estruc_otra_def .

    RBRACKET        reduce using rule 19 (final_def -> estruc_otra_def .)
    ID              reduce using rule 19 (final_def -> estruc_otra_def .)
    assignTo        reduce using rule 19 (final_def -> estruc_otra_def .)
    put             reduce using rule 19 (final_def -> estruc_otra_def .)
    pick            reduce using rule 19 (final_def -> estruc_otra_def .)
    movetothe       reduce using rule 19 (final_def -> estruc_otra_def .)
    jumptothe       reduce using rule 19 (final_def -> estruc_otra_def .)
    moveindir       reduce using rule 19 (final_def -> estruc_otra_def .)
    jumpindir       reduce using rule 19 (final_def -> estruc_otra_def .)
    move            reduce using rule 19 (final_def -> estruc_otra_def .)
    goto            reduce using rule 19 (final_def -> estruc_otra_def .)
    turn            reduce using rule 19 (final_def -> estruc_otra_def .)
    face            reduce using rule 19 (final_def -> estruc_otra_def .)
    nop             reduce using rule 19 (final_def -> estruc_otra_def .)


state 26

    (16) estruc_otra_def -> cuerpo_def .

    RBRACKET        reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    ID              reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    assignTo        reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    put             reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    pick            reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    movetothe       reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    jumptothe       reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    moveindir       reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    jumpindir       reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    move            reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    goto            reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    turn            reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    face            reduce using rule 16 (estruc_otra_def -> cuerpo_def .)
    nop             reduce using rule 16 (estruc_otra_def -> cuerpo_def .)


state 27

    (17) estruc_otra_def -> estructura_def .

    RBRACKET        reduce using rule 17 (estruc_otra_def -> estructura_def .)
    ID              reduce using rule 17 (estruc_otra_def -> estructura_def .)
    assignTo        reduce using rule 17 (estruc_otra_def -> estructura_def .)
    put             reduce using rule 17 (estruc_otra_def -> estructura_def .)
    pick            reduce using rule 17 (estruc_otra_def -> estructura_def .)
    movetothe       reduce using rule 17 (estruc_otra_def -> estructura_def .)
    jumptothe       reduce using rule 17 (estruc_otra_def -> estructura_def .)
    moveindir       reduce using rule 17 (estruc_otra_def -> estructura_def .)
    jumpindir       reduce using rule 17 (estruc_otra_def -> estructura_def .)
    move            reduce using rule 17 (estruc_otra_def -> estructura_def .)
    goto            reduce using rule 17 (estruc_otra_def -> estructura_def .)
    turn            reduce using rule 17 (estruc_otra_def -> estructura_def .)
    face            reduce using rule 17 (estruc_otra_def -> estructura_def .)
    nop             reduce using rule 17 (estruc_otra_def -> estructura_def .)


state 28

    (18) cuerpo_def -> function_def .

    RBRACKET        reduce using rule 18 (cuerpo_def -> function_def .)
    ID              reduce using rule 18 (cuerpo_def -> function_def .)
    assignTo        reduce using rule 18 (cuerpo_def -> function_def .)
    put             reduce using rule 18 (cuerpo_def -> function_def .)
    pick            reduce using rule 18 (cuerpo_def -> function_def .)
    movetothe       reduce using rule 18 (cuerpo_def -> function_def .)
    jumptothe       reduce using rule 18 (cuerpo_def -> function_def .)
    moveindir       reduce using rule 18 (cuerpo_def -> function_def .)
    jumpindir       reduce using rule 18 (cuerpo_def -> function_def .)
    move            reduce using rule 18 (cuerpo_def -> function_def .)
    goto            reduce using rule 18 (cuerpo_def -> function_def .)
    turn            reduce using rule 18 (cuerpo_def -> function_def .)
    face            reduce using rule 18 (cuerpo_def -> function_def .)
    nop             reduce using rule 18 (cuerpo_def -> function_def .)


state 29

    (15) estructura_def -> ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 55


state 30

    (38) function_def -> assignTo_def .

    RBRACKET        reduce using rule 38 (function_def -> assignTo_def .)
    ID              reduce using rule 38 (function_def -> assignTo_def .)
    assignTo        reduce using rule 38 (function_def -> assignTo_def .)
    put             reduce using rule 38 (function_def -> assignTo_def .)
    pick            reduce using rule 38 (function_def -> assignTo_def .)
    movetothe       reduce using rule 38 (function_def -> assignTo_def .)
    jumptothe       reduce using rule 38 (function_def -> assignTo_def .)
    moveindir       reduce using rule 38 (function_def -> assignTo_def .)
    jumpindir       reduce using rule 38 (function_def -> assignTo_def .)
    move            reduce using rule 38 (function_def -> assignTo_def .)
    goto            reduce using rule 38 (function_def -> assignTo_def .)
    turn            reduce using rule 38 (function_def -> assignTo_def .)
    face            reduce using rule 38 (function_def -> assignTo_def .)
    nop             reduce using rule 38 (function_def -> assignTo_def .)
    SEMICOLON       reduce using rule 38 (function_def -> assignTo_def .)


state 31

    (39) function_def -> put_def .

    RBRACKET        reduce using rule 39 (function_def -> put_def .)
    ID              reduce using rule 39 (function_def -> put_def .)
    assignTo        reduce using rule 39 (function_def -> put_def .)
    put             reduce using rule 39 (function_def -> put_def .)
    pick            reduce using rule 39 (function_def -> put_def .)
    movetothe       reduce using rule 39 (function_def -> put_def .)
    jumptothe       reduce using rule 39 (function_def -> put_def .)
    moveindir       reduce using rule 39 (function_def -> put_def .)
    jumpindir       reduce using rule 39 (function_def -> put_def .)
    move            reduce using rule 39 (function_def -> put_def .)
    goto            reduce using rule 39 (function_def -> put_def .)
    turn            reduce using rule 39 (function_def -> put_def .)
    face            reduce using rule 39 (function_def -> put_def .)
    nop             reduce using rule 39 (function_def -> put_def .)
    SEMICOLON       reduce using rule 39 (function_def -> put_def .)


state 32

    (40) function_def -> moveandjumptothe_def .

    RBRACKET        reduce using rule 40 (function_def -> moveandjumptothe_def .)
    ID              reduce using rule 40 (function_def -> moveandjumptothe_def .)
    assignTo        reduce using rule 40 (function_def -> moveandjumptothe_def .)
    put             reduce using rule 40 (function_def -> moveandjumptothe_def .)
    pick            reduce using rule 40 (function_def -> moveandjumptothe_def .)
    movetothe       reduce using rule 40 (function_def -> moveandjumptothe_def .)
    jumptothe       reduce using rule 40 (function_def -> moveandjumptothe_def .)
    moveindir       reduce using rule 40 (function_def -> moveandjumptothe_def .)
    jumpindir       reduce using rule 40 (function_def -> moveandjumptothe_def .)
    move            reduce using rule 40 (function_def -> moveandjumptothe_def .)
    goto            reduce using rule 40 (function_def -> moveandjumptothe_def .)
    turn            reduce using rule 40 (function_def -> moveandjumptothe_def .)
    face            reduce using rule 40 (function_def -> moveandjumptothe_def .)
    nop             reduce using rule 40 (function_def -> moveandjumptothe_def .)
    SEMICOLON       reduce using rule 40 (function_def -> moveandjumptothe_def .)


state 33

    (41) function_def -> moveandjumpindir_def .

    RBRACKET        reduce using rule 41 (function_def -> moveandjumpindir_def .)
    ID              reduce using rule 41 (function_def -> moveandjumpindir_def .)
    assignTo        reduce using rule 41 (function_def -> moveandjumpindir_def .)
    put             reduce using rule 41 (function_def -> moveandjumpindir_def .)
    pick            reduce using rule 41 (function_def -> moveandjumpindir_def .)
    movetothe       reduce using rule 41 (function_def -> moveandjumpindir_def .)
    jumptothe       reduce using rule 41 (function_def -> moveandjumpindir_def .)
    moveindir       reduce using rule 41 (function_def -> moveandjumpindir_def .)
    jumpindir       reduce using rule 41 (function_def -> moveandjumpindir_def .)
    move            reduce using rule 41 (function_def -> moveandjumpindir_def .)
    goto            reduce using rule 41 (function_def -> moveandjumpindir_def .)
    turn            reduce using rule 41 (function_def -> moveandjumpindir_def .)
    face            reduce using rule 41 (function_def -> moveandjumpindir_def .)
    nop             reduce using rule 41 (function_def -> moveandjumpindir_def .)
    SEMICOLON       reduce using rule 41 (function_def -> moveandjumpindir_def .)


state 34

    (42) function_def -> move_def .

    RBRACKET        reduce using rule 42 (function_def -> move_def .)
    ID              reduce using rule 42 (function_def -> move_def .)
    assignTo        reduce using rule 42 (function_def -> move_def .)
    put             reduce using rule 42 (function_def -> move_def .)
    pick            reduce using rule 42 (function_def -> move_def .)
    movetothe       reduce using rule 42 (function_def -> move_def .)
    jumptothe       reduce using rule 42 (function_def -> move_def .)
    moveindir       reduce using rule 42 (function_def -> move_def .)
    jumpindir       reduce using rule 42 (function_def -> move_def .)
    move            reduce using rule 42 (function_def -> move_def .)
    goto            reduce using rule 42 (function_def -> move_def .)
    turn            reduce using rule 42 (function_def -> move_def .)
    face            reduce using rule 42 (function_def -> move_def .)
    nop             reduce using rule 42 (function_def -> move_def .)
    SEMICOLON       reduce using rule 42 (function_def -> move_def .)


state 35

    (43) function_def -> goto_def .

    RBRACKET        reduce using rule 43 (function_def -> goto_def .)
    ID              reduce using rule 43 (function_def -> goto_def .)
    assignTo        reduce using rule 43 (function_def -> goto_def .)
    put             reduce using rule 43 (function_def -> goto_def .)
    pick            reduce using rule 43 (function_def -> goto_def .)
    movetothe       reduce using rule 43 (function_def -> goto_def .)
    jumptothe       reduce using rule 43 (function_def -> goto_def .)
    moveindir       reduce using rule 43 (function_def -> goto_def .)
    jumpindir       reduce using rule 43 (function_def -> goto_def .)
    move            reduce using rule 43 (function_def -> goto_def .)
    goto            reduce using rule 43 (function_def -> goto_def .)
    turn            reduce using rule 43 (function_def -> goto_def .)
    face            reduce using rule 43 (function_def -> goto_def .)
    nop             reduce using rule 43 (function_def -> goto_def .)
    SEMICOLON       reduce using rule 43 (function_def -> goto_def .)


state 36

    (44) function_def -> turn_def .

    RBRACKET        reduce using rule 44 (function_def -> turn_def .)
    ID              reduce using rule 44 (function_def -> turn_def .)
    assignTo        reduce using rule 44 (function_def -> turn_def .)
    put             reduce using rule 44 (function_def -> turn_def .)
    pick            reduce using rule 44 (function_def -> turn_def .)
    movetothe       reduce using rule 44 (function_def -> turn_def .)
    jumptothe       reduce using rule 44 (function_def -> turn_def .)
    moveindir       reduce using rule 44 (function_def -> turn_def .)
    jumpindir       reduce using rule 44 (function_def -> turn_def .)
    move            reduce using rule 44 (function_def -> turn_def .)
    goto            reduce using rule 44 (function_def -> turn_def .)
    turn            reduce using rule 44 (function_def -> turn_def .)
    face            reduce using rule 44 (function_def -> turn_def .)
    nop             reduce using rule 44 (function_def -> turn_def .)
    SEMICOLON       reduce using rule 44 (function_def -> turn_def .)


state 37

    (45) function_def -> face_def .

    RBRACKET        reduce using rule 45 (function_def -> face_def .)
    ID              reduce using rule 45 (function_def -> face_def .)
    assignTo        reduce using rule 45 (function_def -> face_def .)
    put             reduce using rule 45 (function_def -> face_def .)
    pick            reduce using rule 45 (function_def -> face_def .)
    movetothe       reduce using rule 45 (function_def -> face_def .)
    jumptothe       reduce using rule 45 (function_def -> face_def .)
    moveindir       reduce using rule 45 (function_def -> face_def .)
    jumpindir       reduce using rule 45 (function_def -> face_def .)
    move            reduce using rule 45 (function_def -> face_def .)
    goto            reduce using rule 45 (function_def -> face_def .)
    turn            reduce using rule 45 (function_def -> face_def .)
    face            reduce using rule 45 (function_def -> face_def .)
    nop             reduce using rule 45 (function_def -> face_def .)
    SEMICOLON       reduce using rule 45 (function_def -> face_def .)


state 38

    (46) function_def -> nop_def .

    RBRACKET        reduce using rule 46 (function_def -> nop_def .)
    ID              reduce using rule 46 (function_def -> nop_def .)
    assignTo        reduce using rule 46 (function_def -> nop_def .)
    put             reduce using rule 46 (function_def -> nop_def .)
    pick            reduce using rule 46 (function_def -> nop_def .)
    movetothe       reduce using rule 46 (function_def -> nop_def .)
    jumptothe       reduce using rule 46 (function_def -> nop_def .)
    moveindir       reduce using rule 46 (function_def -> nop_def .)
    jumpindir       reduce using rule 46 (function_def -> nop_def .)
    move            reduce using rule 46 (function_def -> nop_def .)
    goto            reduce using rule 46 (function_def -> nop_def .)
    turn            reduce using rule 46 (function_def -> nop_def .)
    face            reduce using rule 46 (function_def -> nop_def .)
    nop             reduce using rule 46 (function_def -> nop_def .)
    SEMICOLON       reduce using rule 46 (function_def -> nop_def .)


state 39

    (47) assignTo_def -> assignTo . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 56


state 40

    (48) put_def -> put . DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> put . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 57


state 41

    (50) put_def -> pick . DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> pick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 58


state 42

    (52) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (56) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 59


state 43

    (54) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA DIRECTION
    (58) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 60


state 44

    (60) moveandjumpindir_def -> moveindir . DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> moveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 61


state 45

    (62) moveandjumpindir_def -> jumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> jumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 62


state 46

    (64) move_def -> move . DOSPUNTOS ID
    (65) move_def -> move . DOSPUNTOS INTEGER

    DOSPUNTOS       shift and go to state 63


state 47

    (66) goto_def -> goto . DOSPUNTOS ID COMMA ID
    (67) goto_def -> goto . DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> goto . DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> goto . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 64


state 48

    (70) turn_def -> turn . DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> turn . DOSPUNTOS LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 65


state 49

    (72) face_def -> face . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 66


state 50

    (73) nop_def -> nop . DOSPUNTOS

    DOSPUNTOS       shift and go to state 67


state 51

    (13) id_func -> ID COMMA . id_func
    (12) id_func -> . ID
    (13) id_func -> . ID COMMA id_func
    (14) id_func -> .

    ID              shift and go to state 22
    PLECA           reduce using rule 14 (id_func -> .)

    id_func                        shift and go to state 68

state 52

    (11) id_def -> ID LBRACKET PLECA id_func PLECA . func_def RBRACKET
    (21) func_def -> . bloques_def
    (22) func_def -> . if_else_def
    (23) func_def -> . while_def
    (24) func_def -> . repeat_def
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (35) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (27) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (28) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (29) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (30) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    while           shift and go to state 76
    repeat          shift and go to state 77
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    func_def                       shift and go to state 69
    bloques_def                    shift and go to state 70
    if_else_def                    shift and go to state 71
    while_def                      shift and go to state 72
    repeat_def                     shift and go to state 73
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 53

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .

    $end            reduce using rule 3 (prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .)


state 54

    (20) final_def -> final_def estruc_otra_def .

    RBRACKET        reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    ID              reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    assignTo        reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    put             reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    pick            reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    movetothe       reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    jumptothe       reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    moveindir       reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    jumpindir       reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    move            reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    goto            reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    turn            reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    face            reduce using rule 20 (final_def -> final_def estruc_otra_def .)
    nop             reduce using rule 20 (final_def -> final_def estruc_otra_def .)


state 55

    (15) estructura_def -> ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 78


state 56

    (47) assignTo_def -> assignTo DOSPUNTOS . INTEGER COMMA ID

    INTEGER         shift and go to state 79


state 57

    (48) put_def -> put DOSPUNTOS . ID COMMA ITEMS
    (49) put_def -> put DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 80
    INTEGER         shift and go to state 81


state 58

    (50) put_def -> pick DOSPUNTOS . INTEGER COMMA ITEMS
    (51) put_def -> pick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 82
    ID              shift and go to state 83


state 59

    (52) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA DIRECTION
    (53) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (56) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 84
    INTEGER         shift and go to state 85


state 60

    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA DIRECTION
    (58) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 86
    ID              shift and go to state 87


state 61

    (60) moveandjumpindir_def -> moveindir DOSPUNTOS . ID COMMA CARDINAL
    (61) moveandjumpindir_def -> moveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 88
    INTEGER         shift and go to state 89


state 62

    (62) moveandjumpindir_def -> jumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> jumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 90
    ID              shift and go to state 91


state 63

    (64) move_def -> move DOSPUNTOS . ID
    (65) move_def -> move DOSPUNTOS . INTEGER

    ID              shift and go to state 92
    INTEGER         shift and go to state 93


state 64

    (66) goto_def -> goto DOSPUNTOS . ID COMMA ID
    (67) goto_def -> goto DOSPUNTOS . INTEGER COMMA INTEGER
    (68) goto_def -> goto DOSPUNTOS . ID COMMA INTEGER
    (69) goto_def -> goto DOSPUNTOS . INTEGER COMMA ID

    ID              shift and go to state 94
    INTEGER         shift and go to state 95


state 65

    (70) turn_def -> turn DOSPUNTOS . DIRECTION_TURN
    (71) turn_def -> turn DOSPUNTOS . LEFTANDRIGHT

    DIRECTION_TURN  shift and go to state 96
    LEFTANDRIGHT    shift and go to state 97


state 66

    (72) face_def -> face DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 98


state 67

    (73) nop_def -> nop DOSPUNTOS .

    RBRACKET        reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    ID              reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    assignTo        reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    put             reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    pick            reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    movetothe       reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    jumptothe       reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    moveindir       reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    jumpindir       reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    move            reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    goto            reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    turn            reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    face            reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    nop             reduce using rule 73 (nop_def -> nop DOSPUNTOS .)
    SEMICOLON       reduce using rule 73 (nop_def -> nop DOSPUNTOS .)


state 68

    (13) id_func -> ID COMMA id_func .

    PLECA           reduce using rule 13 (id_func -> ID COMMA id_func .)


state 69

    (11) id_def -> ID LBRACKET PLECA id_func PLECA func_def . RBRACKET

    RBRACKET        shift and go to state 99


state 70

    (21) func_def -> bloques_def .
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        reduce using rule 21 (func_def -> bloques_def .)
    SEMICOLON       shift and go to state 100


state 71

    (22) func_def -> if_else_def .

    RBRACKET        reduce using rule 22 (func_def -> if_else_def .)


state 72

    (23) func_def -> while_def .

    RBRACKET        reduce using rule 23 (func_def -> while_def .)


state 73

    (24) func_def -> repeat_def .

    RBRACKET        reduce using rule 24 (func_def -> repeat_def .)


state 74

    (25) bloques_def -> function_def .

    SEMICOLON       reduce using rule 25 (bloques_def -> function_def .)
    RBRACKET        reduce using rule 25 (bloques_def -> function_def .)


state 75

    (31) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 101


state 76

    (35) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 102


state 77

    (27) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (28) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (29) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (30) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET

    DOSPUNTOS       shift and go to state 103


state 78

    (15) estructura_def -> ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 104


state 79

    (47) assignTo_def -> assignTo DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 105


state 80

    (48) put_def -> put DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 106


state 81

    (49) put_def -> put DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 107


state 82

    (50) put_def -> pick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 108


state 83

    (51) put_def -> pick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 109


state 84

    (52) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA DIRECTION
    (56) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 110


state 85

    (53) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (57) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 111


state 86

    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (58) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 112


state 87

    (55) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA DIRECTION
    (59) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 113


state 88

    (60) moveandjumpindir_def -> moveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 114


state 89

    (61) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 115


state 90

    (62) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 116


state 91

    (63) moveandjumpindir_def -> jumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 117


state 92

    (64) move_def -> move DOSPUNTOS ID .

    RBRACKET        reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    ID              reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    assignTo        reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    put             reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    pick            reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    movetothe       reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    jumptothe       reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    moveindir       reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    jumpindir       reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    move            reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    goto            reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    turn            reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    face            reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    nop             reduce using rule 64 (move_def -> move DOSPUNTOS ID .)
    SEMICOLON       reduce using rule 64 (move_def -> move DOSPUNTOS ID .)


state 93

    (65) move_def -> move DOSPUNTOS INTEGER .

    RBRACKET        reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    ID              reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    assignTo        reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    put             reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    pick            reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    movetothe       reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    jumptothe       reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    moveindir       reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    jumpindir       reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    move            reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    goto            reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    turn            reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    face            reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    nop             reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)
    SEMICOLON       reduce using rule 65 (move_def -> move DOSPUNTOS INTEGER .)


state 94

    (66) goto_def -> goto DOSPUNTOS ID . COMMA ID
    (68) goto_def -> goto DOSPUNTOS ID . COMMA INTEGER

    COMMA           shift and go to state 118


state 95

    (67) goto_def -> goto DOSPUNTOS INTEGER . COMMA INTEGER
    (69) goto_def -> goto DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 119


state 96

    (70) turn_def -> turn DOSPUNTOS DIRECTION_TURN .

    RBRACKET        reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    ID              reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    assignTo        reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    put             reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    pick            reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    movetothe       reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    jumptothe       reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    moveindir       reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    jumpindir       reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    move            reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    goto            reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    turn            reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    face            reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    nop             reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    SEMICOLON       reduce using rule 70 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)


state 97

    (71) turn_def -> turn DOSPUNTOS LEFTANDRIGHT .

    RBRACKET        reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    ID              reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    assignTo        reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    put             reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    pick            reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    movetothe       reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    jumptothe       reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    moveindir       reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    jumpindir       reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    move            reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    goto            reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    turn            reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    face            reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    nop             reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 71 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)


state 98

    (72) face_def -> face DOSPUNTOS CARDINAL .

    RBRACKET        reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    ID              reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    assignTo        reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    put             reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    pick            reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    movetothe       reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    jumptothe       reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    moveindir       reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    jumpindir       reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    move            reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    goto            reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    turn            reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    face            reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    nop             reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)
    SEMICOLON       reduce using rule 72 (face_def -> face DOSPUNTOS CARDINAL .)


state 99

    (11) id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .

    ID              reduce using rule 11 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    $end            reduce using rule 11 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    LBRACKET        reduce using rule 11 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)


state 100

    (26) bloques_def -> bloques_def SEMICOLON . function_def
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    function_def                   shift and go to state 120
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 101

    (31) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (74) conditions_def -> . facing_def
    (75) conditions_def -> . canputpick_def
    (76) conditions_def -> . canmoveandjumptothe_def
    (77) conditions_def -> . canmoveandjumpindir_def
    (78) conditions_def -> . not_def
    (79) facing_def -> . facing DOSPUNTOS CARDINAL
    (80) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (81) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (82) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (83) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (92) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (94) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (84) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (86) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (96) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 127
    canput          shift and go to state 128
    canpick         shift and go to state 129
    canmovetothe    shift and go to state 130
    canjumptothe    shift and go to state 131
    canmoveindir    shift and go to state 132
    canjumpindir    shift and go to state 133
    not             shift and go to state 134

    conditions_def                 shift and go to state 121
    facing_def                     shift and go to state 122
    canputpick_def                 shift and go to state 123
    canmoveandjumptothe_def        shift and go to state 124
    canmoveandjumpindir_def        shift and go to state 125
    not_def                        shift and go to state 126

state 102

    (35) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (74) conditions_def -> . facing_def
    (75) conditions_def -> . canputpick_def
    (76) conditions_def -> . canmoveandjumptothe_def
    (77) conditions_def -> . canmoveandjumpindir_def
    (78) conditions_def -> . not_def
    (79) facing_def -> . facing DOSPUNTOS CARDINAL
    (80) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (81) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (82) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (83) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (92) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (94) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (84) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (86) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (96) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 127
    canput          shift and go to state 128
    canpick         shift and go to state 129
    canmovetothe    shift and go to state 130
    canjumptothe    shift and go to state 131
    canmoveindir    shift and go to state 132
    canjumpindir    shift and go to state 133
    not             shift and go to state 134

    conditions_def                 shift and go to state 135
    facing_def                     shift and go to state 122
    canputpick_def                 shift and go to state 123
    canmoveandjumptothe_def        shift and go to state 124
    canmoveandjumpindir_def        shift and go to state 125
    not_def                        shift and go to state 126

state 103

    (27) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET bloques_def RBRACKET
    (28) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET if_else_def RBRACKET
    (29) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET while_def RBRACKET
    (30) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET repeat_def RBRACKET
    (74) conditions_def -> . facing_def
    (75) conditions_def -> . canputpick_def
    (76) conditions_def -> . canmoveandjumptothe_def
    (77) conditions_def -> . canmoveandjumpindir_def
    (78) conditions_def -> . not_def
    (79) facing_def -> . facing DOSPUNTOS CARDINAL
    (80) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (81) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (82) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (83) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (92) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (94) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (84) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (86) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (96) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 127
    canput          shift and go to state 128
    canpick         shift and go to state 129
    canmovetothe    shift and go to state 130
    canjumptothe    shift and go to state 131
    canmoveindir    shift and go to state 132
    canjumpindir    shift and go to state 133
    not             shift and go to state 134

    conditions_def                 shift and go to state 136
    facing_def                     shift and go to state 122
    canputpick_def                 shift and go to state 123
    canmoveandjumptothe_def        shift and go to state 124
    canmoveandjumpindir_def        shift and go to state 125
    not_def                        shift and go to state 126

state 104

    (15) estructura_def -> ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 137


state 105

    (47) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA . ID

    ID              shift and go to state 138


state 106

    (48) put_def -> put DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 139


state 107

    (49) put_def -> put DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 140


state 108

    (50) put_def -> pick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 141


state 109

    (51) put_def -> pick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 142


state 110

    (52) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . DIRECTION
    (56) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 143
    LEFTANDRIGHT    shift and go to state 144


state 111

    (53) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (57) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 145
    LEFTANDRIGHT    shift and go to state 146


state 112

    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (58) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 147
    LEFTANDRIGHT    shift and go to state 148


state 113

    (55) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . DIRECTION
    (59) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 149
    LEFTANDRIGHT    shift and go to state 150


state 114

    (60) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 151


state 115

    (61) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 152


state 116

    (62) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 153


state 117

    (63) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 154


state 118

    (66) goto_def -> goto DOSPUNTOS ID COMMA . ID
    (68) goto_def -> goto DOSPUNTOS ID COMMA . INTEGER

    ID              shift and go to state 155
    INTEGER         shift and go to state 156


state 119

    (67) goto_def -> goto DOSPUNTOS INTEGER COMMA . INTEGER
    (69) goto_def -> goto DOSPUNTOS INTEGER COMMA . ID

    INTEGER         shift and go to state 157
    ID              shift and go to state 158


state 120

    (26) bloques_def -> bloques_def SEMICOLON function_def .

    SEMICOLON       reduce using rule 26 (bloques_def -> bloques_def SEMICOLON function_def .)
    RBRACKET        reduce using rule 26 (bloques_def -> bloques_def SEMICOLON function_def .)


state 121

    (31) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    then            shift and go to state 159


state 122

    (74) conditions_def -> facing_def .

    then            reduce using rule 74 (conditions_def -> facing_def .)
    do              reduce using rule 74 (conditions_def -> facing_def .)
    LBRACKET        reduce using rule 74 (conditions_def -> facing_def .)


state 123

    (75) conditions_def -> canputpick_def .

    then            reduce using rule 75 (conditions_def -> canputpick_def .)
    do              reduce using rule 75 (conditions_def -> canputpick_def .)
    LBRACKET        reduce using rule 75 (conditions_def -> canputpick_def .)


state 124

    (76) conditions_def -> canmoveandjumptothe_def .

    then            reduce using rule 76 (conditions_def -> canmoveandjumptothe_def .)
    do              reduce using rule 76 (conditions_def -> canmoveandjumptothe_def .)
    LBRACKET        reduce using rule 76 (conditions_def -> canmoveandjumptothe_def .)


state 125

    (77) conditions_def -> canmoveandjumpindir_def .

    then            reduce using rule 77 (conditions_def -> canmoveandjumpindir_def .)
    do              reduce using rule 77 (conditions_def -> canmoveandjumpindir_def .)
    LBRACKET        reduce using rule 77 (conditions_def -> canmoveandjumpindir_def .)


state 126

    (78) conditions_def -> not_def .

    then            reduce using rule 78 (conditions_def -> not_def .)
    do              reduce using rule 78 (conditions_def -> not_def .)
    LBRACKET        reduce using rule 78 (conditions_def -> not_def .)


state 127

    (79) facing_def -> facing . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 160


state 128

    (80) canputpick_def -> canput . DOSPUNTOS ID COMMA ITEMS
    (81) canputpick_def -> canput . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 161


state 129

    (82) canputpick_def -> canpick . DOSPUNTOS INTEGER COMMA ITEMS
    (83) canputpick_def -> canpick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 162


state 130

    (88) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (92) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 163


state 131

    (90) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA DIRECTION
    (94) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 164


state 132

    (84) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 165


state 133

    (86) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 166


state 134

    (96) not_def -> not . DOSPUNTOS conditions_def

    DOSPUNTOS       shift and go to state 167


state 135

    (35) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET while_def RBRACKET

    do              shift and go to state 168


state 136

    (27) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET bloques_def RBRACKET
    (28) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET if_else_def RBRACKET
    (29) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET while_def RBRACKET
    (30) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET repeat_def RBRACKET

    LBRACKET        shift and go to state 169


state 137

    (15) estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    assignTo        reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    put             reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    pick            reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    movetothe       reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    jumptothe       reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    moveindir       reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    jumpindir       reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    move            reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    goto            reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    turn            reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    face            reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    nop             reduce using rule 15 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 138

    (47) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    ID              reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    assignTo        reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    put             reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    pick            reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    movetothe       reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    jumptothe       reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    moveindir       reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    jumpindir       reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    move            reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    goto            reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    turn            reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    face            reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    nop             reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 47 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)


state 139

    (48) put_def -> put DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    ID              reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    assignTo        reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    put             reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    pick            reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    movetothe       reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    jumptothe       reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    moveindir       reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    jumpindir       reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    move            reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    goto            reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    turn            reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    face            reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    nop             reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 48 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)


state 140

    (49) put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    ID              reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    assignTo        reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    put             reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    pick            reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    movetothe       reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    jumptothe       reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    moveindir       reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    jumpindir       reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    move            reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    goto            reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    turn            reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    face            reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    nop             reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 49 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)


state 141

    (50) put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .

    RBRACKET        reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    ID              reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    assignTo        reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    put             reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    pick            reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    movetothe       reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    jumptothe       reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    moveindir       reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    jumpindir       reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    move            reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    goto            reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    turn            reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    face            reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    nop             reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    SEMICOLON       reduce using rule 50 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)


state 142

    (51) put_def -> pick DOSPUNTOS ID COMMA ITEMS .

    RBRACKET        reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    ID              reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    assignTo        reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    put             reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    pick            reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    movetothe       reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    jumptothe       reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    moveindir       reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    jumpindir       reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    move            reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    goto            reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    turn            reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    face            reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    nop             reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    SEMICOLON       reduce using rule 51 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)


state 143

    (52) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    ID              reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    assignTo        reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    put             reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    pick            reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    movetothe       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    jumptothe       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    moveindir       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    jumpindir       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    move            reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    goto            reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    turn            reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    face            reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    nop             reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)


state 144

    (56) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    ID              reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    assignTo        reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    put             reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    pick            reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    movetothe       reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    jumptothe       reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    moveindir       reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    jumpindir       reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    move            reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    goto            reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    turn            reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    face            reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    nop             reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 56 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 145

    (53) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    ID              reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    assignTo        reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    put             reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    pick            reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    movetothe       reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    jumptothe       reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    moveindir       reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    jumpindir       reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    move            reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    goto            reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    turn            reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    face            reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    nop             reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 53 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 146

    (57) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    ID              reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    assignTo        reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    put             reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    pick            reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    movetothe       reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    jumptothe       reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    moveindir       reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    jumpindir       reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    move            reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    goto            reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    turn            reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    face            reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    nop             reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 57 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 147

    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    RBRACKET        reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    ID              reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    assignTo        reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    put             reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    pick            reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    movetothe       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    jumptothe       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    moveindir       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    jumpindir       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    move            reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    goto            reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    turn            reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    face            reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    nop             reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    SEMICOLON       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 148

    (58) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    ID              reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    assignTo        reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    put             reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    pick            reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    movetothe       reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    jumptothe       reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    moveindir       reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    jumpindir       reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    move            reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    goto            reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    turn            reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    face            reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    nop             reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 58 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 149

    (55) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .

    RBRACKET        reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    ID              reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    assignTo        reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    put             reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    pick            reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    movetothe       reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    jumptothe       reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    moveindir       reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    jumpindir       reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    move            reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    goto            reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    turn            reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    face            reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    nop             reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    SEMICOLON       reduce using rule 55 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 150

    (59) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    RBRACKET        reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    ID              reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    assignTo        reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    put             reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    pick            reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    movetothe       reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    jumptothe       reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    moveindir       reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    jumpindir       reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    move            reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    goto            reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    turn            reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    face            reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    nop             reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    SEMICOLON       reduce using rule 59 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 151

    (60) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    ID              reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    assignTo        reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    put             reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    pick            reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    movetothe       reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    jumptothe       reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    moveindir       reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    jumpindir       reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    move            reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    goto            reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    turn            reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    face            reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    nop             reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 60 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)


state 152

    (61) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    ID              reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    assignTo        reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    put             reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    pick            reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    movetothe       reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    jumptothe       reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    moveindir       reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    jumpindir       reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    move            reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    goto            reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    turn            reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    face            reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    nop             reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 61 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 153

    (62) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    RBRACKET        reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    ID              reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    assignTo        reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    put             reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    pick            reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    movetothe       reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    jumptothe       reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    moveindir       reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    jumpindir       reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    move            reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    goto            reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    turn            reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    face            reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    nop             reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    SEMICOLON       reduce using rule 62 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 154

    (63) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .

    RBRACKET        reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    ID              reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    assignTo        reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    put             reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    pick            reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    movetothe       reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    jumptothe       reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    moveindir       reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    jumpindir       reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    move            reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    goto            reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    turn            reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    face            reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    nop             reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    SEMICOLON       reduce using rule 63 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 155

    (66) goto_def -> goto DOSPUNTOS ID COMMA ID .

    RBRACKET        reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    ID              reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    assignTo        reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    put             reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    pick            reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    movetothe       reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    jumptothe       reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    moveindir       reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    jumpindir       reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    move            reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    goto            reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    turn            reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    face            reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    nop             reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    SEMICOLON       reduce using rule 66 (goto_def -> goto DOSPUNTOS ID COMMA ID .)


state 156

    (68) goto_def -> goto DOSPUNTOS ID COMMA INTEGER .

    RBRACKET        reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    ID              reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    assignTo        reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    put             reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    pick            reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    movetothe       reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    jumptothe       reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    moveindir       reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    jumpindir       reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    move            reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    goto            reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    turn            reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    face            reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    nop             reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    SEMICOLON       reduce using rule 68 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)


state 157

    (67) goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    assignTo        reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    put             reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    pick            reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    movetothe       reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    jumptothe       reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    moveindir       reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    jumpindir       reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    move            reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    goto            reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    turn            reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    face            reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    nop             reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    SEMICOLON       reduce using rule 67 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)


state 158

    (69) goto_def -> goto DOSPUNTOS INTEGER COMMA ID .

    RBRACKET        reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    ID              reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    assignTo        reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    put             reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    pick            reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    movetothe       reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    jumptothe       reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    moveindir       reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    jumpindir       reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    move            reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    goto            reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    turn            reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    face            reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    nop             reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    SEMICOLON       reduce using rule 69 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)


state 159

    (31) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 170


state 160

    (79) facing_def -> facing DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 171


state 161

    (80) canputpick_def -> canput DOSPUNTOS . ID COMMA ITEMS
    (81) canputpick_def -> canput DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 172
    INTEGER         shift and go to state 173


state 162

    (82) canputpick_def -> canpick DOSPUNTOS . INTEGER COMMA ITEMS
    (83) canputpick_def -> canpick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 174
    ID              shift and go to state 175


state 163

    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (92) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 176
    INTEGER         shift and go to state 177


state 164

    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA DIRECTION
    (94) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 178
    ID              shift and go to state 179


state 165

    (84) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 180
    INTEGER         shift and go to state 181


state 166

    (86) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 182
    ID              shift and go to state 183


state 167

    (96) not_def -> not DOSPUNTOS . conditions_def
    (74) conditions_def -> . facing_def
    (75) conditions_def -> . canputpick_def
    (76) conditions_def -> . canmoveandjumptothe_def
    (77) conditions_def -> . canmoveandjumpindir_def
    (78) conditions_def -> . not_def
    (79) facing_def -> . facing DOSPUNTOS CARDINAL
    (80) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (81) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (82) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (83) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (91) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (92) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (93) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (94) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (95) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (84) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (85) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (86) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (87) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (96) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 127
    canput          shift and go to state 128
    canpick         shift and go to state 129
    canmovetothe    shift and go to state 130
    canjumptothe    shift and go to state 131
    canmoveindir    shift and go to state 132
    canjumpindir    shift and go to state 133
    not             shift and go to state 134

    conditions_def                 shift and go to state 184
    facing_def                     shift and go to state 122
    canputpick_def                 shift and go to state 123
    canmoveandjumptothe_def        shift and go to state 124
    canmoveandjumpindir_def        shift and go to state 125
    not_def                        shift and go to state 126

state 168

    (35) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 185


state 169

    (27) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . bloques_def RBRACKET
    (28) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . if_else_def RBRACKET
    (29) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . while_def RBRACKET
    (30) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . repeat_def RBRACKET
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (35) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (27) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (28) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (29) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (30) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    while           shift and go to state 76
    repeat          shift and go to state 77
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    bloques_def                    shift and go to state 186
    if_else_def                    shift and go to state 187
    while_def                      shift and go to state 188
    repeat_def                     shift and go to state 189
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 170

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 190


state 171

    (79) facing_def -> facing DOSPUNTOS CARDINAL .

    then            reduce using rule 79 (facing_def -> facing DOSPUNTOS CARDINAL .)
    do              reduce using rule 79 (facing_def -> facing DOSPUNTOS CARDINAL .)
    LBRACKET        reduce using rule 79 (facing_def -> facing DOSPUNTOS CARDINAL .)


state 172

    (80) canputpick_def -> canput DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 191


state 173

    (81) canputpick_def -> canput DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 192


state 174

    (82) canputpick_def -> canpick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 193


state 175

    (83) canputpick_def -> canpick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 194


state 176

    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA DIRECTION
    (92) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 195


state 177

    (89) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (93) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 196


state 178

    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (94) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 197


state 179

    (91) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA DIRECTION
    (95) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 198


state 180

    (84) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 199


state 181

    (85) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 200


state 182

    (86) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 201


state 183

    (87) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 202


state 184

    (96) not_def -> not DOSPUNTOS conditions_def .

    then            reduce using rule 96 (not_def -> not DOSPUNTOS conditions_def .)
    do              reduce using rule 96 (not_def -> not DOSPUNTOS conditions_def .)
    LBRACKET        reduce using rule 96 (not_def -> not DOSPUNTOS conditions_def .)


state 185

    (35) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (36) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET if_else_def RBRACKET
    (37) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET while_def RBRACKET

    LBRACKET        shift and go to state 203


state 186

    (27) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def . RBRACKET
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 204
    SEMICOLON       shift and go to state 100


state 187

    (28) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 205


state 188

    (29) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 206


state 189

    (30) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def . RBRACKET

    RBRACKET        shift and go to state 207


state 190

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    bloques_def                    shift and go to state 208
    if_else_def                    shift and go to state 209
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 191

    (80) canputpick_def -> canput DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 210


state 192

    (81) canputpick_def -> canput DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 211


state 193

    (82) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 212


state 194

    (83) canputpick_def -> canpick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 213


state 195

    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . DIRECTION
    (92) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 214
    LEFTANDRIGHT    shift and go to state 215


state 196

    (89) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (93) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 216
    LEFTANDRIGHT    shift and go to state 217


state 197

    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (94) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 218
    LEFTANDRIGHT    shift and go to state 219


state 198

    (91) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . DIRECTION
    (95) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 220
    LEFTANDRIGHT    shift and go to state 221


state 199

    (84) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 222


state 200

    (85) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 223


state 201

    (86) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 224


state 202

    (87) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 225


state 203

    (35) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (36) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (37) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . while_def RBRACKET
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (35) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (36) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (37) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    while           shift and go to state 76
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    bloques_def                    shift and go to state 226
    if_else_def                    shift and go to state 227
    while_def                      shift and go to state 228
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 204

    (27) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 27 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .)


state 205

    (28) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 28 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .)


state 206

    (29) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 29 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .)


state 207

    (30) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .

    RBRACKET        reduce using rule 30 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .)


state 208

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 229
    SEMICOLON       shift and go to state 100


state 209

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    RBRACKET        shift and go to state 230


state 210

    (80) canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 80 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 80 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 80 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)


state 211

    (81) canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 81 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 81 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 81 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)


state 212

    (82) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 82 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 82 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 82 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)


state 213

    (83) canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 83 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 83 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 83 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)


state 214

    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)


state 215

    (92) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 92 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 92 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 92 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 216

    (89) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 89 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 89 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 89 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 217

    (93) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 93 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 93 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 93 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 218

    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 219

    (94) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 94 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 94 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 94 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 220

    (91) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 91 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 91 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 91 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 221

    (95) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 95 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 95 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 95 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 222

    (84) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 84 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 84 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 84 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)


state 223

    (85) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 85 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 85 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 85 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 224

    (86) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 86 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 86 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 86 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 225

    (87) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 87 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 87 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 87 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 226

    (35) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 231
    SEMICOLON       shift and go to state 100


state 227

    (36) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 232


state 228

    (37) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 233


state 229

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 234


state 230

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 235


state 231

    (35) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 35 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 232

    (36) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 36 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 233

    (37) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 37 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .)


state 234

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 236


state 235

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 237


state 236

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 238


state 237

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 239


state 238

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    bloques_def                    shift and go to state 240
    if_else_def                    shift and go to state 241
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 239

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (25) bloques_def -> . function_def
    (26) bloques_def -> . bloques_def SEMICOLON function_def
    (31) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (32) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (33) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (34) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (38) function_def -> . assignTo_def
    (39) function_def -> . put_def
    (40) function_def -> . moveandjumptothe_def
    (41) function_def -> . moveandjumpindir_def
    (42) function_def -> . move_def
    (43) function_def -> . goto_def
    (44) function_def -> . turn_def
    (45) function_def -> . face_def
    (46) function_def -> . nop_def
    (47) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (48) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (49) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (50) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (51) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (55) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (56) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (57) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (58) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (59) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (60) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (61) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (62) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (63) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (64) move_def -> . move DOSPUNTOS ID
    (65) move_def -> . move DOSPUNTOS INTEGER
    (66) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (67) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (68) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (69) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (70) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (71) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (72) face_def -> . face DOSPUNTOS CARDINAL
    (73) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 75
    assignTo        shift and go to state 39
    put             shift and go to state 40
    pick            shift and go to state 41
    movetothe       shift and go to state 42
    jumptothe       shift and go to state 43
    moveindir       shift and go to state 44
    jumpindir       shift and go to state 45
    move            shift and go to state 46
    goto            shift and go to state 47
    turn            shift and go to state 48
    face            shift and go to state 49
    nop             shift and go to state 50

    if_else_def                    shift and go to state 242
    bloques_def                    shift and go to state 243
    function_def                   shift and go to state 74
    assignTo_def                   shift and go to state 30
    put_def                        shift and go to state 31
    moveandjumptothe_def           shift and go to state 32
    moveandjumpindir_def           shift and go to state 33
    move_def                       shift and go to state 34
    goto_def                       shift and go to state 35
    turn_def                       shift and go to state 36
    face_def                       shift and go to state 37
    nop_def                        shift and go to state 38

state 240

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 244
    SEMICOLON       shift and go to state 100


state 241

    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 245


state 242

    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 246


state 243

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (26) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 247
    SEMICOLON       shift and go to state 100


state 244

    (31) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 31 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 245

    (33) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 33 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 246

    (34) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 34 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 247

    (32) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 32 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)


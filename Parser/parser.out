Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> ROBOT_R var_def PROCS
Rule 2     prog -> ROBOT_R var_def PROCS bloque_def
Rule 3     prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET
Rule 4     var_def -> VARS ID_list SEMICOLON
Rule 5     ID_list -> ID
Rule 6     ID_list -> ID_list COMMA ID
Rule 7     bloque_def -> id_def
Rule 8     bloque_def -> bloque_def id_def
Rule 9     id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET
Rule 10    id_func -> ID
Rule 11    id_func -> ID COMMA id_func
Rule 12    id_func -> <empty>
Rule 13    estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 14    final_def -> estructura_def
Rule 15    final_def -> final_def estructura_def
Rule 16    func_def -> bloques_def
Rule 17    func_def -> if_else_def
Rule 18    func_def -> while_def
Rule 19    func_def -> repeat_def
Rule 20    bloques_def -> function_def
Rule 21    bloques_def -> bloques_def SEMICOLON function_def
Rule 22    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
Rule 23    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
Rule 24    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
Rule 25    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
Rule 26    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 27    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 28    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 29    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 30    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 31    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 32    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
Rule 33    function_def -> assignTo_def
Rule 34    function_def -> put_def
Rule 35    function_def -> moveandjumptothe_def
Rule 36    function_def -> moveandjumpindir_def
Rule 37    function_def -> move_def
Rule 38    function_def -> goto_def
Rule 39    function_def -> turn_def
Rule 40    function_def -> face_def
Rule 41    function_def -> nop_def
Rule 42    assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID
Rule 43    put_def -> put DOSPUNTOS ID COMMA ITEMS
Rule 44    put_def -> put DOSPUNTOS INTEGER COMMA ITEMS
Rule 45    put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS
Rule 46    put_def -> pick DOSPUNTOS ID COMMA ITEMS
Rule 47    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION
Rule 48    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 49    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 50    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 51    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 52    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 53    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 54    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 55    moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL
Rule 56    moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 57    moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 58    moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 59    move_def -> move DOSPUNTOS ID
Rule 60    move_def -> move DOSPUNTOS INTEGER
Rule 61    goto_def -> goto DOSPUNTOS ID COMMA ID
Rule 62    goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER
Rule 63    goto_def -> goto DOSPUNTOS ID COMMA INTEGER
Rule 64    goto_def -> goto DOSPUNTOS INTEGER COMMA ID
Rule 65    turn_def -> turn DOSPUNTOS DIRECTION_TURN
Rule 66    turn_def -> turn DOSPUNTOS LEFTANDRIGHT
Rule 67    face_def -> face DOSPUNTOS CARDINAL
Rule 68    nop_def -> nop DOSPUNTOS
Rule 69    conditions_def -> facing_def
Rule 70    conditions_def -> canputpick_def
Rule 71    conditions_def -> canmoveandjumptothe_def
Rule 72    conditions_def -> canmoveandjumpindir_def
Rule 73    conditions_def -> not_def
Rule 74    facing_def -> facing DOSPUNTOS CARDINAL
Rule 75    canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS
Rule 76    canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS
Rule 77    canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS
Rule 78    canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS
Rule 79    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL
Rule 80    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 81    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 82    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 83    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION
Rule 84    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 85    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 86    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 87    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 88    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 89    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 90    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 91    not_def -> not DOSPUNTOS conditions_def

Terminals, with rules where they appear

CARDINAL             : 55 56 57 58 67 74 79 80 81 82
COMMA                : 6 11 13 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 61 62 63 64 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
DIRECTION            : 47 48 49 50 83 84 85 86
DIRECTION_TURN       : 65
DOSPUNTOS            : 13 22 23 24 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 31 31 32 32 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
ID                   : 5 6 9 10 11 13 42 43 46 47 50 51 54 55 58 59 61 61 63 64 75 78 79 82 83 86 87 90
INTEGER              : 13 13 42 44 45 48 49 52 53 56 57 60 62 62 63 64 76 77 80 81 84 85 88 89
ITEMS                : 43 44 45 46 75 76 77 78
LBRACKET             : 3 9 22 23 24 25 26 26 27 27 28 28 29 29 30 31 32
LEFTANDRIGHT         : 51 52 53 54 66 87 88 89 90
PLECA                : 9 9
PROCS                : 1 2 3
RBRACKET             : 3 9 22 23 24 25 26 26 27 27 28 28 29 29 30 31 32
ROBOT_R              : 1 2 3
SEMICOLON            : 4 21
VARS                 : 4
assignTo             : 42
canjumpindir         : 81 82
canjumptothe         : 85 86 89 90
canmoveindir         : 79 80
canmovetothe         : 83 84 87 88
canpick              : 77 78
canput               : 75 76
do                   : 30 31 32
else                 : 26 27 28 29
error                : 
face                 : 67
facing               : 74
goto                 : 61 62 63 64
if                   : 26 27 28 29
jumpindir            : 57 58
jumptothe            : 49 50 53 54
move                 : 59 60
moveindir            : 55 56
movetothe            : 47 48 51 52
nop                  : 68
not                  : 91
pick                 : 45 46
put                  : 43 44
repeat               : 22 23 24 25
then                 : 26 27 28 29
turn                 : 65 66
while                : 30 31 32

Nonterminals, with rules where they appear

ID_list              : 4 6
assignTo_def         : 33
bloque_def           : 2 3 8
bloques_def          : 16 21 22 26 26 27 28 30
canmoveandjumpindir_def : 72
canmoveandjumptothe_def : 71
canputpick_def       : 70
conditions_def       : 22 23 24 25 26 27 28 29 30 31 32 91
estructura_def       : 14 15
face_def             : 40
facing_def           : 69
final_def            : 3 15
func_def             : 9
function_def         : 20 21
goto_def             : 38
id_def               : 7 8
id_func              : 9 11
if_else_def          : 17 23 27 28 29 29 31
move_def             : 37
moveandjumpindir_def : 36
moveandjumptothe_def : 35
nop_def              : 41
not_def              : 73
prog                 : 0
put_def              : 34
repeat_def           : 19 25
turn_def             : 39
var_def              : 1 2 3
while_def            : 18 24 32

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . ROBOT_R var_def PROCS
    (2) prog -> . ROBOT_R var_def PROCS bloque_def
    (3) prog -> . ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET

    ROBOT_R         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> ROBOT_R . var_def PROCS
    (2) prog -> ROBOT_R . var_def PROCS bloque_def
    (3) prog -> ROBOT_R . var_def PROCS bloque_def LBRACKET final_def RBRACKET
    (4) var_def -> . VARS ID_list SEMICOLON

    VARS            shift and go to state 4

    var_def                        shift and go to state 3

state 3

    (1) prog -> ROBOT_R var_def . PROCS
    (2) prog -> ROBOT_R var_def . PROCS bloque_def
    (3) prog -> ROBOT_R var_def . PROCS bloque_def LBRACKET final_def RBRACKET

    PROCS           shift and go to state 5


state 4

    (4) var_def -> VARS . ID_list SEMICOLON
    (5) ID_list -> . ID
    (6) ID_list -> . ID_list COMMA ID

    ID              shift and go to state 7

    ID_list                        shift and go to state 6

state 5

    (1) prog -> ROBOT_R var_def PROCS .
    (2) prog -> ROBOT_R var_def PROCS . bloque_def
    (3) prog -> ROBOT_R var_def PROCS . bloque_def LBRACKET final_def RBRACKET
    (7) bloque_def -> . id_def
    (8) bloque_def -> . bloque_def id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 1 (prog -> ROBOT_R var_def PROCS .)
    ID              shift and go to state 10

    bloque_def                     shift and go to state 8
    id_def                         shift and go to state 9

state 6

    (4) var_def -> VARS ID_list . SEMICOLON
    (6) ID_list -> ID_list . COMMA ID

    SEMICOLON       shift and go to state 11
    COMMA           shift and go to state 12


state 7

    (5) ID_list -> ID .

    SEMICOLON       reduce using rule 5 (ID_list -> ID .)
    COMMA           reduce using rule 5 (ID_list -> ID .)


state 8

    (2) prog -> ROBOT_R var_def PROCS bloque_def .
    (3) prog -> ROBOT_R var_def PROCS bloque_def . LBRACKET final_def RBRACKET
    (8) bloque_def -> bloque_def . id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 2 (prog -> ROBOT_R var_def PROCS bloque_def .)
    LBRACKET        shift and go to state 13
    ID              shift and go to state 10

    id_def                         shift and go to state 14

state 9

    (7) bloque_def -> id_def .

    LBRACKET        reduce using rule 7 (bloque_def -> id_def .)
    ID              reduce using rule 7 (bloque_def -> id_def .)
    $end            reduce using rule 7 (bloque_def -> id_def .)


state 10

    (9) id_def -> ID . LBRACKET PLECA id_func PLECA func_def RBRACKET

    LBRACKET        shift and go to state 15


state 11

    (4) var_def -> VARS ID_list SEMICOLON .

    PROCS           reduce using rule 4 (var_def -> VARS ID_list SEMICOLON .)


state 12

    (6) ID_list -> ID_list COMMA . ID

    ID              shift and go to state 16


state 13

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET . final_def RBRACKET
    (14) final_def -> . estructura_def
    (15) final_def -> . final_def estructura_def
    (13) estructura_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER

    ID              shift and go to state 19

    final_def                      shift and go to state 17
    estructura_def                 shift and go to state 18

state 14

    (8) bloque_def -> bloque_def id_def .

    LBRACKET        reduce using rule 8 (bloque_def -> bloque_def id_def .)
    ID              reduce using rule 8 (bloque_def -> bloque_def id_def .)
    $end            reduce using rule 8 (bloque_def -> bloque_def id_def .)


state 15

    (9) id_def -> ID LBRACKET . PLECA id_func PLECA func_def RBRACKET

    PLECA           shift and go to state 20


state 16

    (6) ID_list -> ID_list COMMA ID .

    SEMICOLON       reduce using rule 6 (ID_list -> ID_list COMMA ID .)
    COMMA           reduce using rule 6 (ID_list -> ID_list COMMA ID .)


state 17

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def . RBRACKET
    (15) final_def -> final_def . estructura_def
    (13) estructura_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER

    RBRACKET        shift and go to state 21
    ID              shift and go to state 19

    estructura_def                 shift and go to state 22

state 18

    (14) final_def -> estructura_def .

    RBRACKET        reduce using rule 14 (final_def -> estructura_def .)
    ID              reduce using rule 14 (final_def -> estructura_def .)


state 19

    (13) estructura_def -> ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 23


state 20

    (9) id_def -> ID LBRACKET PLECA . id_func PLECA func_def RBRACKET
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 24
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 25

state 21

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .

    $end            reduce using rule 3 (prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .)


state 22

    (15) final_def -> final_def estructura_def .

    RBRACKET        reduce using rule 15 (final_def -> final_def estructura_def .)
    ID              reduce using rule 15 (final_def -> final_def estructura_def .)


state 23

    (13) estructura_def -> ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 26


state 24

    (10) id_func -> ID .
    (11) id_func -> ID . COMMA id_func

    PLECA           reduce using rule 10 (id_func -> ID .)
    COMMA           shift and go to state 27


state 25

    (9) id_def -> ID LBRACKET PLECA id_func . PLECA func_def RBRACKET

    PLECA           shift and go to state 28


state 26

    (13) estructura_def -> ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 29


state 27

    (11) id_func -> ID COMMA . id_func
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 24
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 30

state 28

    (9) id_def -> ID LBRACKET PLECA id_func PLECA . func_def RBRACKET
    (16) func_def -> . bloques_def
    (17) func_def -> . if_else_def
    (18) func_def -> . while_def
    (19) func_def -> . repeat_def
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (22) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (23) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (24) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (25) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    while           shift and go to state 38
    repeat          shift and go to state 39
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    func_def                       shift and go to state 31
    bloques_def                    shift and go to state 32
    if_else_def                    shift and go to state 33
    while_def                      shift and go to state 34
    repeat_def                     shift and go to state 35
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 29

    (13) estructura_def -> ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 61


state 30

    (11) id_func -> ID COMMA id_func .

    PLECA           reduce using rule 11 (id_func -> ID COMMA id_func .)


state 31

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def . RBRACKET

    RBRACKET        shift and go to state 62


state 32

    (16) func_def -> bloques_def .
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        reduce using rule 16 (func_def -> bloques_def .)
    SEMICOLON       shift and go to state 63


state 33

    (17) func_def -> if_else_def .

    RBRACKET        reduce using rule 17 (func_def -> if_else_def .)


state 34

    (18) func_def -> while_def .

    RBRACKET        reduce using rule 18 (func_def -> while_def .)


state 35

    (19) func_def -> repeat_def .

    RBRACKET        reduce using rule 19 (func_def -> repeat_def .)


state 36

    (20) bloques_def -> function_def .

    SEMICOLON       reduce using rule 20 (bloques_def -> function_def .)
    RBRACKET        reduce using rule 20 (bloques_def -> function_def .)


state 37

    (26) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 64


state 38

    (30) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 65


state 39

    (22) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (23) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (24) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (25) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET

    DOSPUNTOS       shift and go to state 66


state 40

    (33) function_def -> assignTo_def .

    SEMICOLON       reduce using rule 33 (function_def -> assignTo_def .)
    RBRACKET        reduce using rule 33 (function_def -> assignTo_def .)


state 41

    (34) function_def -> put_def .

    SEMICOLON       reduce using rule 34 (function_def -> put_def .)
    RBRACKET        reduce using rule 34 (function_def -> put_def .)


state 42

    (35) function_def -> moveandjumptothe_def .

    SEMICOLON       reduce using rule 35 (function_def -> moveandjumptothe_def .)
    RBRACKET        reduce using rule 35 (function_def -> moveandjumptothe_def .)


state 43

    (36) function_def -> moveandjumpindir_def .

    SEMICOLON       reduce using rule 36 (function_def -> moveandjumpindir_def .)
    RBRACKET        reduce using rule 36 (function_def -> moveandjumpindir_def .)


state 44

    (37) function_def -> move_def .

    SEMICOLON       reduce using rule 37 (function_def -> move_def .)
    RBRACKET        reduce using rule 37 (function_def -> move_def .)


state 45

    (38) function_def -> goto_def .

    SEMICOLON       reduce using rule 38 (function_def -> goto_def .)
    RBRACKET        reduce using rule 38 (function_def -> goto_def .)


state 46

    (39) function_def -> turn_def .

    SEMICOLON       reduce using rule 39 (function_def -> turn_def .)
    RBRACKET        reduce using rule 39 (function_def -> turn_def .)


state 47

    (40) function_def -> face_def .

    SEMICOLON       reduce using rule 40 (function_def -> face_def .)
    RBRACKET        reduce using rule 40 (function_def -> face_def .)


state 48

    (41) function_def -> nop_def .

    SEMICOLON       reduce using rule 41 (function_def -> nop_def .)
    RBRACKET        reduce using rule 41 (function_def -> nop_def .)


state 49

    (42) assignTo_def -> assignTo . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 67


state 50

    (43) put_def -> put . DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> put . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 68


state 51

    (45) put_def -> pick . DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> pick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 69


state 52

    (47) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (51) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 70


state 53

    (49) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA DIRECTION
    (53) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 71


state 54

    (55) moveandjumpindir_def -> moveindir . DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> moveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 72


state 55

    (57) moveandjumpindir_def -> jumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> jumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 73


state 56

    (59) move_def -> move . DOSPUNTOS ID
    (60) move_def -> move . DOSPUNTOS INTEGER

    DOSPUNTOS       shift and go to state 74


state 57

    (61) goto_def -> goto . DOSPUNTOS ID COMMA ID
    (62) goto_def -> goto . DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> goto . DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> goto . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 75


state 58

    (65) turn_def -> turn . DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> turn . DOSPUNTOS LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 76


state 59

    (67) face_def -> face . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 77


state 60

    (68) nop_def -> nop . DOSPUNTOS

    DOSPUNTOS       shift and go to state 78


state 61

    (13) estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 13 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 13 (estructura_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 62

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .

    LBRACKET        reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    ID              reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    $end            reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)


state 63

    (21) bloques_def -> bloques_def SEMICOLON . function_def
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    function_def                   shift and go to state 79
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 64

    (26) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (69) conditions_def -> . facing_def
    (70) conditions_def -> . canputpick_def
    (71) conditions_def -> . canmoveandjumptothe_def
    (72) conditions_def -> . canmoveandjumpindir_def
    (73) conditions_def -> . not_def
    (74) facing_def -> . facing DOSPUNTOS CARDINAL
    (75) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (76) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (78) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (91) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 86
    canput          shift and go to state 87
    canpick         shift and go to state 88
    canmovetothe    shift and go to state 89
    canjumptothe    shift and go to state 90
    canmoveindir    shift and go to state 91
    canjumpindir    shift and go to state 92
    not             shift and go to state 93

    conditions_def                 shift and go to state 80
    facing_def                     shift and go to state 81
    canputpick_def                 shift and go to state 82
    canmoveandjumptothe_def        shift and go to state 83
    canmoveandjumpindir_def        shift and go to state 84
    not_def                        shift and go to state 85

state 65

    (30) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (69) conditions_def -> . facing_def
    (70) conditions_def -> . canputpick_def
    (71) conditions_def -> . canmoveandjumptothe_def
    (72) conditions_def -> . canmoveandjumpindir_def
    (73) conditions_def -> . not_def
    (74) facing_def -> . facing DOSPUNTOS CARDINAL
    (75) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (76) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (78) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (91) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 86
    canput          shift and go to state 87
    canpick         shift and go to state 88
    canmovetothe    shift and go to state 89
    canjumptothe    shift and go to state 90
    canmoveindir    shift and go to state 91
    canjumpindir    shift and go to state 92
    not             shift and go to state 93

    conditions_def                 shift and go to state 94
    facing_def                     shift and go to state 81
    canputpick_def                 shift and go to state 82
    canmoveandjumptothe_def        shift and go to state 83
    canmoveandjumpindir_def        shift and go to state 84
    not_def                        shift and go to state 85

state 66

    (22) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET bloques_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET if_else_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET while_def RBRACKET
    (25) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET repeat_def RBRACKET
    (69) conditions_def -> . facing_def
    (70) conditions_def -> . canputpick_def
    (71) conditions_def -> . canmoveandjumptothe_def
    (72) conditions_def -> . canmoveandjumpindir_def
    (73) conditions_def -> . not_def
    (74) facing_def -> . facing DOSPUNTOS CARDINAL
    (75) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (76) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (78) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (91) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 86
    canput          shift and go to state 87
    canpick         shift and go to state 88
    canmovetothe    shift and go to state 89
    canjumptothe    shift and go to state 90
    canmoveindir    shift and go to state 91
    canjumpindir    shift and go to state 92
    not             shift and go to state 93

    conditions_def                 shift and go to state 95
    facing_def                     shift and go to state 81
    canputpick_def                 shift and go to state 82
    canmoveandjumptothe_def        shift and go to state 83
    canmoveandjumpindir_def        shift and go to state 84
    not_def                        shift and go to state 85

state 67

    (42) assignTo_def -> assignTo DOSPUNTOS . INTEGER COMMA ID

    INTEGER         shift and go to state 96


state 68

    (43) put_def -> put DOSPUNTOS . ID COMMA ITEMS
    (44) put_def -> put DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 97
    INTEGER         shift and go to state 98


state 69

    (45) put_def -> pick DOSPUNTOS . INTEGER COMMA ITEMS
    (46) put_def -> pick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 99
    ID              shift and go to state 100


state 70

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA DIRECTION
    (48) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 101
    INTEGER         shift and go to state 102


state 71

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA DIRECTION
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 103
    ID              shift and go to state 104


state 72

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS . ID COMMA CARDINAL
    (56) moveandjumpindir_def -> moveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 105
    INTEGER         shift and go to state 106


state 73

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> jumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 107
    ID              shift and go to state 108


state 74

    (59) move_def -> move DOSPUNTOS . ID
    (60) move_def -> move DOSPUNTOS . INTEGER

    ID              shift and go to state 109
    INTEGER         shift and go to state 110


state 75

    (61) goto_def -> goto DOSPUNTOS . ID COMMA ID
    (62) goto_def -> goto DOSPUNTOS . INTEGER COMMA INTEGER
    (63) goto_def -> goto DOSPUNTOS . ID COMMA INTEGER
    (64) goto_def -> goto DOSPUNTOS . INTEGER COMMA ID

    ID              shift and go to state 111
    INTEGER         shift and go to state 112


state 76

    (65) turn_def -> turn DOSPUNTOS . DIRECTION_TURN
    (66) turn_def -> turn DOSPUNTOS . LEFTANDRIGHT

    DIRECTION_TURN  shift and go to state 113
    LEFTANDRIGHT    shift and go to state 114


state 77

    (67) face_def -> face DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 115


state 78

    (68) nop_def -> nop DOSPUNTOS .

    SEMICOLON       reduce using rule 68 (nop_def -> nop DOSPUNTOS .)
    RBRACKET        reduce using rule 68 (nop_def -> nop DOSPUNTOS .)


state 79

    (21) bloques_def -> bloques_def SEMICOLON function_def .

    SEMICOLON       reduce using rule 21 (bloques_def -> bloques_def SEMICOLON function_def .)
    RBRACKET        reduce using rule 21 (bloques_def -> bloques_def SEMICOLON function_def .)


state 80

    (26) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    then            shift and go to state 116


state 81

    (69) conditions_def -> facing_def .

    then            reduce using rule 69 (conditions_def -> facing_def .)
    do              reduce using rule 69 (conditions_def -> facing_def .)
    LBRACKET        reduce using rule 69 (conditions_def -> facing_def .)


state 82

    (70) conditions_def -> canputpick_def .

    then            reduce using rule 70 (conditions_def -> canputpick_def .)
    do              reduce using rule 70 (conditions_def -> canputpick_def .)
    LBRACKET        reduce using rule 70 (conditions_def -> canputpick_def .)


state 83

    (71) conditions_def -> canmoveandjumptothe_def .

    then            reduce using rule 71 (conditions_def -> canmoveandjumptothe_def .)
    do              reduce using rule 71 (conditions_def -> canmoveandjumptothe_def .)
    LBRACKET        reduce using rule 71 (conditions_def -> canmoveandjumptothe_def .)


state 84

    (72) conditions_def -> canmoveandjumpindir_def .

    then            reduce using rule 72 (conditions_def -> canmoveandjumpindir_def .)
    do              reduce using rule 72 (conditions_def -> canmoveandjumpindir_def .)
    LBRACKET        reduce using rule 72 (conditions_def -> canmoveandjumpindir_def .)


state 85

    (73) conditions_def -> not_def .

    then            reduce using rule 73 (conditions_def -> not_def .)
    do              reduce using rule 73 (conditions_def -> not_def .)
    LBRACKET        reduce using rule 73 (conditions_def -> not_def .)


state 86

    (74) facing_def -> facing . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 117


state 87

    (75) canputpick_def -> canput . DOSPUNTOS ID COMMA ITEMS
    (76) canputpick_def -> canput . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 118


state 88

    (77) canputpick_def -> canpick . DOSPUNTOS INTEGER COMMA ITEMS
    (78) canputpick_def -> canpick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 119


state 89

    (83) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 120


state 90

    (85) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 121


state 91

    (79) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 122


state 92

    (81) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 123


state 93

    (91) not_def -> not . DOSPUNTOS conditions_def

    DOSPUNTOS       shift and go to state 124


state 94

    (30) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET while_def RBRACKET

    do              shift and go to state 125


state 95

    (22) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET bloques_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET if_else_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET while_def RBRACKET
    (25) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET repeat_def RBRACKET

    LBRACKET        shift and go to state 126


state 96

    (42) assignTo_def -> assignTo DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 127


state 97

    (43) put_def -> put DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 128


state 98

    (44) put_def -> put DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 129


state 99

    (45) put_def -> pick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 130


state 100

    (46) put_def -> pick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 131


state 101

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA DIRECTION
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 132


state 102

    (48) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (52) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 133


state 103

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 134


state 104

    (50) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA DIRECTION
    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 135


state 105

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 136


state 106

    (56) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 137


state 107

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 138


state 108

    (58) moveandjumpindir_def -> jumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 139


state 109

    (59) move_def -> move DOSPUNTOS ID .

    SEMICOLON       reduce using rule 59 (move_def -> move DOSPUNTOS ID .)
    RBRACKET        reduce using rule 59 (move_def -> move DOSPUNTOS ID .)


state 110

    (60) move_def -> move DOSPUNTOS INTEGER .

    SEMICOLON       reduce using rule 60 (move_def -> move DOSPUNTOS INTEGER .)
    RBRACKET        reduce using rule 60 (move_def -> move DOSPUNTOS INTEGER .)


state 111

    (61) goto_def -> goto DOSPUNTOS ID . COMMA ID
    (63) goto_def -> goto DOSPUNTOS ID . COMMA INTEGER

    COMMA           shift and go to state 140


state 112

    (62) goto_def -> goto DOSPUNTOS INTEGER . COMMA INTEGER
    (64) goto_def -> goto DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 141


state 113

    (65) turn_def -> turn DOSPUNTOS DIRECTION_TURN .

    SEMICOLON       reduce using rule 65 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    RBRACKET        reduce using rule 65 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)


state 114

    (66) turn_def -> turn DOSPUNTOS LEFTANDRIGHT .

    SEMICOLON       reduce using rule 66 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    RBRACKET        reduce using rule 66 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)


state 115

    (67) face_def -> face DOSPUNTOS CARDINAL .

    SEMICOLON       reduce using rule 67 (face_def -> face DOSPUNTOS CARDINAL .)
    RBRACKET        reduce using rule 67 (face_def -> face DOSPUNTOS CARDINAL .)


state 116

    (26) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 142


state 117

    (74) facing_def -> facing DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 143


state 118

    (75) canputpick_def -> canput DOSPUNTOS . ID COMMA ITEMS
    (76) canputpick_def -> canput DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 144
    INTEGER         shift and go to state 145


state 119

    (77) canputpick_def -> canpick DOSPUNTOS . INTEGER COMMA ITEMS
    (78) canputpick_def -> canpick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 146
    ID              shift and go to state 147


state 120

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 148
    INTEGER         shift and go to state 149


state 121

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 150
    ID              shift and go to state 151


state 122

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 152
    INTEGER         shift and go to state 153


state 123

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 154
    ID              shift and go to state 155


state 124

    (91) not_def -> not DOSPUNTOS . conditions_def
    (69) conditions_def -> . facing_def
    (70) conditions_def -> . canputpick_def
    (71) conditions_def -> . canmoveandjumptothe_def
    (72) conditions_def -> . canmoveandjumpindir_def
    (73) conditions_def -> . not_def
    (74) facing_def -> . facing DOSPUNTOS CARDINAL
    (75) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (76) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (78) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (90) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (82) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (91) not_def -> . not DOSPUNTOS conditions_def

    facing          shift and go to state 86
    canput          shift and go to state 87
    canpick         shift and go to state 88
    canmovetothe    shift and go to state 89
    canjumptothe    shift and go to state 90
    canmoveindir    shift and go to state 91
    canjumpindir    shift and go to state 92
    not             shift and go to state 93

    conditions_def                 shift and go to state 156
    facing_def                     shift and go to state 81
    canputpick_def                 shift and go to state 82
    canmoveandjumptothe_def        shift and go to state 83
    canmoveandjumpindir_def        shift and go to state 84
    not_def                        shift and go to state 85

state 125

    (30) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 157


state 126

    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . bloques_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . if_else_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . while_def RBRACKET
    (25) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . repeat_def RBRACKET
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (22) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (23) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (24) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (25) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    while           shift and go to state 38
    repeat          shift and go to state 39
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    bloques_def                    shift and go to state 158
    if_else_def                    shift and go to state 159
    while_def                      shift and go to state 160
    repeat_def                     shift and go to state 161
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 127

    (42) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA . ID

    ID              shift and go to state 162


state 128

    (43) put_def -> put DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 163


state 129

    (44) put_def -> put DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 164


state 130

    (45) put_def -> pick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 165


state 131

    (46) put_def -> pick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 166


state 132

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . DIRECTION
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 167
    LEFTANDRIGHT    shift and go to state 168


state 133

    (48) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (52) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 169
    LEFTANDRIGHT    shift and go to state 170


state 134

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 171
    LEFTANDRIGHT    shift and go to state 172


state 135

    (50) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . DIRECTION
    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 173
    LEFTANDRIGHT    shift and go to state 174


state 136

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 175


state 137

    (56) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 176


state 138

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 177


state 139

    (58) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 178


state 140

    (61) goto_def -> goto DOSPUNTOS ID COMMA . ID
    (63) goto_def -> goto DOSPUNTOS ID COMMA . INTEGER

    ID              shift and go to state 179
    INTEGER         shift and go to state 180


state 141

    (62) goto_def -> goto DOSPUNTOS INTEGER COMMA . INTEGER
    (64) goto_def -> goto DOSPUNTOS INTEGER COMMA . ID

    INTEGER         shift and go to state 181
    ID              shift and go to state 182


state 142

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 183


state 143

    (74) facing_def -> facing DOSPUNTOS CARDINAL .

    then            reduce using rule 74 (facing_def -> facing DOSPUNTOS CARDINAL .)
    do              reduce using rule 74 (facing_def -> facing DOSPUNTOS CARDINAL .)
    LBRACKET        reduce using rule 74 (facing_def -> facing DOSPUNTOS CARDINAL .)


state 144

    (75) canputpick_def -> canput DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 184


state 145

    (76) canputpick_def -> canput DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 185


state 146

    (77) canputpick_def -> canpick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 186


state 147

    (78) canputpick_def -> canpick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 187


state 148

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 188


state 149

    (84) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 189


state 150

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 190


state 151

    (86) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA DIRECTION
    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 191


state 152

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 192


state 153

    (80) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 193


state 154

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 194


state 155

    (82) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 195


state 156

    (91) not_def -> not DOSPUNTOS conditions_def .

    then            reduce using rule 91 (not_def -> not DOSPUNTOS conditions_def .)
    do              reduce using rule 91 (not_def -> not DOSPUNTOS conditions_def .)
    LBRACKET        reduce using rule 91 (not_def -> not DOSPUNTOS conditions_def .)


state 157

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET if_else_def RBRACKET
    (32) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET while_def RBRACKET

    LBRACKET        shift and go to state 196


state 158

    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def . RBRACKET
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 197
    SEMICOLON       shift and go to state 63


state 159

    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 198


state 160

    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 199


state 161

    (25) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def . RBRACKET

    RBRACKET        shift and go to state 200


state 162

    (42) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .

    SEMICOLON       reduce using rule 42 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    RBRACKET        reduce using rule 42 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)


state 163

    (43) put_def -> put DOSPUNTOS ID COMMA ITEMS .

    SEMICOLON       reduce using rule 43 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    RBRACKET        reduce using rule 43 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)


state 164

    (44) put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .

    SEMICOLON       reduce using rule 44 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    RBRACKET        reduce using rule 44 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)


state 165

    (45) put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .

    SEMICOLON       reduce using rule 45 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    RBRACKET        reduce using rule 45 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)


state 166

    (46) put_def -> pick DOSPUNTOS ID COMMA ITEMS .

    SEMICOLON       reduce using rule 46 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    RBRACKET        reduce using rule 46 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)


state 167

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .

    SEMICOLON       reduce using rule 47 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    RBRACKET        reduce using rule 47 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)


state 168

    (51) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 51 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 51 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 169

    (48) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    SEMICOLON       reduce using rule 48 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    RBRACKET        reduce using rule 48 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 170

    (52) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 52 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 171

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    SEMICOLON       reduce using rule 49 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    RBRACKET        reduce using rule 49 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 172

    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 53 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 53 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 173

    (50) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .

    SEMICOLON       reduce using rule 50 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    RBRACKET        reduce using rule 50 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 174

    (54) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 54 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 175

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .

    SEMICOLON       reduce using rule 55 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    RBRACKET        reduce using rule 55 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)


state 176

    (56) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    SEMICOLON       reduce using rule 56 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    RBRACKET        reduce using rule 56 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 177

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    SEMICOLON       reduce using rule 57 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    RBRACKET        reduce using rule 57 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 178

    (58) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .

    SEMICOLON       reduce using rule 58 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    RBRACKET        reduce using rule 58 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 179

    (61) goto_def -> goto DOSPUNTOS ID COMMA ID .

    SEMICOLON       reduce using rule 61 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    RBRACKET        reduce using rule 61 (goto_def -> goto DOSPUNTOS ID COMMA ID .)


state 180

    (63) goto_def -> goto DOSPUNTOS ID COMMA INTEGER .

    SEMICOLON       reduce using rule 63 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    RBRACKET        reduce using rule 63 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)


state 181

    (62) goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .

    SEMICOLON       reduce using rule 62 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    RBRACKET        reduce using rule 62 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)


state 182

    (64) goto_def -> goto DOSPUNTOS INTEGER COMMA ID .

    SEMICOLON       reduce using rule 64 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    RBRACKET        reduce using rule 64 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)


state 183

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    bloques_def                    shift and go to state 201
    if_else_def                    shift and go to state 202
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 184

    (75) canputpick_def -> canput DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 203


state 185

    (76) canputpick_def -> canput DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 204


state 186

    (77) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 205


state 187

    (78) canputpick_def -> canpick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 206


state 188

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 207
    LEFTANDRIGHT    shift and go to state 208


state 189

    (84) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 209
    LEFTANDRIGHT    shift and go to state 210


state 190

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 211
    LEFTANDRIGHT    shift and go to state 212


state 191

    (86) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . DIRECTION
    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 213
    LEFTANDRIGHT    shift and go to state 214


state 192

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 215


state 193

    (80) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 216


state 194

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 217


state 195

    (82) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 218


state 196

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (32) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . while_def RBRACKET
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    while           shift and go to state 38
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    bloques_def                    shift and go to state 219
    if_else_def                    shift and go to state 220
    while_def                      shift and go to state 221
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 197

    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 22 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .)


state 198

    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 23 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .)


state 199

    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 24 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .)


state 200

    (25) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .

    RBRACKET        reduce using rule 25 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .)


state 201

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 222
    SEMICOLON       shift and go to state 63


state 202

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    RBRACKET        shift and go to state 223


state 203

    (75) canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 75 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 75 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 75 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)


state 204

    (76) canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 76 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 76 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 76 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)


state 205

    (77) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)


state 206

    (78) canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 78 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 78 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 78 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)


state 207

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)


state 208

    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 209

    (84) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 84 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 84 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 84 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 210

    (88) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 88 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 211

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 212

    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 213

    (86) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 86 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 86 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 86 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 214

    (90) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 90 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 215

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)


state 216

    (80) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 80 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 80 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 80 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 217

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 218

    (82) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 82 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 82 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 82 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 219

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 224
    SEMICOLON       shift and go to state 63


state 220

    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 225


state 221

    (32) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 226


state 222

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 227


state 223

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 228


state 224

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 30 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 225

    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 31 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 226

    (32) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 32 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .)


state 227

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 229


state 228

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 230


state 229

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 231


state 230

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 232


state 231

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    bloques_def                    shift and go to state 233
    if_else_def                    shift and go to state 234
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 232

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (20) bloques_def -> . function_def
    (21) bloques_def -> . bloques_def SEMICOLON function_def
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (33) function_def -> . assignTo_def
    (34) function_def -> . put_def
    (35) function_def -> . moveandjumptothe_def
    (36) function_def -> . moveandjumpindir_def
    (37) function_def -> . move_def
    (38) function_def -> . goto_def
    (39) function_def -> . turn_def
    (40) function_def -> . face_def
    (41) function_def -> . nop_def
    (42) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (43) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (44) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (46) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (48) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (54) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (56) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (58) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (59) move_def -> . move DOSPUNTOS ID
    (60) move_def -> . move DOSPUNTOS INTEGER
    (61) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (62) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (64) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (65) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (66) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (67) face_def -> . face DOSPUNTOS CARDINAL
    (68) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 37
    assignTo        shift and go to state 49
    put             shift and go to state 50
    pick            shift and go to state 51
    movetothe       shift and go to state 52
    jumptothe       shift and go to state 53
    moveindir       shift and go to state 54
    jumpindir       shift and go to state 55
    move            shift and go to state 56
    goto            shift and go to state 57
    turn            shift and go to state 58
    face            shift and go to state 59
    nop             shift and go to state 60

    if_else_def                    shift and go to state 235
    bloques_def                    shift and go to state 236
    function_def                   shift and go to state 36
    assignTo_def                   shift and go to state 40
    put_def                        shift and go to state 41
    moveandjumptothe_def           shift and go to state 42
    moveandjumpindir_def           shift and go to state 43
    move_def                       shift and go to state 44
    goto_def                       shift and go to state 45
    turn_def                       shift and go to state 46
    face_def                       shift and go to state 47
    nop_def                        shift and go to state 48

state 233

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 237
    SEMICOLON       shift and go to state 63


state 234

    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 238


state 235

    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 239


state 236

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (21) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 240
    SEMICOLON       shift and go to state 63


state 237

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 26 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 238

    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 28 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 239

    (29) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 29 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 240

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 27 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)


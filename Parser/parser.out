Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> ROBOT_R var_def PROCS
Rule 2     prog -> ROBOT_R var_def PROCS bloque_def
Rule 3     prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET
Rule 4     var_def -> VARS ID_list SEMICOLON
Rule 5     ID_list -> ID
Rule 6     ID_list -> ID_list COMMA ID
Rule 7     bloque_def -> id_def
Rule 8     bloque_def -> bloque_def id_def
Rule 9     id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET
Rule 10    id_func -> ID
Rule 11    id_func -> ID COMMA id_func
Rule 12    id_func -> <empty>
Rule 13    final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 14    final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER
Rule 15    func_def -> bloques_def
Rule 16    func_def -> if_else_def
Rule 17    func_def -> while_def
Rule 18    func_def -> repeat_def
Rule 19    bloques_def -> function_def
Rule 20    bloques_def -> bloques_def SEMICOLON function_def
Rule 21    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
Rule 22    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
Rule 23    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
Rule 24    repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
Rule 25    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 26    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 27    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 28    if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 29    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
Rule 30    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
Rule 31    while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
Rule 32    function_def -> assignTo_def
Rule 33    function_def -> put_def
Rule 34    function_def -> moveandjumptothe_def
Rule 35    function_def -> moveandjumpindir_def
Rule 36    function_def -> move_def
Rule 37    function_def -> goto_def
Rule 38    function_def -> turn_def
Rule 39    function_def -> face_def
Rule 40    function_def -> nop_def
Rule 41    assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID
Rule 42    put_def -> put DOSPUNTOS ID COMMA ITEMS
Rule 43    put_def -> put DOSPUNTOS INTEGER COMMA ITEMS
Rule 44    put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS
Rule 45    put_def -> pick DOSPUNTOS ID COMMA ITEMS
Rule 46    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION
Rule 47    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 48    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 49    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 50    moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 51    moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 52    moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 53    moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 54    moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL
Rule 55    moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 56    moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 57    moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 58    move_def -> move DOSPUNTOS ID
Rule 59    move_def -> move DOSPUNTOS INTEGER
Rule 60    goto_def -> goto DOSPUNTOS ID COMMA ID
Rule 61    goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER
Rule 62    goto_def -> goto DOSPUNTOS ID COMMA INTEGER
Rule 63    goto_def -> goto DOSPUNTOS INTEGER COMMA ID
Rule 64    turn_def -> turn DOSPUNTOS DIRECTION_TURN
Rule 65    turn_def -> turn DOSPUNTOS LEFTANDRIGHT
Rule 66    face_def -> face DOSPUNTOS CARDINAL
Rule 67    nop_def -> nop DOSPUNTOS
Rule 68    conditions_def -> facing_def
Rule 69    conditions_def -> canputpick_def
Rule 70    conditions_def -> canmoveandjumptothe_def
Rule 71    conditions_def -> canmoveandjumpindir_def
Rule 72    conditions_def -> not_def
Rule 73    facing_def -> facing DOSPUNTOS CARDINAL
Rule 74    canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS
Rule 75    canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS
Rule 76    canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS
Rule 77    canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS
Rule 78    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL
Rule 79    canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 80    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
Rule 81    canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL
Rule 82    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION
Rule 83    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 84    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
Rule 85    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION
Rule 86    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 87    canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 88    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
Rule 89    canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
Rule 90    not_def -> not

Terminals, with rules where they appear

CARDINAL             : 54 55 56 57 66 73 78 79 80 81
COMMA                : 6 11 13 14 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 60 61 62 63 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
DIRECTION            : 46 47 48 49 82 83 84 85
DIRECTION_TURN       : 64
DOSPUNTOS            : 13 14 21 22 23 24 25 25 25 26 26 26 27 27 27 28 28 28 29 29 30 30 31 31 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
ID                   : 5 6 9 10 11 13 14 41 42 45 46 49 50 53 54 57 58 60 60 62 63 74 77 78 81 82 85 86 89
INTEGER              : 13 13 14 14 41 43 44 47 48 51 52 55 56 59 61 61 62 63 75 76 79 80 83 84 87 88
ITEMS                : 42 43 44 45 74 75 76 77
LBRACKET             : 3 9 21 22 23 24 25 25 26 26 27 27 28 28 29 30 31
LEFTANDRIGHT         : 50 51 52 53 65 86 87 88 89
PLECA                : 9 9
PROCS                : 1 2 3
RBRACKET             : 3 9 21 22 23 24 25 25 26 26 27 27 28 28 29 30 31
ROBOT_R              : 1 2 3
SEMICOLON            : 4 20
VARS                 : 4
assignTo             : 41
canjumpindir         : 80 81
canjumptothe         : 84 85 88 89
canmoveindir         : 78 79
canmovetothe         : 82 83 86 87
canpick              : 76 77
canput               : 74 75
do                   : 29 30 31
else                 : 25 26 27 28
error                : 
face                 : 66
facing               : 73
goto                 : 60 61 62 63
if                   : 25 26 27 28
jumpindir            : 56 57
jumptothe            : 48 49 52 53
move                 : 58 59
moveindir            : 54 55
movetothe            : 46 47 50 51
nop                  : 67
not                  : 90
pick                 : 44 45
put                  : 42 43
repeat               : 21 22 23 24
then                 : 25 26 27 28
turn                 : 64 65
while                : 29 30 31

Nonterminals, with rules where they appear

ID_list              : 4 6
assignTo_def         : 32
bloque_def           : 2 3 8
bloques_def          : 15 20 21 25 25 26 27 29
canmoveandjumpindir_def : 71
canmoveandjumptothe_def : 70
canputpick_def       : 69
conditions_def       : 21 22 23 24 25 26 27 28 29 30 31
face_def             : 39
facing_def           : 68
final_def            : 3 14
func_def             : 9
function_def         : 19 20
goto_def             : 37
id_def               : 7 8
id_func              : 9 11
if_else_def          : 16 22 26 27 28 28 30
move_def             : 36
moveandjumpindir_def : 35
moveandjumptothe_def : 34
nop_def              : 40
not_def              : 72
prog                 : 0
put_def              : 33
repeat_def           : 18 24
turn_def             : 38
var_def              : 1 2 3
while_def            : 17 23 31

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . ROBOT_R var_def PROCS
    (2) prog -> . ROBOT_R var_def PROCS bloque_def
    (3) prog -> . ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET

    ROBOT_R         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> ROBOT_R . var_def PROCS
    (2) prog -> ROBOT_R . var_def PROCS bloque_def
    (3) prog -> ROBOT_R . var_def PROCS bloque_def LBRACKET final_def RBRACKET
    (4) var_def -> . VARS ID_list SEMICOLON

    VARS            shift and go to state 4

    var_def                        shift and go to state 3

state 3

    (1) prog -> ROBOT_R var_def . PROCS
    (2) prog -> ROBOT_R var_def . PROCS bloque_def
    (3) prog -> ROBOT_R var_def . PROCS bloque_def LBRACKET final_def RBRACKET

    PROCS           shift and go to state 5


state 4

    (4) var_def -> VARS . ID_list SEMICOLON
    (5) ID_list -> . ID
    (6) ID_list -> . ID_list COMMA ID

    ID              shift and go to state 7

    ID_list                        shift and go to state 6

state 5

    (1) prog -> ROBOT_R var_def PROCS .
    (2) prog -> ROBOT_R var_def PROCS . bloque_def
    (3) prog -> ROBOT_R var_def PROCS . bloque_def LBRACKET final_def RBRACKET
    (7) bloque_def -> . id_def
    (8) bloque_def -> . bloque_def id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 1 (prog -> ROBOT_R var_def PROCS .)
    ID              shift and go to state 10

    bloque_def                     shift and go to state 8
    id_def                         shift and go to state 9

state 6

    (4) var_def -> VARS ID_list . SEMICOLON
    (6) ID_list -> ID_list . COMMA ID

    SEMICOLON       shift and go to state 11
    COMMA           shift and go to state 12


state 7

    (5) ID_list -> ID .

    SEMICOLON       reduce using rule 5 (ID_list -> ID .)
    COMMA           reduce using rule 5 (ID_list -> ID .)


state 8

    (2) prog -> ROBOT_R var_def PROCS bloque_def .
    (3) prog -> ROBOT_R var_def PROCS bloque_def . LBRACKET final_def RBRACKET
    (8) bloque_def -> bloque_def . id_def
    (9) id_def -> . ID LBRACKET PLECA id_func PLECA func_def RBRACKET

    $end            reduce using rule 2 (prog -> ROBOT_R var_def PROCS bloque_def .)
    LBRACKET        shift and go to state 13
    ID              shift and go to state 10

    id_def                         shift and go to state 14

state 9

    (7) bloque_def -> id_def .

    LBRACKET        reduce using rule 7 (bloque_def -> id_def .)
    ID              reduce using rule 7 (bloque_def -> id_def .)
    $end            reduce using rule 7 (bloque_def -> id_def .)


state 10

    (9) id_def -> ID . LBRACKET PLECA id_func PLECA func_def RBRACKET

    LBRACKET        shift and go to state 15


state 11

    (4) var_def -> VARS ID_list SEMICOLON .

    PROCS           reduce using rule 4 (var_def -> VARS ID_list SEMICOLON .)


state 12

    (6) ID_list -> ID_list COMMA . ID

    ID              shift and go to state 16


state 13

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET . final_def RBRACKET
    (13) final_def -> . ID DOSPUNTOS INTEGER COMMA INTEGER
    (14) final_def -> . final_def ID DOSPUNTOS INTEGER COMMA INTEGER

    ID              shift and go to state 18

    final_def                      shift and go to state 17

state 14

    (8) bloque_def -> bloque_def id_def .

    LBRACKET        reduce using rule 8 (bloque_def -> bloque_def id_def .)
    ID              reduce using rule 8 (bloque_def -> bloque_def id_def .)
    $end            reduce using rule 8 (bloque_def -> bloque_def id_def .)


state 15

    (9) id_def -> ID LBRACKET . PLECA id_func PLECA func_def RBRACKET

    PLECA           shift and go to state 19


state 16

    (6) ID_list -> ID_list COMMA ID .

    SEMICOLON       reduce using rule 6 (ID_list -> ID_list COMMA ID .)
    COMMA           reduce using rule 6 (ID_list -> ID_list COMMA ID .)


state 17

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def . RBRACKET
    (14) final_def -> final_def . ID DOSPUNTOS INTEGER COMMA INTEGER

    RBRACKET        shift and go to state 20
    ID              shift and go to state 21


state 18

    (13) final_def -> ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 22


state 19

    (9) id_def -> ID LBRACKET PLECA . id_func PLECA func_def RBRACKET
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 23
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 24

state 20

    (3) prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .

    $end            reduce using rule 3 (prog -> ROBOT_R var_def PROCS bloque_def LBRACKET final_def RBRACKET .)


state 21

    (14) final_def -> final_def ID . DOSPUNTOS INTEGER COMMA INTEGER

    DOSPUNTOS       shift and go to state 25


state 22

    (13) final_def -> ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 26


state 23

    (10) id_func -> ID .
    (11) id_func -> ID . COMMA id_func

    PLECA           reduce using rule 10 (id_func -> ID .)
    COMMA           shift and go to state 27


state 24

    (9) id_def -> ID LBRACKET PLECA id_func . PLECA func_def RBRACKET

    PLECA           shift and go to state 28


state 25

    (14) final_def -> final_def ID DOSPUNTOS . INTEGER COMMA INTEGER

    INTEGER         shift and go to state 29


state 26

    (13) final_def -> ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 30


state 27

    (11) id_func -> ID COMMA . id_func
    (10) id_func -> . ID
    (11) id_func -> . ID COMMA id_func
    (12) id_func -> .

    ID              shift and go to state 23
    PLECA           reduce using rule 12 (id_func -> .)

    id_func                        shift and go to state 31

state 28

    (9) id_def -> ID LBRACKET PLECA id_func PLECA . func_def RBRACKET
    (15) func_def -> . bloques_def
    (16) func_def -> . if_else_def
    (17) func_def -> . while_def
    (18) func_def -> . repeat_def
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (21) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (22) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (23) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (24) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    while           shift and go to state 39
    repeat          shift and go to state 40
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    func_def                       shift and go to state 32
    bloques_def                    shift and go to state 33
    if_else_def                    shift and go to state 34
    while_def                      shift and go to state 35
    repeat_def                     shift and go to state 36
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 29

    (14) final_def -> final_def ID DOSPUNTOS INTEGER . COMMA INTEGER

    COMMA           shift and go to state 62


state 30

    (13) final_def -> ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 63


state 31

    (11) id_func -> ID COMMA id_func .

    PLECA           reduce using rule 11 (id_func -> ID COMMA id_func .)


state 32

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def . RBRACKET

    RBRACKET        shift and go to state 64


state 33

    (15) func_def -> bloques_def .
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        reduce using rule 15 (func_def -> bloques_def .)
    SEMICOLON       shift and go to state 65


state 34

    (16) func_def -> if_else_def .

    RBRACKET        reduce using rule 16 (func_def -> if_else_def .)


state 35

    (17) func_def -> while_def .

    RBRACKET        reduce using rule 17 (func_def -> while_def .)


state 36

    (18) func_def -> repeat_def .

    RBRACKET        reduce using rule 18 (func_def -> repeat_def .)


state 37

    (19) bloques_def -> function_def .

    SEMICOLON       reduce using rule 19 (bloques_def -> function_def .)
    RBRACKET        reduce using rule 19 (bloques_def -> function_def .)


state 38

    (25) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if . DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 66


state 39

    (29) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> while . DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 67


state 40

    (21) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (22) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (23) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (24) repeat_def -> repeat . DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET

    DOSPUNTOS       shift and go to state 68


state 41

    (32) function_def -> assignTo_def .

    SEMICOLON       reduce using rule 32 (function_def -> assignTo_def .)
    RBRACKET        reduce using rule 32 (function_def -> assignTo_def .)


state 42

    (33) function_def -> put_def .

    SEMICOLON       reduce using rule 33 (function_def -> put_def .)
    RBRACKET        reduce using rule 33 (function_def -> put_def .)


state 43

    (34) function_def -> moveandjumptothe_def .

    SEMICOLON       reduce using rule 34 (function_def -> moveandjumptothe_def .)
    RBRACKET        reduce using rule 34 (function_def -> moveandjumptothe_def .)


state 44

    (35) function_def -> moveandjumpindir_def .

    SEMICOLON       reduce using rule 35 (function_def -> moveandjumpindir_def .)
    RBRACKET        reduce using rule 35 (function_def -> moveandjumpindir_def .)


state 45

    (36) function_def -> move_def .

    SEMICOLON       reduce using rule 36 (function_def -> move_def .)
    RBRACKET        reduce using rule 36 (function_def -> move_def .)


state 46

    (37) function_def -> goto_def .

    SEMICOLON       reduce using rule 37 (function_def -> goto_def .)
    RBRACKET        reduce using rule 37 (function_def -> goto_def .)


state 47

    (38) function_def -> turn_def .

    SEMICOLON       reduce using rule 38 (function_def -> turn_def .)
    RBRACKET        reduce using rule 38 (function_def -> turn_def .)


state 48

    (39) function_def -> face_def .

    SEMICOLON       reduce using rule 39 (function_def -> face_def .)
    RBRACKET        reduce using rule 39 (function_def -> face_def .)


state 49

    (40) function_def -> nop_def .

    SEMICOLON       reduce using rule 40 (function_def -> nop_def .)
    RBRACKET        reduce using rule 40 (function_def -> nop_def .)


state 50

    (41) assignTo_def -> assignTo . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 69


state 51

    (42) put_def -> put . DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> put . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 70


state 52

    (44) put_def -> pick . DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> pick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 71


state 53

    (46) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> movetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> movetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 72


state 54

    (48) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA DIRECTION
    (52) moveandjumptothe_def -> jumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> jumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 73


state 55

    (54) moveandjumpindir_def -> moveindir . DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> moveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 74


state 56

    (56) moveandjumpindir_def -> jumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> jumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 75


state 57

    (58) move_def -> move . DOSPUNTOS ID
    (59) move_def -> move . DOSPUNTOS INTEGER

    DOSPUNTOS       shift and go to state 76


state 58

    (60) goto_def -> goto . DOSPUNTOS ID COMMA ID
    (61) goto_def -> goto . DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> goto . DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> goto . DOSPUNTOS INTEGER COMMA ID

    DOSPUNTOS       shift and go to state 77


state 59

    (64) turn_def -> turn . DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> turn . DOSPUNTOS LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 78


state 60

    (66) face_def -> face . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 79


state 61

    (67) nop_def -> nop . DOSPUNTOS

    DOSPUNTOS       shift and go to state 80


state 62

    (14) final_def -> final_def ID DOSPUNTOS INTEGER COMMA . INTEGER

    INTEGER         shift and go to state 81


state 63

    (13) final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 13 (final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 13 (final_def -> ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 64

    (9) id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .

    LBRACKET        reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    ID              reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)
    $end            reduce using rule 9 (id_def -> ID LBRACKET PLECA id_func PLECA func_def RBRACKET .)


state 65

    (20) bloques_def -> bloques_def SEMICOLON . function_def
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    function_def                   shift and go to state 82
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 66

    (25) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS . conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (68) conditions_def -> . facing_def
    (69) conditions_def -> . canputpick_def
    (70) conditions_def -> . canmoveandjumptothe_def
    (71) conditions_def -> . canmoveandjumpindir_def
    (72) conditions_def -> . not_def
    (73) facing_def -> . facing DOSPUNTOS CARDINAL
    (74) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (75) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (76) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (82) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (78) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (90) not_def -> . not

    facing          shift and go to state 89
    canput          shift and go to state 90
    canpick         shift and go to state 91
    canmovetothe    shift and go to state 92
    canjumptothe    shift and go to state 93
    canmoveindir    shift and go to state 94
    canjumpindir    shift and go to state 95
    not             shift and go to state 96

    conditions_def                 shift and go to state 83
    facing_def                     shift and go to state 84
    canputpick_def                 shift and go to state 85
    canmoveandjumptothe_def        shift and go to state 86
    canmoveandjumpindir_def        shift and go to state 87
    not_def                        shift and go to state 88

state 67

    (29) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> while DOSPUNTOS . conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (68) conditions_def -> . facing_def
    (69) conditions_def -> . canputpick_def
    (70) conditions_def -> . canmoveandjumptothe_def
    (71) conditions_def -> . canmoveandjumpindir_def
    (72) conditions_def -> . not_def
    (73) facing_def -> . facing DOSPUNTOS CARDINAL
    (74) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (75) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (76) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (82) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (78) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (90) not_def -> . not

    facing          shift and go to state 89
    canput          shift and go to state 90
    canpick         shift and go to state 91
    canmovetothe    shift and go to state 92
    canjumptothe    shift and go to state 93
    canmoveindir    shift and go to state 94
    canjumpindir    shift and go to state 95
    not             shift and go to state 96

    conditions_def                 shift and go to state 97
    facing_def                     shift and go to state 84
    canputpick_def                 shift and go to state 85
    canmoveandjumptothe_def        shift and go to state 86
    canmoveandjumpindir_def        shift and go to state 87
    not_def                        shift and go to state 88

state 68

    (21) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET bloques_def RBRACKET
    (22) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET if_else_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET while_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS . conditions_def LBRACKET repeat_def RBRACKET
    (68) conditions_def -> . facing_def
    (69) conditions_def -> . canputpick_def
    (70) conditions_def -> . canmoveandjumptothe_def
    (71) conditions_def -> . canmoveandjumpindir_def
    (72) conditions_def -> . not_def
    (73) facing_def -> . facing DOSPUNTOS CARDINAL
    (74) canputpick_def -> . canput DOSPUNTOS ID COMMA ITEMS
    (75) canputpick_def -> . canput DOSPUNTOS INTEGER COMMA ITEMS
    (76) canputpick_def -> . canpick DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> . canpick DOSPUNTOS ID COMMA ITEMS
    (82) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA DIRECTION
    (83) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (84) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA DIRECTION
    (86) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (87) canmoveandjumptothe_def -> . canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (88) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> . canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (78) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS ID COMMA CARDINAL
    (79) canmoveandjumpindir_def -> . canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (80) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> . canjumpindir DOSPUNTOS ID COMMA CARDINAL
    (90) not_def -> . not

    facing          shift and go to state 89
    canput          shift and go to state 90
    canpick         shift and go to state 91
    canmovetothe    shift and go to state 92
    canjumptothe    shift and go to state 93
    canmoveindir    shift and go to state 94
    canjumpindir    shift and go to state 95
    not             shift and go to state 96

    conditions_def                 shift and go to state 98
    facing_def                     shift and go to state 84
    canputpick_def                 shift and go to state 85
    canmoveandjumptothe_def        shift and go to state 86
    canmoveandjumpindir_def        shift and go to state 87
    not_def                        shift and go to state 88

state 69

    (41) assignTo_def -> assignTo DOSPUNTOS . INTEGER COMMA ID

    INTEGER         shift and go to state 99


state 70

    (42) put_def -> put DOSPUNTOS . ID COMMA ITEMS
    (43) put_def -> put DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 100
    INTEGER         shift and go to state 101


state 71

    (44) put_def -> pick DOSPUNTOS . INTEGER COMMA ITEMS
    (45) put_def -> pick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 102
    ID              shift and go to state 103


state 72

    (46) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA DIRECTION
    (47) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (50) moveandjumptothe_def -> movetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 104
    INTEGER         shift and go to state 105


state 73

    (48) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA DIRECTION
    (52) moveandjumptothe_def -> jumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 106
    ID              shift and go to state 107


state 74

    (54) moveandjumpindir_def -> moveindir DOSPUNTOS . ID COMMA CARDINAL
    (55) moveandjumpindir_def -> moveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 108
    INTEGER         shift and go to state 109


state 75

    (56) moveandjumpindir_def -> jumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 110
    ID              shift and go to state 111


state 76

    (58) move_def -> move DOSPUNTOS . ID
    (59) move_def -> move DOSPUNTOS . INTEGER

    ID              shift and go to state 112
    INTEGER         shift and go to state 113


state 77

    (60) goto_def -> goto DOSPUNTOS . ID COMMA ID
    (61) goto_def -> goto DOSPUNTOS . INTEGER COMMA INTEGER
    (62) goto_def -> goto DOSPUNTOS . ID COMMA INTEGER
    (63) goto_def -> goto DOSPUNTOS . INTEGER COMMA ID

    ID              shift and go to state 114
    INTEGER         shift and go to state 115


state 78

    (64) turn_def -> turn DOSPUNTOS . DIRECTION_TURN
    (65) turn_def -> turn DOSPUNTOS . LEFTANDRIGHT

    DIRECTION_TURN  shift and go to state 116
    LEFTANDRIGHT    shift and go to state 117


state 79

    (66) face_def -> face DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 118


state 80

    (67) nop_def -> nop DOSPUNTOS .

    SEMICOLON       reduce using rule 67 (nop_def -> nop DOSPUNTOS .)
    RBRACKET        reduce using rule 67 (nop_def -> nop DOSPUNTOS .)


state 81

    (14) final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .

    RBRACKET        reduce using rule 14 (final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .)
    ID              reduce using rule 14 (final_def -> final_def ID DOSPUNTOS INTEGER COMMA INTEGER .)


state 82

    (20) bloques_def -> bloques_def SEMICOLON function_def .

    SEMICOLON       reduce using rule 20 (bloques_def -> bloques_def SEMICOLON function_def .)
    RBRACKET        reduce using rule 20 (bloques_def -> bloques_def SEMICOLON function_def .)


state 83

    (25) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def . then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    then            shift and go to state 119


state 84

    (68) conditions_def -> facing_def .

    then            reduce using rule 68 (conditions_def -> facing_def .)
    do              reduce using rule 68 (conditions_def -> facing_def .)
    LBRACKET        reduce using rule 68 (conditions_def -> facing_def .)


state 85

    (69) conditions_def -> canputpick_def .

    then            reduce using rule 69 (conditions_def -> canputpick_def .)
    do              reduce using rule 69 (conditions_def -> canputpick_def .)
    LBRACKET        reduce using rule 69 (conditions_def -> canputpick_def .)


state 86

    (70) conditions_def -> canmoveandjumptothe_def .

    then            reduce using rule 70 (conditions_def -> canmoveandjumptothe_def .)
    do              reduce using rule 70 (conditions_def -> canmoveandjumptothe_def .)
    LBRACKET        reduce using rule 70 (conditions_def -> canmoveandjumptothe_def .)


state 87

    (71) conditions_def -> canmoveandjumpindir_def .

    then            reduce using rule 71 (conditions_def -> canmoveandjumpindir_def .)
    do              reduce using rule 71 (conditions_def -> canmoveandjumpindir_def .)
    LBRACKET        reduce using rule 71 (conditions_def -> canmoveandjumpindir_def .)


state 88

    (72) conditions_def -> not_def .

    then            reduce using rule 72 (conditions_def -> not_def .)
    do              reduce using rule 72 (conditions_def -> not_def .)
    LBRACKET        reduce using rule 72 (conditions_def -> not_def .)


state 89

    (73) facing_def -> facing . DOSPUNTOS CARDINAL

    DOSPUNTOS       shift and go to state 120


state 90

    (74) canputpick_def -> canput . DOSPUNTOS ID COMMA ITEMS
    (75) canputpick_def -> canput . DOSPUNTOS INTEGER COMMA ITEMS

    DOSPUNTOS       shift and go to state 121


state 91

    (76) canputpick_def -> canpick . DOSPUNTOS INTEGER COMMA ITEMS
    (77) canputpick_def -> canpick . DOSPUNTOS ID COMMA ITEMS

    DOSPUNTOS       shift and go to state 122


state 92

    (82) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA DIRECTION
    (83) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS ID COMMA LEFTANDRIGHT
    (87) canmoveandjumptothe_def -> canmovetothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 123


state 93

    (84) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA DIRECTION
    (88) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> canjumptothe . DOSPUNTOS ID COMMA LEFTANDRIGHT

    DOSPUNTOS       shift and go to state 124


state 94

    (78) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS ID COMMA CARDINAL
    (79) canmoveandjumpindir_def -> canmoveindir . DOSPUNTOS INTEGER COMMA CARDINAL

    DOSPUNTOS       shift and go to state 125


state 95

    (80) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> canjumpindir . DOSPUNTOS ID COMMA CARDINAL

    DOSPUNTOS       shift and go to state 126


state 96

    (90) not_def -> not .

    then            reduce using rule 90 (not_def -> not .)
    do              reduce using rule 90 (not_def -> not .)
    LBRACKET        reduce using rule 90 (not_def -> not .)


state 97

    (29) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def . do DOSPUNTOS LBRACKET while_def RBRACKET

    do              shift and go to state 127


state 98

    (21) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET bloques_def RBRACKET
    (22) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET if_else_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET while_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS conditions_def . LBRACKET repeat_def RBRACKET

    LBRACKET        shift and go to state 128


state 99

    (41) assignTo_def -> assignTo DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 129


state 100

    (42) put_def -> put DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 130


state 101

    (43) put_def -> put DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 131


state 102

    (44) put_def -> pick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 132


state 103

    (45) put_def -> pick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 133


state 104

    (46) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA DIRECTION
    (50) moveandjumptothe_def -> movetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 134


state 105

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 135


state 106

    (48) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (52) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 136


state 107

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA DIRECTION
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 137


state 108

    (54) moveandjumpindir_def -> moveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 138


state 109

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 139


state 110

    (56) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 140


state 111

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 141


state 112

    (58) move_def -> move DOSPUNTOS ID .

    SEMICOLON       reduce using rule 58 (move_def -> move DOSPUNTOS ID .)
    RBRACKET        reduce using rule 58 (move_def -> move DOSPUNTOS ID .)


state 113

    (59) move_def -> move DOSPUNTOS INTEGER .

    SEMICOLON       reduce using rule 59 (move_def -> move DOSPUNTOS INTEGER .)
    RBRACKET        reduce using rule 59 (move_def -> move DOSPUNTOS INTEGER .)


state 114

    (60) goto_def -> goto DOSPUNTOS ID . COMMA ID
    (62) goto_def -> goto DOSPUNTOS ID . COMMA INTEGER

    COMMA           shift and go to state 142


state 115

    (61) goto_def -> goto DOSPUNTOS INTEGER . COMMA INTEGER
    (63) goto_def -> goto DOSPUNTOS INTEGER . COMMA ID

    COMMA           shift and go to state 143


state 116

    (64) turn_def -> turn DOSPUNTOS DIRECTION_TURN .

    SEMICOLON       reduce using rule 64 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)
    RBRACKET        reduce using rule 64 (turn_def -> turn DOSPUNTOS DIRECTION_TURN .)


state 117

    (65) turn_def -> turn DOSPUNTOS LEFTANDRIGHT .

    SEMICOLON       reduce using rule 65 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)
    RBRACKET        reduce using rule 65 (turn_def -> turn DOSPUNTOS LEFTANDRIGHT .)


state 118

    (66) face_def -> face DOSPUNTOS CARDINAL .

    SEMICOLON       reduce using rule 66 (face_def -> face DOSPUNTOS CARDINAL .)
    RBRACKET        reduce using rule 66 (face_def -> face DOSPUNTOS CARDINAL .)


state 119

    (25) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then . DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 144


state 120

    (73) facing_def -> facing DOSPUNTOS . CARDINAL

    CARDINAL        shift and go to state 145


state 121

    (74) canputpick_def -> canput DOSPUNTOS . ID COMMA ITEMS
    (75) canputpick_def -> canput DOSPUNTOS . INTEGER COMMA ITEMS

    ID              shift and go to state 146
    INTEGER         shift and go to state 147


state 122

    (76) canputpick_def -> canpick DOSPUNTOS . INTEGER COMMA ITEMS
    (77) canputpick_def -> canpick DOSPUNTOS . ID COMMA ITEMS

    INTEGER         shift and go to state 148
    ID              shift and go to state 149


state 123

    (82) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA DIRECTION
    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (86) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . ID COMMA LEFTANDRIGHT
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT

    ID              shift and go to state 150
    INTEGER         shift and go to state 151


state 124

    (84) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA DIRECTION
    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA DIRECTION
    (88) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . INTEGER COMMA LEFTANDRIGHT
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS . ID COMMA LEFTANDRIGHT

    INTEGER         shift and go to state 152
    ID              shift and go to state 153


state 125

    (78) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . ID COMMA CARDINAL
    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS . INTEGER COMMA CARDINAL

    ID              shift and go to state 154
    INTEGER         shift and go to state 155


state 126

    (80) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . INTEGER COMMA CARDINAL
    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS . ID COMMA CARDINAL

    INTEGER         shift and go to state 156
    ID              shift and go to state 157


state 127

    (29) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do . DOSPUNTOS LBRACKET while_def RBRACKET

    DOSPUNTOS       shift and go to state 158


state 128

    (21) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . bloques_def RBRACKET
    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . if_else_def RBRACKET
    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . while_def RBRACKET
    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET . repeat_def RBRACKET
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (21) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET
    (22) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET
    (23) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET
    (24) repeat_def -> . repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    while           shift and go to state 39
    repeat          shift and go to state 40
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    bloques_def                    shift and go to state 159
    if_else_def                    shift and go to state 160
    while_def                      shift and go to state 161
    repeat_def                     shift and go to state 162
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 129

    (41) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA . ID

    ID              shift and go to state 163


state 130

    (42) put_def -> put DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 164


state 131

    (43) put_def -> put DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 165


state 132

    (44) put_def -> pick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 166


state 133

    (45) put_def -> pick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 167


state 134

    (46) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . DIRECTION
    (50) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 168
    LEFTANDRIGHT    shift and go to state 169


state 135

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (51) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 170
    LEFTANDRIGHT    shift and go to state 171


state 136

    (48) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (52) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 172
    LEFTANDRIGHT    shift and go to state 173


state 137

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . DIRECTION
    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 174
    LEFTANDRIGHT    shift and go to state 175


state 138

    (54) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 176


state 139

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 177


state 140

    (56) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 178


state 141

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 179


state 142

    (60) goto_def -> goto DOSPUNTOS ID COMMA . ID
    (62) goto_def -> goto DOSPUNTOS ID COMMA . INTEGER

    ID              shift and go to state 180
    INTEGER         shift and go to state 181


state 143

    (61) goto_def -> goto DOSPUNTOS INTEGER COMMA . INTEGER
    (63) goto_def -> goto DOSPUNTOS INTEGER COMMA . ID

    INTEGER         shift and go to state 182
    ID              shift and go to state 183


state 144

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS . LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 184


state 145

    (73) facing_def -> facing DOSPUNTOS CARDINAL .

    then            reduce using rule 73 (facing_def -> facing DOSPUNTOS CARDINAL .)
    do              reduce using rule 73 (facing_def -> facing DOSPUNTOS CARDINAL .)
    LBRACKET        reduce using rule 73 (facing_def -> facing DOSPUNTOS CARDINAL .)


state 146

    (74) canputpick_def -> canput DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 185


state 147

    (75) canputpick_def -> canput DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 186


state 148

    (76) canputpick_def -> canpick DOSPUNTOS INTEGER . COMMA ITEMS

    COMMA           shift and go to state 187


state 149

    (77) canputpick_def -> canpick DOSPUNTOS ID . COMMA ITEMS

    COMMA           shift and go to state 188


state 150

    (82) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA DIRECTION
    (86) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 189


state 151

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 190


state 152

    (84) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA DIRECTION
    (88) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 191


state 153

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID . COMMA LEFTANDRIGHT

    COMMA           shift and go to state 192


state 154

    (78) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 193


state 155

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 194


state 156

    (80) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER . COMMA CARDINAL

    COMMA           shift and go to state 195


state 157

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID . COMMA CARDINAL

    COMMA           shift and go to state 196


state 158

    (29) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET if_else_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS . LBRACKET while_def RBRACKET

    LBRACKET        shift and go to state 197


state 159

    (21) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def . RBRACKET
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 198
    SEMICOLON       shift and go to state 65


state 160

    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 199


state 161

    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 200


state 162

    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def . RBRACKET

    RBRACKET        shift and go to state 201


state 163

    (41) assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .

    SEMICOLON       reduce using rule 41 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)
    RBRACKET        reduce using rule 41 (assignTo_def -> assignTo DOSPUNTOS INTEGER COMMA ID .)


state 164

    (42) put_def -> put DOSPUNTOS ID COMMA ITEMS .

    SEMICOLON       reduce using rule 42 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)
    RBRACKET        reduce using rule 42 (put_def -> put DOSPUNTOS ID COMMA ITEMS .)


state 165

    (43) put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .

    SEMICOLON       reduce using rule 43 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)
    RBRACKET        reduce using rule 43 (put_def -> put DOSPUNTOS INTEGER COMMA ITEMS .)


state 166

    (44) put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .

    SEMICOLON       reduce using rule 44 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)
    RBRACKET        reduce using rule 44 (put_def -> pick DOSPUNTOS INTEGER COMMA ITEMS .)


state 167

    (45) put_def -> pick DOSPUNTOS ID COMMA ITEMS .

    SEMICOLON       reduce using rule 45 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)
    RBRACKET        reduce using rule 45 (put_def -> pick DOSPUNTOS ID COMMA ITEMS .)


state 168

    (46) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .

    SEMICOLON       reduce using rule 46 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)
    RBRACKET        reduce using rule 46 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA DIRECTION .)


state 169

    (50) moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 50 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 50 (moveandjumptothe_def -> movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 170

    (47) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    SEMICOLON       reduce using rule 47 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    RBRACKET        reduce using rule 47 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 171

    (51) moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 51 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 51 (moveandjumptothe_def -> movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 172

    (48) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    SEMICOLON       reduce using rule 48 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    RBRACKET        reduce using rule 48 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 173

    (52) moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 52 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 52 (moveandjumptothe_def -> jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 174

    (49) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .

    SEMICOLON       reduce using rule 49 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)
    RBRACKET        reduce using rule 49 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 175

    (53) moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    SEMICOLON       reduce using rule 53 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    RBRACKET        reduce using rule 53 (moveandjumptothe_def -> jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 176

    (54) moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .

    SEMICOLON       reduce using rule 54 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)
    RBRACKET        reduce using rule 54 (moveandjumpindir_def -> moveindir DOSPUNTOS ID COMMA CARDINAL .)


state 177

    (55) moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    SEMICOLON       reduce using rule 55 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    RBRACKET        reduce using rule 55 (moveandjumpindir_def -> moveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 178

    (56) moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    SEMICOLON       reduce using rule 56 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    RBRACKET        reduce using rule 56 (moveandjumpindir_def -> jumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 179

    (57) moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .

    SEMICOLON       reduce using rule 57 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)
    RBRACKET        reduce using rule 57 (moveandjumpindir_def -> jumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 180

    (60) goto_def -> goto DOSPUNTOS ID COMMA ID .

    SEMICOLON       reduce using rule 60 (goto_def -> goto DOSPUNTOS ID COMMA ID .)
    RBRACKET        reduce using rule 60 (goto_def -> goto DOSPUNTOS ID COMMA ID .)


state 181

    (62) goto_def -> goto DOSPUNTOS ID COMMA INTEGER .

    SEMICOLON       reduce using rule 62 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)
    RBRACKET        reduce using rule 62 (goto_def -> goto DOSPUNTOS ID COMMA INTEGER .)


state 182

    (61) goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .

    SEMICOLON       reduce using rule 61 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)
    RBRACKET        reduce using rule 61 (goto_def -> goto DOSPUNTOS INTEGER COMMA INTEGER .)


state 183

    (63) goto_def -> goto DOSPUNTOS INTEGER COMMA ID .

    SEMICOLON       reduce using rule 63 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)
    RBRACKET        reduce using rule 63 (goto_def -> goto DOSPUNTOS INTEGER COMMA ID .)


state 184

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET . if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    bloques_def                    shift and go to state 202
    if_else_def                    shift and go to state 203
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 185

    (74) canputpick_def -> canput DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 204


state 186

    (75) canputpick_def -> canput DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 205


state 187

    (76) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA . ITEMS

    ITEMS           shift and go to state 206


state 188

    (77) canputpick_def -> canpick DOSPUNTOS ID COMMA . ITEMS

    ITEMS           shift and go to state 207


state 189

    (82) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . DIRECTION
    (86) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 208
    LEFTANDRIGHT    shift and go to state 209


state 190

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 210
    LEFTANDRIGHT    shift and go to state 211


state 191

    (84) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . DIRECTION
    (88) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 212
    LEFTANDRIGHT    shift and go to state 213


state 192

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . DIRECTION
    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA . LEFTANDRIGHT

    DIRECTION       shift and go to state 214
    LEFTANDRIGHT    shift and go to state 215


state 193

    (78) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 216


state 194

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 217


state 195

    (80) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA . CARDINAL

    CARDINAL        shift and go to state 218


state 196

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA . CARDINAL

    CARDINAL        shift and go to state 219


state 197

    (29) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET . while_def RBRACKET
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (29) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET
    (30) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET
    (31) while_def -> . while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    while           shift and go to state 39
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    bloques_def                    shift and go to state 220
    if_else_def                    shift and go to state 221
    while_def                      shift and go to state 222
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 198

    (21) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 21 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET bloques_def RBRACKET .)


state 199

    (22) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 22 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET if_else_def RBRACKET .)


state 200

    (23) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 23 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET while_def RBRACKET .)


state 201

    (24) repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .

    RBRACKET        reduce using rule 24 (repeat_def -> repeat DOSPUNTOS conditions_def LBRACKET repeat_def RBRACKET .)


state 202

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 223
    SEMICOLON       shift and go to state 65


state 203

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def . RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET

    RBRACKET        shift and go to state 224


state 204

    (74) canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 74 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 74 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 74 (canputpick_def -> canput DOSPUNTOS ID COMMA ITEMS .)


state 205

    (75) canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 75 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 75 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 75 (canputpick_def -> canput DOSPUNTOS INTEGER COMMA ITEMS .)


state 206

    (76) canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .

    then            reduce using rule 76 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    do              reduce using rule 76 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)
    LBRACKET        reduce using rule 76 (canputpick_def -> canpick DOSPUNTOS INTEGER COMMA ITEMS .)


state 207

    (77) canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .

    then            reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    do              reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)
    LBRACKET        reduce using rule 77 (canputpick_def -> canpick DOSPUNTOS ID COMMA ITEMS .)


state 208

    (82) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 82 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 82 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 82 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA DIRECTION .)


state 209

    (86) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 86 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 86 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 86 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 210

    (83) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 83 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 211

    (87) canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 87 (canmoveandjumptothe_def -> canmovetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 212

    (84) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .

    then            reduce using rule 84 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    do              reduce using rule 84 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)
    LBRACKET        reduce using rule 84 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA DIRECTION .)


state 213

    (88) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .

    then            reduce using rule 88 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    do              reduce using rule 88 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 88 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT .)


state 214

    (85) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .

    then            reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    do              reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)
    LBRACKET        reduce using rule 85 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA DIRECTION .)


state 215

    (89) canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .

    then            reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    do              reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)
    LBRACKET        reduce using rule 89 (canmoveandjumptothe_def -> canjumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT .)


state 216

    (78) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 78 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 78 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 78 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS ID COMMA CARDINAL .)


state 217

    (79) canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 79 (canmoveandjumpindir_def -> canmoveindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 218

    (80) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .

    then            reduce using rule 80 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    do              reduce using rule 80 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)
    LBRACKET        reduce using rule 80 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS INTEGER COMMA CARDINAL .)


state 219

    (81) canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .

    then            reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    do              reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)
    LBRACKET        reduce using rule 81 (canmoveandjumpindir_def -> canjumpindir DOSPUNTOS ID COMMA CARDINAL .)


state 220

    (29) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 225
    SEMICOLON       shift and go to state 65


state 221

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 226


state 222

    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def . RBRACKET

    RBRACKET        shift and go to state 227


state 223

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 228


state 224

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET . else DOSPUNTOS LBRACKET if_else_def RBRACKET

    else            shift and go to state 229


state 225

    (29) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 29 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 226

    (30) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 30 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 227

    (31) while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .

    RBRACKET        reduce using rule 31 (while_def -> while DOSPUNTOS conditions_def do DOSPUNTOS LBRACKET while_def RBRACKET .)


state 228

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 230


state 229

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else . DOSPUNTOS LBRACKET if_else_def RBRACKET

    DOSPUNTOS       shift and go to state 231


state 230

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 232


state 231

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS . LBRACKET if_else_def RBRACKET

    LBRACKET        shift and go to state 233


state 232

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    bloques_def                    shift and go to state 234
    if_else_def                    shift and go to state 235
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 233

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . bloques_def RBRACKET
    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET . if_else_def RBRACKET
    (19) bloques_def -> . function_def
    (20) bloques_def -> . bloques_def SEMICOLON function_def
    (25) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (26) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET
    (27) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (28) if_else_def -> . if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET
    (32) function_def -> . assignTo_def
    (33) function_def -> . put_def
    (34) function_def -> . moveandjumptothe_def
    (35) function_def -> . moveandjumpindir_def
    (36) function_def -> . move_def
    (37) function_def -> . goto_def
    (38) function_def -> . turn_def
    (39) function_def -> . face_def
    (40) function_def -> . nop_def
    (41) assignTo_def -> . assignTo DOSPUNTOS INTEGER COMMA ID
    (42) put_def -> . put DOSPUNTOS ID COMMA ITEMS
    (43) put_def -> . put DOSPUNTOS INTEGER COMMA ITEMS
    (44) put_def -> . pick DOSPUNTOS INTEGER COMMA ITEMS
    (45) put_def -> . pick DOSPUNTOS ID COMMA ITEMS
    (46) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA DIRECTION
    (47) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA DIRECTION
    (48) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA DIRECTION
    (49) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA DIRECTION
    (50) moveandjumptothe_def -> . movetothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (51) moveandjumptothe_def -> . movetothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (52) moveandjumptothe_def -> . jumptothe DOSPUNTOS INTEGER COMMA LEFTANDRIGHT
    (53) moveandjumptothe_def -> . jumptothe DOSPUNTOS ID COMMA LEFTANDRIGHT
    (54) moveandjumpindir_def -> . moveindir DOSPUNTOS ID COMMA CARDINAL
    (55) moveandjumpindir_def -> . moveindir DOSPUNTOS INTEGER COMMA CARDINAL
    (56) moveandjumpindir_def -> . jumpindir DOSPUNTOS INTEGER COMMA CARDINAL
    (57) moveandjumpindir_def -> . jumpindir DOSPUNTOS ID COMMA CARDINAL
    (58) move_def -> . move DOSPUNTOS ID
    (59) move_def -> . move DOSPUNTOS INTEGER
    (60) goto_def -> . goto DOSPUNTOS ID COMMA ID
    (61) goto_def -> . goto DOSPUNTOS INTEGER COMMA INTEGER
    (62) goto_def -> . goto DOSPUNTOS ID COMMA INTEGER
    (63) goto_def -> . goto DOSPUNTOS INTEGER COMMA ID
    (64) turn_def -> . turn DOSPUNTOS DIRECTION_TURN
    (65) turn_def -> . turn DOSPUNTOS LEFTANDRIGHT
    (66) face_def -> . face DOSPUNTOS CARDINAL
    (67) nop_def -> . nop DOSPUNTOS

    if              shift and go to state 38
    assignTo        shift and go to state 50
    put             shift and go to state 51
    pick            shift and go to state 52
    movetothe       shift and go to state 53
    jumptothe       shift and go to state 54
    moveindir       shift and go to state 55
    jumpindir       shift and go to state 56
    move            shift and go to state 57
    goto            shift and go to state 58
    turn            shift and go to state 59
    face            shift and go to state 60
    nop             shift and go to state 61

    if_else_def                    shift and go to state 236
    bloques_def                    shift and go to state 237
    function_def                   shift and go to state 37
    assignTo_def                   shift and go to state 41
    put_def                        shift and go to state 42
    moveandjumptothe_def           shift and go to state 43
    moveandjumpindir_def           shift and go to state 44
    move_def                       shift and go to state 45
    goto_def                       shift and go to state 46
    turn_def                       shift and go to state 47
    face_def                       shift and go to state 48
    nop_def                        shift and go to state 49

state 234

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 238
    SEMICOLON       shift and go to state 65


state 235

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 239


state 236

    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def . RBRACKET

    RBRACKET        shift and go to state 240


state 237

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def . RBRACKET
    (20) bloques_def -> bloques_def . SEMICOLON function_def

    RBRACKET        shift and go to state 241
    SEMICOLON       shift and go to state 65


state 238

    (25) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 25 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)


state 239

    (27) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 27 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET bloques_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 240

    (28) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .

    RBRACKET        reduce using rule 28 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET if_else_def RBRACKET .)


state 241

    (26) if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .

    RBRACKET        reduce using rule 26 (if_else_def -> if DOSPUNTOS conditions_def then DOSPUNTOS LBRACKET if_else_def RBRACKET else DOSPUNTOS LBRACKET bloques_def RBRACKET .)

